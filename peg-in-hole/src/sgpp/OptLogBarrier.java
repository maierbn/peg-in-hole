/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package sgpp;

public class OptLogBarrier extends OptConstrainedOptimizer {
  private transient long swigCPtr;

  protected OptLogBarrier(long cPtr, boolean cMemoryOwn) {
    super(jsgppJNI.OptLogBarrier_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(OptLogBarrier obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        jsgppJNI.delete_OptLogBarrier(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public OptLogBarrier(OptScalarFunction f, OptScalarFunctionGradient fGradient, OptVectorFunction g, OptVectorFunctionGradient gGradient, long maxItCount, double tolerance, double barrierStartValue, double barrierDecreaseFactor) {
    this(jsgppJNI.new_OptLogBarrier__SWIG_0(OptScalarFunction.getCPtr(f), f, OptScalarFunctionGradient.getCPtr(fGradient), fGradient, OptVectorFunction.getCPtr(g), g, OptVectorFunctionGradient.getCPtr(gGradient), gGradient, maxItCount, tolerance, barrierStartValue, barrierDecreaseFactor), true);
  }

  public OptLogBarrier(OptScalarFunction f, OptScalarFunctionGradient fGradient, OptVectorFunction g, OptVectorFunctionGradient gGradient, long maxItCount, double tolerance, double barrierStartValue) {
    this(jsgppJNI.new_OptLogBarrier__SWIG_1(OptScalarFunction.getCPtr(f), f, OptScalarFunctionGradient.getCPtr(fGradient), fGradient, OptVectorFunction.getCPtr(g), g, OptVectorFunctionGradient.getCPtr(gGradient), gGradient, maxItCount, tolerance, barrierStartValue), true);
  }

  public OptLogBarrier(OptScalarFunction f, OptScalarFunctionGradient fGradient, OptVectorFunction g, OptVectorFunctionGradient gGradient, long maxItCount, double tolerance) {
    this(jsgppJNI.new_OptLogBarrier__SWIG_2(OptScalarFunction.getCPtr(f), f, OptScalarFunctionGradient.getCPtr(fGradient), fGradient, OptVectorFunction.getCPtr(g), g, OptVectorFunctionGradient.getCPtr(gGradient), gGradient, maxItCount, tolerance), true);
  }

  public OptLogBarrier(OptScalarFunction f, OptScalarFunctionGradient fGradient, OptVectorFunction g, OptVectorFunctionGradient gGradient, long maxItCount) {
    this(jsgppJNI.new_OptLogBarrier__SWIG_3(OptScalarFunction.getCPtr(f), f, OptScalarFunctionGradient.getCPtr(fGradient), fGradient, OptVectorFunction.getCPtr(g), g, OptVectorFunctionGradient.getCPtr(gGradient), gGradient, maxItCount), true);
  }

  public OptLogBarrier(OptScalarFunction f, OptScalarFunctionGradient fGradient, OptVectorFunction g, OptVectorFunctionGradient gGradient) {
    this(jsgppJNI.new_OptLogBarrier__SWIG_4(OptScalarFunction.getCPtr(f), f, OptScalarFunctionGradient.getCPtr(fGradient), fGradient, OptVectorFunction.getCPtr(g), g, OptVectorFunctionGradient.getCPtr(gGradient), gGradient), true);
  }

  public OptLogBarrier(OptLogBarrier other) {
    this(jsgppJNI.new_OptLogBarrier__SWIG_5(OptLogBarrier.getCPtr(other), other), true);
  }

  public void optimize() {
    jsgppJNI.OptLogBarrier_optimize(swigCPtr, this);
  }

  public OptScalarFunctionGradient getObjectiveGradient() {
    return new OptScalarFunctionGradient(jsgppJNI.OptLogBarrier_getObjectiveGradient(swigCPtr, this), false);
  }

  public OptVectorFunctionGradient getInequalityConstraintGradient() {
    return new OptVectorFunctionGradient(jsgppJNI.OptLogBarrier_getInequalityConstraintGradient(swigCPtr, this), false);
  }

  public double getTolerance() {
    return jsgppJNI.OptLogBarrier_getTolerance(swigCPtr, this);
  }

  public void setTolerance(double tolerance) {
    jsgppJNI.OptLogBarrier_setTolerance(swigCPtr, this, tolerance);
  }

  public double getBarrierStartValue() {
    return jsgppJNI.OptLogBarrier_getBarrierStartValue(swigCPtr, this);
  }

  public void setBarrierStartValue(double barrierStartValue) {
    jsgppJNI.OptLogBarrier_setBarrierStartValue(swigCPtr, this, barrierStartValue);
  }

  public double getBarrierDecreaseFactor() {
    return jsgppJNI.OptLogBarrier_getBarrierDecreaseFactor(swigCPtr, this);
  }

  public void setBarrierDecreaseFactor(double barrierDecreaseFactor) {
    jsgppJNI.OptLogBarrier_setBarrierDecreaseFactor(swigCPtr, this, barrierDecreaseFactor);
  }

  public DataMatrix getHistoryOfInnerIterationPoints() {
    return new DataMatrix(jsgppJNI.OptLogBarrier_getHistoryOfInnerIterationPoints(swigCPtr, this), false);
  }

  public SizeTVector getHistoryOfInnerIterationNumbers() {
    return new SizeTVector(jsgppJNI.OptLogBarrier_getHistoryOfInnerIterationNumbers(swigCPtr, this), false);
  }

  public void clone(SWIGTYPE_p_std__unique_ptrT_sgpp__optimization__optimizer__UnconstrainedOptimizer_t clone) {
    jsgppJNI.OptLogBarrier_clone(swigCPtr, this, SWIGTYPE_p_std__unique_ptrT_sgpp__optimization__optimizer__UnconstrainedOptimizer_t.getCPtr(clone));
  }

  public final static double DEFAULT_TOLERANCE = jsgppJNI.OptLogBarrier_DEFAULT_TOLERANCE_get();
  public final static double DEFAULT_BARRIER_START_VALUE = jsgppJNI.OptLogBarrier_DEFAULT_BARRIER_START_VALUE_get();
  public final static double DEFAULT_BARRIER_DECREASE_FACTOR = jsgppJNI.OptLogBarrier_DEFAULT_BARRIER_DECREASE_FACTOR_get();
}
