/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package sgpp;

public class HeatEquationParabolicPDESolverSystem extends OperationParabolicPDESolverSystemDirichlet {
  private transient long swigCPtr;

  protected HeatEquationParabolicPDESolverSystem(long cPtr, boolean cMemoryOwn) {
    super(jsgppJNI.HeatEquationParabolicPDESolverSystem_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(HeatEquationParabolicPDESolverSystem obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        jsgppJNI.delete_HeatEquationParabolicPDESolverSystem(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public HeatEquationParabolicPDESolverSystem(Grid SparseGrid, DataVector alpha, double a, double TimestepSize, String OperationMode) {
    this(jsgppJNI.new_HeatEquationParabolicPDESolverSystem__SWIG_0(Grid.getCPtr(SparseGrid), SparseGrid, DataVector.getCPtr(alpha), alpha, a, TimestepSize, OperationMode), true);
  }

  public HeatEquationParabolicPDESolverSystem(Grid SparseGrid, DataVector alpha, double a, double TimestepSize) {
    this(jsgppJNI.new_HeatEquationParabolicPDESolverSystem__SWIG_1(Grid.getCPtr(SparseGrid), SparseGrid, DataVector.getCPtr(alpha), alpha, a, TimestepSize), true);
  }

  public void finishTimestep() {
    jsgppJNI.HeatEquationParabolicPDESolverSystem_finishTimestep(swigCPtr, this);
  }

  public void coarsenAndRefine(boolean isLastTimestep) {
    jsgppJNI.HeatEquationParabolicPDESolverSystem_coarsenAndRefine__SWIG_0(swigCPtr, this, isLastTimestep);
  }

  public void coarsenAndRefine() {
    jsgppJNI.HeatEquationParabolicPDESolverSystem_coarsenAndRefine__SWIG_1(swigCPtr, this);
  }

  public void startTimestep() {
    jsgppJNI.HeatEquationParabolicPDESolverSystem_startTimestep(swigCPtr, this);
  }

}
