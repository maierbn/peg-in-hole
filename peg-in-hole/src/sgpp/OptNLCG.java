/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package sgpp;

public class OptNLCG extends OptUnconstrainedOptimizer {
  private transient long swigCPtr;

  protected OptNLCG(long cPtr, boolean cMemoryOwn) {
    super(jsgppJNI.OptNLCG_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(OptNLCG obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        jsgppJNI.delete_OptNLCG(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public OptNLCG(OptScalarFunction f, OptScalarFunctionGradient fGradient, long maxItCount, double beta, double gamma, double tolerance, double epsilon, double restartThreshold) {
    this(jsgppJNI.new_OptNLCG__SWIG_0(OptScalarFunction.getCPtr(f), f, OptScalarFunctionGradient.getCPtr(fGradient), fGradient, maxItCount, beta, gamma, tolerance, epsilon, restartThreshold), true);
  }

  public OptNLCG(OptScalarFunction f, OptScalarFunctionGradient fGradient, long maxItCount, double beta, double gamma, double tolerance, double epsilon) {
    this(jsgppJNI.new_OptNLCG__SWIG_1(OptScalarFunction.getCPtr(f), f, OptScalarFunctionGradient.getCPtr(fGradient), fGradient, maxItCount, beta, gamma, tolerance, epsilon), true);
  }

  public OptNLCG(OptScalarFunction f, OptScalarFunctionGradient fGradient, long maxItCount, double beta, double gamma, double tolerance) {
    this(jsgppJNI.new_OptNLCG__SWIG_2(OptScalarFunction.getCPtr(f), f, OptScalarFunctionGradient.getCPtr(fGradient), fGradient, maxItCount, beta, gamma, tolerance), true);
  }

  public OptNLCG(OptScalarFunction f, OptScalarFunctionGradient fGradient, long maxItCount, double beta, double gamma) {
    this(jsgppJNI.new_OptNLCG__SWIG_3(OptScalarFunction.getCPtr(f), f, OptScalarFunctionGradient.getCPtr(fGradient), fGradient, maxItCount, beta, gamma), true);
  }

  public OptNLCG(OptScalarFunction f, OptScalarFunctionGradient fGradient, long maxItCount, double beta) {
    this(jsgppJNI.new_OptNLCG__SWIG_4(OptScalarFunction.getCPtr(f), f, OptScalarFunctionGradient.getCPtr(fGradient), fGradient, maxItCount, beta), true);
  }

  public OptNLCG(OptScalarFunction f, OptScalarFunctionGradient fGradient, long maxItCount) {
    this(jsgppJNI.new_OptNLCG__SWIG_5(OptScalarFunction.getCPtr(f), f, OptScalarFunctionGradient.getCPtr(fGradient), fGradient, maxItCount), true);
  }

  public OptNLCG(OptScalarFunction f, OptScalarFunctionGradient fGradient) {
    this(jsgppJNI.new_OptNLCG__SWIG_6(OptScalarFunction.getCPtr(f), f, OptScalarFunctionGradient.getCPtr(fGradient), fGradient), true);
  }

  public OptNLCG(OptNLCG other) {
    this(jsgppJNI.new_OptNLCG__SWIG_7(OptNLCG.getCPtr(other), other), true);
  }

  public void optimize() {
    jsgppJNI.OptNLCG_optimize(swigCPtr, this);
  }

  public OptScalarFunctionGradient getObjectiveGradient() {
    return new OptScalarFunctionGradient(jsgppJNI.OptNLCG_getObjectiveGradient(swigCPtr, this), false);
  }

  public double getBeta() {
    return jsgppJNI.OptNLCG_getBeta(swigCPtr, this);
  }

  public void setBeta(double beta) {
    jsgppJNI.OptNLCG_setBeta(swigCPtr, this, beta);
  }

  public double getGamma() {
    return jsgppJNI.OptNLCG_getGamma(swigCPtr, this);
  }

  public void setGamma(double gamma) {
    jsgppJNI.OptNLCG_setGamma(swigCPtr, this, gamma);
  }

  public double getTolerance() {
    return jsgppJNI.OptNLCG_getTolerance(swigCPtr, this);
  }

  public void setTolerance(double tolerance) {
    jsgppJNI.OptNLCG_setTolerance(swigCPtr, this, tolerance);
  }

  public double getEpsilon() {
    return jsgppJNI.OptNLCG_getEpsilon(swigCPtr, this);
  }

  public void setEpsilon(double epsilon) {
    jsgppJNI.OptNLCG_setEpsilon(swigCPtr, this, epsilon);
  }

  public double getRestartThreshold() {
    return jsgppJNI.OptNLCG_getRestartThreshold(swigCPtr, this);
  }

  public void setRestartThreshold(double restartThreshold) {
    jsgppJNI.OptNLCG_setRestartThreshold(swigCPtr, this, restartThreshold);
  }

  public void clone(SWIGTYPE_p_std__unique_ptrT_sgpp__optimization__optimizer__UnconstrainedOptimizer_t clone) {
    jsgppJNI.OptNLCG_clone(swigCPtr, this, SWIGTYPE_p_std__unique_ptrT_sgpp__optimization__optimizer__UnconstrainedOptimizer_t.getCPtr(clone));
  }

  public final static double DEFAULT_BETA = jsgppJNI.OptNLCG_DEFAULT_BETA_get();
  public final static double DEFAULT_GAMMA = jsgppJNI.OptNLCG_DEFAULT_GAMMA_get();
  public final static double DEFAULT_TOLERANCE = jsgppJNI.OptNLCG_DEFAULT_TOLERANCE_get();
  public final static double DEFAULT_EPSILON = jsgppJNI.OptNLCG_DEFAULT_EPSILON_get();
  public final static double DEFAULT_RESTART_THRESHOLD = jsgppJNI.OptNLCG_DEFAULT_RESTART_THRESHOLD_get();
}
