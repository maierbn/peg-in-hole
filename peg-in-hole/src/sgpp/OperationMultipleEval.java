/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package sgpp;

public class OperationMultipleEval {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected OperationMultipleEval(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(OperationMultipleEval obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        jsgppJNI.delete_OperationMultipleEval(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void mult(DataVector alpha, DataVector result) {
    jsgppJNI.OperationMultipleEval_mult__SWIG_0(swigCPtr, this, DataVector.getCPtr(alpha), alpha, DataVector.getCPtr(result), result);
  }

  public void mult(DataVector alpha, DataVector result, long startIndexData, long endIndexData) {
    jsgppJNI.OperationMultipleEval_mult__SWIG_1(swigCPtr, this, DataVector.getCPtr(alpha), alpha, DataVector.getCPtr(result), result, startIndexData, endIndexData);
  }

  public void multTranspose(DataVector source, DataVector result) {
    jsgppJNI.OperationMultipleEval_multTranspose__SWIG_0(swigCPtr, this, DataVector.getCPtr(source), source, DataVector.getCPtr(result), result);
  }

  public void multTranspose(DataVector source, DataVector result, long startIndexGrid, long endIndexGrid) {
    jsgppJNI.OperationMultipleEval_multTranspose__SWIG_1(swigCPtr, this, DataVector.getCPtr(source), source, DataVector.getCPtr(result), result, startIndexGrid, endIndexGrid);
  }

  public void eval(DataVector alpha, DataVector result) {
    jsgppJNI.OperationMultipleEval_eval(swigCPtr, this, DataVector.getCPtr(alpha), alpha, DataVector.getCPtr(result), result);
  }

  public void prepare() {
    jsgppJNI.OperationMultipleEval_prepare(swigCPtr, this);
  }

  public double getDuration() {
    return jsgppJNI.OperationMultipleEval_getDuration(swigCPtr, this);
  }

  public String getImplementationName() {
    return jsgppJNI.OperationMultipleEval_getImplementationName(swigCPtr, this);
  }

}
