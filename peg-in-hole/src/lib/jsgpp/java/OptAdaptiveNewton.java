/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package sgpp;

public class OptAdaptiveNewton extends OptUnconstrainedOptimizer {
  private transient long swigCPtr;

  protected OptAdaptiveNewton(long cPtr, boolean cMemoryOwn) {
    super(jsgppJNI.OptAdaptiveNewton_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(OptAdaptiveNewton obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        jsgppJNI.delete_OptAdaptiveNewton(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public OptAdaptiveNewton(OptScalarFunction f, OptScalarFunctionHessian fHessian, long maxItCount, double tolerance, double stepSizeIncreaseFactor, double stepSizeDecreaseFactor, double dampingIncreaseFactor, double dampingDecreaseFactor, double lineSearchAccuracy) {
    this(jsgppJNI.new_OptAdaptiveNewton__SWIG_0(OptScalarFunction.getCPtr(f), f, OptScalarFunctionHessian.getCPtr(fHessian), fHessian, maxItCount, tolerance, stepSizeIncreaseFactor, stepSizeDecreaseFactor, dampingIncreaseFactor, dampingDecreaseFactor, lineSearchAccuracy), true);
  }

  public OptAdaptiveNewton(OptScalarFunction f, OptScalarFunctionHessian fHessian, long maxItCount, double tolerance, double stepSizeIncreaseFactor, double stepSizeDecreaseFactor, double dampingIncreaseFactor, double dampingDecreaseFactor) {
    this(jsgppJNI.new_OptAdaptiveNewton__SWIG_1(OptScalarFunction.getCPtr(f), f, OptScalarFunctionHessian.getCPtr(fHessian), fHessian, maxItCount, tolerance, stepSizeIncreaseFactor, stepSizeDecreaseFactor, dampingIncreaseFactor, dampingDecreaseFactor), true);
  }

  public OptAdaptiveNewton(OptScalarFunction f, OptScalarFunctionHessian fHessian, long maxItCount, double tolerance, double stepSizeIncreaseFactor, double stepSizeDecreaseFactor, double dampingIncreaseFactor) {
    this(jsgppJNI.new_OptAdaptiveNewton__SWIG_2(OptScalarFunction.getCPtr(f), f, OptScalarFunctionHessian.getCPtr(fHessian), fHessian, maxItCount, tolerance, stepSizeIncreaseFactor, stepSizeDecreaseFactor, dampingIncreaseFactor), true);
  }

  public OptAdaptiveNewton(OptScalarFunction f, OptScalarFunctionHessian fHessian, long maxItCount, double tolerance, double stepSizeIncreaseFactor, double stepSizeDecreaseFactor) {
    this(jsgppJNI.new_OptAdaptiveNewton__SWIG_3(OptScalarFunction.getCPtr(f), f, OptScalarFunctionHessian.getCPtr(fHessian), fHessian, maxItCount, tolerance, stepSizeIncreaseFactor, stepSizeDecreaseFactor), true);
  }

  public OptAdaptiveNewton(OptScalarFunction f, OptScalarFunctionHessian fHessian, long maxItCount, double tolerance, double stepSizeIncreaseFactor) {
    this(jsgppJNI.new_OptAdaptiveNewton__SWIG_4(OptScalarFunction.getCPtr(f), f, OptScalarFunctionHessian.getCPtr(fHessian), fHessian, maxItCount, tolerance, stepSizeIncreaseFactor), true);
  }

  public OptAdaptiveNewton(OptScalarFunction f, OptScalarFunctionHessian fHessian, long maxItCount, double tolerance) {
    this(jsgppJNI.new_OptAdaptiveNewton__SWIG_5(OptScalarFunction.getCPtr(f), f, OptScalarFunctionHessian.getCPtr(fHessian), fHessian, maxItCount, tolerance), true);
  }

  public OptAdaptiveNewton(OptScalarFunction f, OptScalarFunctionHessian fHessian, long maxItCount) {
    this(jsgppJNI.new_OptAdaptiveNewton__SWIG_6(OptScalarFunction.getCPtr(f), f, OptScalarFunctionHessian.getCPtr(fHessian), fHessian, maxItCount), true);
  }

  public OptAdaptiveNewton(OptScalarFunction f, OptScalarFunctionHessian fHessian) {
    this(jsgppJNI.new_OptAdaptiveNewton__SWIG_7(OptScalarFunction.getCPtr(f), f, OptScalarFunctionHessian.getCPtr(fHessian), fHessian), true);
  }

  public OptAdaptiveNewton(OptScalarFunction f, OptScalarFunctionHessian fHessian, long maxItCount, double tolerance, double stepSizeIncreaseFactor, double stepSizeDecreaseFactor, double dampingIncreaseFactor, double dampingDecreaseFactor, double lineSearchAccuracy, OptSLESolver sleSolver) {
    this(jsgppJNI.new_OptAdaptiveNewton__SWIG_8(OptScalarFunction.getCPtr(f), f, OptScalarFunctionHessian.getCPtr(fHessian), fHessian, maxItCount, tolerance, stepSizeIncreaseFactor, stepSizeDecreaseFactor, dampingIncreaseFactor, dampingDecreaseFactor, lineSearchAccuracy, OptSLESolver.getCPtr(sleSolver), sleSolver), true);
  }

  public OptAdaptiveNewton(OptAdaptiveNewton other) {
    this(jsgppJNI.new_OptAdaptiveNewton__SWIG_9(OptAdaptiveNewton.getCPtr(other), other), true);
  }

  public void optimize() {
    jsgppJNI.OptAdaptiveNewton_optimize(swigCPtr, this);
  }

  public OptScalarFunctionHessian getObjectiveHessian() {
    return new OptScalarFunctionHessian(jsgppJNI.OptAdaptiveNewton_getObjectiveHessian(swigCPtr, this), false);
  }

  public double getTolerance() {
    return jsgppJNI.OptAdaptiveNewton_getTolerance(swigCPtr, this);
  }

  public void setTolerance(double tolerance) {
    jsgppJNI.OptAdaptiveNewton_setTolerance(swigCPtr, this, tolerance);
  }

  public double getStepSizeIncreaseFactor() {
    return jsgppJNI.OptAdaptiveNewton_getStepSizeIncreaseFactor(swigCPtr, this);
  }

  public void setStepSizeIncreaseFactor(double stepSizeIncreaseFactor) {
    jsgppJNI.OptAdaptiveNewton_setStepSizeIncreaseFactor(swigCPtr, this, stepSizeIncreaseFactor);
  }

  public double getStepSizeDecreaseFactor() {
    return jsgppJNI.OptAdaptiveNewton_getStepSizeDecreaseFactor(swigCPtr, this);
  }

  public void setStepSizeDecreaseFactor(double stepSizeDecreaseFactor) {
    jsgppJNI.OptAdaptiveNewton_setStepSizeDecreaseFactor(swigCPtr, this, stepSizeDecreaseFactor);
  }

  public double getDampingIncreaseFactor() {
    return jsgppJNI.OptAdaptiveNewton_getDampingIncreaseFactor(swigCPtr, this);
  }

  public void setDampingIncreaseFactor(double dampingIncreaseFactor) {
    jsgppJNI.OptAdaptiveNewton_setDampingIncreaseFactor(swigCPtr, this, dampingIncreaseFactor);
  }

  public double getDampingDecreaseFactor() {
    return jsgppJNI.OptAdaptiveNewton_getDampingDecreaseFactor(swigCPtr, this);
  }

  public void setDampingDecreaseFactor(double dampingDecreaseFactor) {
    jsgppJNI.OptAdaptiveNewton_setDampingDecreaseFactor(swigCPtr, this, dampingDecreaseFactor);
  }

  public double getLineSearchAccuracy() {
    return jsgppJNI.OptAdaptiveNewton_getLineSearchAccuracy(swigCPtr, this);
  }

  public void setLineSearchAccuracy(double lineSearchAccuracy) {
    jsgppJNI.OptAdaptiveNewton_setLineSearchAccuracy(swigCPtr, this, lineSearchAccuracy);
  }

  public void clone(SWIGTYPE_p_std__unique_ptrT_sgpp__optimization__optimizer__UnconstrainedOptimizer_t clone) {
    jsgppJNI.OptAdaptiveNewton_clone(swigCPtr, this, SWIGTYPE_p_std__unique_ptrT_sgpp__optimization__optimizer__UnconstrainedOptimizer_t.getCPtr(clone));
  }

  public final static double DEFAULT_TOLERANCE = jsgppJNI.OptAdaptiveNewton_DEFAULT_TOLERANCE_get();
  public final static double DEFAULT_STEP_SIZE_INCREASE_FACTOR = jsgppJNI.OptAdaptiveNewton_DEFAULT_STEP_SIZE_INCREASE_FACTOR_get();
  public final static double DEFAULT_STEP_SIZE_DECREASE_FACTOR = jsgppJNI.OptAdaptiveNewton_DEFAULT_STEP_SIZE_DECREASE_FACTOR_get();
  public final static double DEFAULT_DAMPING_INCREASE_FACTOR = jsgppJNI.OptAdaptiveNewton_DEFAULT_DAMPING_INCREASE_FACTOR_get();
  public final static double DEFAULT_DAMPING_DECREASE_FACTOR = jsgppJNI.OptAdaptiveNewton_DEFAULT_DAMPING_DECREASE_FACTOR_get();
  public final static double DEFAULT_LINE_SEARCH_ACCURACY = jsgppJNI.OptAdaptiveNewton_DEFAULT_LINE_SEARCH_ACCURACY_get();
}
