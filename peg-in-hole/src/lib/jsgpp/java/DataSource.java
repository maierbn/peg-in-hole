/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package sgpp;

public class DataSource {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected DataSource(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(DataSource obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        jsgppJNI.delete_DataSource(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public DataSource(DataSourceConfig config, SampleProvider sampleProvider) {
    this(jsgppJNI.new_DataSource(DataSourceConfig.getCPtr(config), config, SampleProvider.getCPtr(sampleProvider), sampleProvider), true);
  }

  public DataSourceConfig getConfig() {
    return new DataSourceConfig(jsgppJNI.DataSource_getConfig(swigCPtr, this), false);
  }

  public Dataset getNextSamples() {
    long cPtr = jsgppJNI.DataSource_getNextSamples(swigCPtr, this);
    return (cPtr == 0) ? null : new Dataset(cPtr, false);
  }

  public long getCurrentIteration() {
    return jsgppJNI.DataSource_getCurrentIteration(swigCPtr, this);
  }

}
