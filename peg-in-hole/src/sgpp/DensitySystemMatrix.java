/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package sgpp;

public class DensitySystemMatrix extends OperationMatrix {
  private transient long swigCPtr;

  protected DensitySystemMatrix(long cPtr, boolean cMemoryOwn) {
    super(jsgppJNI.DensitySystemMatrix_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(DensitySystemMatrix obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        jsgppJNI.delete_DensitySystemMatrix(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public DensitySystemMatrix(Grid grid, DataMatrix trainData, OperationMatrix C, double lambda) {
    this(jsgppJNI.new_DensitySystemMatrix(Grid.getCPtr(grid), grid, DataMatrix.getCPtr(trainData), trainData, OperationMatrix.getCPtr(C), C, lambda), true);
  }

  public void mult(DataVector alpha, DataVector result) {
    jsgppJNI.DensitySystemMatrix_mult(swigCPtr, this, DataVector.getCPtr(alpha), alpha, DataVector.getCPtr(result), result);
  }

  public void generateb(DataVector b) {
    jsgppJNI.DensitySystemMatrix_generateb(swigCPtr, this, DataVector.getCPtr(b), b);
  }

}
