/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package sgpp;

public class SBsplineBoundaryBase extends SBasis {
  private transient long swigCPtr;

  protected SBsplineBoundaryBase(long cPtr, boolean cMemoryOwn) {
    super(jsgppJNI.SBsplineBoundaryBase_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(SBsplineBoundaryBase obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        jsgppJNI.delete_SBsplineBoundaryBase(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public SBsplineBoundaryBase() {
    this(jsgppJNI.new_SBsplineBoundaryBase__SWIG_0(), true);
  }

  public SBsplineBoundaryBase(long degree) {
    this(jsgppJNI.new_SBsplineBoundaryBase__SWIG_1(degree), true);
  }

  public double eval(long l, long i, double x) {
    return jsgppJNI.SBsplineBoundaryBase_eval(swigCPtr, this, l, i, x);
  }

  public double evalDx(long l, long i, double x) {
    return jsgppJNI.SBsplineBoundaryBase_evalDx(swigCPtr, this, l, i, x);
  }

  public double evalDxDx(long l, long i, double x) {
    return jsgppJNI.SBsplineBoundaryBase_evalDxDx(swigCPtr, this, l, i, x);
  }

  public long getDegree() {
    return jsgppJNI.SBsplineBoundaryBase_getDegree(swigCPtr, this);
  }

}
