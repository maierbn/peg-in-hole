/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package sgpp;

public class OptUnconstrainedOptimizer {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected OptUnconstrainedOptimizer(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(OptUnconstrainedOptimizer obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        jsgppJNI.delete_OptUnconstrainedOptimizer(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void optimize() {
    jsgppJNI.OptUnconstrainedOptimizer_optimize(swigCPtr, this);
  }

  public OptScalarFunction getObjectiveFunction() {
    return new OptScalarFunction(jsgppJNI.OptUnconstrainedOptimizer_getObjectiveFunction(swigCPtr, this), false);
  }

  public long getN() {
    return jsgppJNI.OptUnconstrainedOptimizer_getN(swigCPtr, this);
  }

  public void setN(long N) {
    jsgppJNI.OptUnconstrainedOptimizer_setN(swigCPtr, this, N);
  }

  public DataVector getStartingPoint() {
    return new DataVector(jsgppJNI.OptUnconstrainedOptimizer_getStartingPoint(swigCPtr, this), false);
  }

  public void setStartingPoint(DataVector startingPoint) {
    jsgppJNI.OptUnconstrainedOptimizer_setStartingPoint(swigCPtr, this, DataVector.getCPtr(startingPoint), startingPoint);
  }

  public DataVector getOptimalPoint() {
    return new DataVector(jsgppJNI.OptUnconstrainedOptimizer_getOptimalPoint(swigCPtr, this), false);
  }

  public double getOptimalValue() {
    return jsgppJNI.OptUnconstrainedOptimizer_getOptimalValue(swigCPtr, this);
  }

  public DataMatrix getHistoryOfOptimalPoints() {
    return new DataMatrix(jsgppJNI.OptUnconstrainedOptimizer_getHistoryOfOptimalPoints(swigCPtr, this), false);
  }

  public DataVector getHistoryOfOptimalValues() {
    return new DataVector(jsgppJNI.OptUnconstrainedOptimizer_getHistoryOfOptimalValues(swigCPtr, this), false);
  }

  public void clone(SWIGTYPE_p_std__unique_ptrT_sgpp__optimization__optimizer__UnconstrainedOptimizer_t clone) {
    jsgppJNI.OptUnconstrainedOptimizer_clone(swigCPtr, this, SWIGTYPE_p_std__unique_ptrT_sgpp__optimization__optimizer__UnconstrainedOptimizer_t.getCPtr(clone));
  }

  public final static long DEFAULT_N = jsgppJNI.OptUnconstrainedOptimizer_DEFAULT_N_get();
}
