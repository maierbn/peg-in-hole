/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package sgpp;

public class SplittingScorer extends Scorer {
  private transient long swigCPtr;

  protected SplittingScorer(long cPtr, boolean cMemoryOwn) {
    super(jsgppJNI.SplittingScorer_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(SplittingScorer obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        jsgppJNI.delete_SplittingScorer(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public SplittingScorer(Metric metric, ShufflingFunctor shuffling, long seed, double trainPortion) {
    this(jsgppJNI.new_SplittingScorer__SWIG_0(Metric.getCPtr(metric), metric, ShufflingFunctor.getCPtr(shuffling), shuffling, seed, trainPortion), true);
  }

  public SplittingScorer(Metric metric, ShufflingFunctor shuffling, long seed) {
    this(jsgppJNI.new_SplittingScorer__SWIG_1(Metric.getCPtr(metric), metric, ShufflingFunctor.getCPtr(shuffling), shuffling, seed), true);
  }

  public SplittingScorer(Metric metric, ShufflingFunctor shuffling) {
    this(jsgppJNI.new_SplittingScorer__SWIG_2(Metric.getCPtr(metric), metric, ShufflingFunctor.getCPtr(shuffling), shuffling), true);
  }

  public Scorer clone() {
    long cPtr = jsgppJNI.SplittingScorer_clone(swigCPtr, this);
    return (cPtr == 0) ? null : new Scorer(cPtr, false);
  }

  public double calculateScore(ModelFittingBase model, Dataset dataset, SWIGTYPE_p_double stdDeviation) {
    return jsgppJNI.SplittingScorer_calculateScore__SWIG_0(swigCPtr, this, ModelFittingBase.getCPtr(model), model, Dataset.getCPtr(dataset), dataset, SWIGTYPE_p_double.getCPtr(stdDeviation));
  }

  public double calculateScore(ModelFittingBase model, Dataset dataset) {
    return jsgppJNI.SplittingScorer_calculateScore__SWIG_1(swigCPtr, this, ModelFittingBase.getCPtr(model), model, Dataset.getCPtr(dataset), dataset);
  }

}
