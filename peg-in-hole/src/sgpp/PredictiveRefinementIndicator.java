/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package sgpp;

public class PredictiveRefinementIndicator extends RefinementFunctor {
  private transient long swigCPtr;

  protected PredictiveRefinementIndicator(long cPtr, boolean cMemoryOwn) {
    super(jsgppJNI.PredictiveRefinementIndicator_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(PredictiveRefinementIndicator obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        jsgppJNI.delete_PredictiveRefinementIndicator(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public PredictiveRefinementIndicator(Grid grid, DataMatrix dataSet, DataVector errorVector, long refinements_num, double threshold, java.math.BigInteger minSupportPoints) {
    this(jsgppJNI.new_PredictiveRefinementIndicator__SWIG_0(Grid.getCPtr(grid), grid, DataMatrix.getCPtr(dataSet), dataSet, DataVector.getCPtr(errorVector), errorVector, refinements_num, threshold, minSupportPoints), true);
  }

  public PredictiveRefinementIndicator(Grid grid, DataMatrix dataSet, DataVector errorVector, long refinements_num, double threshold) {
    this(jsgppJNI.new_PredictiveRefinementIndicator__SWIG_1(Grid.getCPtr(grid), grid, DataMatrix.getCPtr(dataSet), dataSet, DataVector.getCPtr(errorVector), errorVector, refinements_num, threshold), true);
  }

  public PredictiveRefinementIndicator(Grid grid, DataMatrix dataSet, DataVector errorVector, long refinements_num) {
    this(jsgppJNI.new_PredictiveRefinementIndicator__SWIG_2(Grid.getCPtr(grid), grid, DataMatrix.getCPtr(dataSet), dataSet, DataVector.getCPtr(errorVector), errorVector, refinements_num), true);
  }

  public PredictiveRefinementIndicator(Grid grid, DataMatrix dataSet, DataVector errorVector) {
    this(jsgppJNI.new_PredictiveRefinementIndicator__SWIG_3(Grid.getCPtr(grid), grid, DataMatrix.getCPtr(dataSet), dataSet, DataVector.getCPtr(errorVector), errorVector), true);
  }

  public double operatorParentheses(GridPoint point) {
    return jsgppJNI.PredictiveRefinementIndicator_operatorParentheses__SWIG_0(swigCPtr, this, GridPoint.getCPtr(point), point);
  }

  public double runOperator(GridStorage storage, long seq) {
    return jsgppJNI.PredictiveRefinementIndicator_runOperator(swigCPtr, this, GridStorage.getCPtr(storage), storage, seq);
  }

  public long getRefinementsNum() {
    return jsgppJNI.PredictiveRefinementIndicator_getRefinementsNum(swigCPtr, this);
  }

  public double getRefinementThreshold() {
    return jsgppJNI.PredictiveRefinementIndicator_getRefinementThreshold(swigCPtr, this);
  }

  public double start() {
    return jsgppJNI.PredictiveRefinementIndicator_start(swigCPtr, this);
  }

  public java.math.BigInteger getMinSupportPoints() {
    return jsgppJNI.PredictiveRefinementIndicator_getMinSupportPoints(swigCPtr, this);
  }

  public void setMinSupportPoints(java.math.BigInteger minSupportPoints) {
    jsgppJNI.PredictiveRefinementIndicator_setMinSupportPoints(swigCPtr, this, minSupportPoints);
  }

  public double operatorParentheses(GridStorage storage, long seq) {
    return jsgppJNI.PredictiveRefinementIndicator_operatorParentheses__SWIG_1(swigCPtr, this, GridStorage.getCPtr(storage), storage, seq);
  }

}
