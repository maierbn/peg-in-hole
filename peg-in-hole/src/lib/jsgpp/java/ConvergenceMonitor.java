/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package sgpp;

public class ConvergenceMonitor {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected ConvergenceMonitor(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(ConvergenceMonitor obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        jsgppJNI.delete_ConvergenceMonitor(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public ConvergenceMonitor(double pDeclineThreshold, long pBufferSize, long pMinRefInterval) {
    this(jsgppJNI.new_ConvergenceMonitor(pDeclineThreshold, pBufferSize, pMinRefInterval), true);
  }

  public void pushToBuffer(double currentValidError, double currentTrainError) {
    jsgppJNI.ConvergenceMonitor_pushToBuffer(swigCPtr, this, currentValidError, currentTrainError);
  }

  public boolean checkConvergence() {
    return jsgppJNI.ConvergenceMonitor_checkConvergence(swigCPtr, this);
  }

  public void setNextRefCnt(long value) {
    jsgppJNI.ConvergenceMonitor_nextRefCnt_set(swigCPtr, this, value);
  }

  public long getNextRefCnt() {
    return jsgppJNI.ConvergenceMonitor_nextRefCnt_get(swigCPtr, this);
  }

  public void setMinRefInterval(long value) {
    jsgppJNI.ConvergenceMonitor_minRefInterval_set(swigCPtr, this, value);
  }

  public long getMinRefInterval() {
    return jsgppJNI.ConvergenceMonitor_minRefInterval_get(swigCPtr, this);
  }

  public void setValidErrorDeclineBuffer(SWIGTYPE_p_std__dequeT_double_t value) {
    jsgppJNI.ConvergenceMonitor_validErrorDeclineBuffer_set(swigCPtr, this, SWIGTYPE_p_std__dequeT_double_t.getCPtr(value));
  }

  public SWIGTYPE_p_std__dequeT_double_t getValidErrorDeclineBuffer() {
    return new SWIGTYPE_p_std__dequeT_double_t(jsgppJNI.ConvergenceMonitor_validErrorDeclineBuffer_get(swigCPtr, this), true);
  }

  public void setTrainErrorDeclineBuffer(SWIGTYPE_p_std__dequeT_double_t value) {
    jsgppJNI.ConvergenceMonitor_trainErrorDeclineBuffer_set(swigCPtr, this, SWIGTYPE_p_std__dequeT_double_t.getCPtr(value));
  }

  public SWIGTYPE_p_std__dequeT_double_t getTrainErrorDeclineBuffer() {
    return new SWIGTYPE_p_std__dequeT_double_t(jsgppJNI.ConvergenceMonitor_trainErrorDeclineBuffer_get(swigCPtr, this), true);
  }

}
