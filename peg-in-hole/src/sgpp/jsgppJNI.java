/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package sgpp;

public class jsgppJNI {
  public final static native double M_E_get();
  public final static native double M_LOG2E_get();
  public final static native double M_LOG10E_get();
  public final static native double M_LN2_get();
  public final static native double M_LN10_get();
  public final static native double M_PI_get();
  public final static native double M_PI_2_get();
  public final static native double M_PI_4_get();
  public final static native double M_1_PI_get();
  public final static native double M_2_PI_get();
  public final static native double M_2_SQRTPI_get();
  public final static native double M_SQRT2_get();
  public final static native double M_SQRT1_2_get();
  public final static native double M_1_SQRT2PI_get();
  public final static native long new_DoubleVector__SWIG_0();
  public final static native long new_DoubleVector__SWIG_1(long jarg1);
  public final static native long DoubleVector_size(long jarg1, DoubleVector jarg1_);
  public final static native long DoubleVector_capacity(long jarg1, DoubleVector jarg1_);
  public final static native void DoubleVector_reserve(long jarg1, DoubleVector jarg1_, long jarg2);
  public final static native boolean DoubleVector_isEmpty(long jarg1, DoubleVector jarg1_);
  public final static native void DoubleVector_clear(long jarg1, DoubleVector jarg1_);
  public final static native void DoubleVector_add(long jarg1, DoubleVector jarg1_, double jarg2);
  public final static native double DoubleVector_get(long jarg1, DoubleVector jarg1_, int jarg2);
  public final static native void DoubleVector_set(long jarg1, DoubleVector jarg1_, int jarg2, double jarg3);
  public final static native void delete_DoubleVector(long jarg1);
  public final static native long new_FloatVector__SWIG_0();
  public final static native long new_FloatVector__SWIG_1(long jarg1);
  public final static native long FloatVector_size(long jarg1, FloatVector jarg1_);
  public final static native long FloatVector_capacity(long jarg1, FloatVector jarg1_);
  public final static native void FloatVector_reserve(long jarg1, FloatVector jarg1_, long jarg2);
  public final static native boolean FloatVector_isEmpty(long jarg1, FloatVector jarg1_);
  public final static native void FloatVector_clear(long jarg1, FloatVector jarg1_);
  public final static native void FloatVector_add(long jarg1, FloatVector jarg1_, float jarg2);
  public final static native float FloatVector_get(long jarg1, FloatVector jarg1_, int jarg2);
  public final static native void FloatVector_set(long jarg1, FloatVector jarg1_, int jarg2, float jarg3);
  public final static native void delete_FloatVector(long jarg1);
  public final static native long new_IndexValPair__SWIG_0();
  public final static native long new_IndexValPair__SWIG_1(long jarg1, double jarg2);
  public final static native long new_IndexValPair__SWIG_2(long jarg1, IndexValPair jarg1_);
  public final static native void IndexValPair_first_set(long jarg1, IndexValPair jarg1_, long jarg2);
  public final static native long IndexValPair_first_get(long jarg1, IndexValPair jarg1_);
  public final static native void IndexValPair_second_set(long jarg1, IndexValPair jarg1_, double jarg2);
  public final static native double IndexValPair_second_get(long jarg1, IndexValPair jarg1_);
  public final static native void delete_IndexValPair(long jarg1);
  public final static native long new_IndexValVector__SWIG_0();
  public final static native long new_IndexValVector__SWIG_1(long jarg1);
  public final static native long IndexValVector_size(long jarg1, IndexValVector jarg1_);
  public final static native long IndexValVector_capacity(long jarg1, IndexValVector jarg1_);
  public final static native void IndexValVector_reserve(long jarg1, IndexValVector jarg1_, long jarg2);
  public final static native boolean IndexValVector_isEmpty(long jarg1, IndexValVector jarg1_);
  public final static native void IndexValVector_clear(long jarg1, IndexValVector jarg1_);
  public final static native void IndexValVector_add(long jarg1, IndexValVector jarg1_, long jarg2, IndexValPair jarg2_);
  public final static native long IndexValVector_get(long jarg1, IndexValVector jarg1_, int jarg2);
  public final static native void IndexValVector_set(long jarg1, IndexValVector jarg1_, int jarg2, long jarg3, IndexValPair jarg3_);
  public final static native void delete_IndexValVector(long jarg1);
  public final static native long new_SizeTVector__SWIG_0();
  public final static native long new_SizeTVector__SWIG_1(long jarg1);
  public final static native long SizeTVector_size(long jarg1, SizeTVector jarg1_);
  public final static native long SizeTVector_capacity(long jarg1, SizeTVector jarg1_);
  public final static native void SizeTVector_reserve(long jarg1, SizeTVector jarg1_, long jarg2);
  public final static native boolean SizeTVector_isEmpty(long jarg1, SizeTVector jarg1_);
  public final static native void SizeTVector_clear(long jarg1, SizeTVector jarg1_);
  public final static native void SizeTVector_add(long jarg1, SizeTVector jarg1_, long jarg2);
  public final static native long SizeTVector_get(long jarg1, SizeTVector jarg1_, int jarg2);
  public final static native void SizeTVector_set(long jarg1, SizeTVector jarg1_, int jarg2, long jarg3);
  public final static native void delete_SizeTVector(long jarg1);
  public final static native double SBasis_eval(long jarg1, SBasis jarg1_, long jarg2, long jarg3, double jarg4);
  public final static native void delete_SBasis(long jarg1);
  public final static native void RegularGridConfiguration_type__set(long jarg1, RegularGridConfiguration jarg1_, int jarg2);
  public final static native int RegularGridConfiguration_type__get(long jarg1, RegularGridConfiguration jarg1_);
  public final static native void RegularGridConfiguration_dim__set(long jarg1, RegularGridConfiguration jarg1_, long jarg2);
  public final static native long RegularGridConfiguration_dim__get(long jarg1, RegularGridConfiguration jarg1_);
  public final static native void RegularGridConfiguration_level__set(long jarg1, RegularGridConfiguration jarg1_, int jarg2);
  public final static native int RegularGridConfiguration_level__get(long jarg1, RegularGridConfiguration jarg1_);
  public final static native long new_RegularGridConfiguration();
  public final static native void delete_RegularGridConfiguration(long jarg1);
  public final static native void AdpativityConfiguration_numRefinements__set(long jarg1, AdpativityConfiguration jarg1_, long jarg2);
  public final static native long AdpativityConfiguration_numRefinements__get(long jarg1, AdpativityConfiguration jarg1_);
  public final static native void AdpativityConfiguration_threshold__set(long jarg1, AdpativityConfiguration jarg1_, double jarg2);
  public final static native double AdpativityConfiguration_threshold__get(long jarg1, AdpativityConfiguration jarg1_);
  public final static native void AdpativityConfiguration_maxLevelType__set(long jarg1, AdpativityConfiguration jarg1_, boolean jarg2);
  public final static native boolean AdpativityConfiguration_maxLevelType__get(long jarg1, AdpativityConfiguration jarg1_);
  public final static native void AdpativityConfiguration_noPoints__set(long jarg1, AdpativityConfiguration jarg1_, long jarg2);
  public final static native long AdpativityConfiguration_noPoints__get(long jarg1, AdpativityConfiguration jarg1_);
  public final static native void AdpativityConfiguration_percent__set(long jarg1, AdpativityConfiguration jarg1_, double jarg2);
  public final static native double AdpativityConfiguration_percent__get(long jarg1, AdpativityConfiguration jarg1_);
  public final static native long new_AdpativityConfiguration();
  public final static native void delete_AdpativityConfiguration(long jarg1);
  public final static native long Grid_createGrid(long jarg1, RegularGridConfiguration jarg1_);
  public final static native long Grid_createLinearGrid(long jarg1);
  public final static native long Grid_createLinearStretchedGrid(long jarg1);
  public final static native long Grid_createLinearBoundaryGrid__SWIG_0(long jarg1, long jarg2);
  public final static native long Grid_createLinearClenshawCurtisGrid(long jarg1);
  public final static native long Grid_createLinearBoundaryGrid__SWIG_1(long jarg1);
  public final static native long Grid_createLinearStretchedBoundaryGrid(long jarg1);
  public final static native long Grid_createModLinearGrid(long jarg1);
  public final static native long Grid_createPolyGrid(long jarg1, long jarg2);
  public final static native long Grid_createPolyBoundaryGrid(long jarg1, long jarg2);
  public final static native long Grid_createModPolyGrid(long jarg1, long jarg2);
  public final static native long Grid_createWaveletGrid(long jarg1);
  public final static native long Grid_createWaveletBoundaryGrid(long jarg1);
  public final static native long Grid_createModWaveletGrid(long jarg1);
  public final static native long Grid_createBsplineGrid(long jarg1, long jarg2);
  public final static native long Grid_createBsplineBoundaryGrid(long jarg1, long jarg2);
  public final static native long Grid_createBsplineClenshawCurtisGrid(long jarg1, long jarg2);
  public final static native long Grid_createModBsplineGrid(long jarg1, long jarg2);
  public final static native long Grid_createModBsplineClenshawCurtisGrid(long jarg1, long jarg2);
  public final static native long Grid_createFundamentalSplineGrid(long jarg1, long jarg2);
  public final static native long Grid_createModFundamentalSplineGrid(long jarg1, long jarg2);
  public final static native long Grid_createSquareRootGrid(long jarg1);
  public final static native long Grid_createLinearTruncatedBoundaryGrid(long jarg1);
  public final static native long Grid_createPrewaveletGrid(long jarg1);
  public final static native long Grid_createLinearGridStencil(long jarg1);
  public final static native long Grid_createModLinearGridStencil(long jarg1);
  public final static native long Grid_createPeriodicGrid(long jarg1);
  public final static native long Grid_unserialize(long jarg1);
  public final static native void delete_Grid(long jarg1);
  public final static native long Grid_getStorage(long jarg1, Grid jarg1_);
  public final static native long Grid_getBoundingBox(long jarg1, Grid jarg1_);
  public final static native long Grid_getStretching(long jarg1, Grid jarg1_);
  public final static native long Grid_getGenerator(long jarg1, Grid jarg1_);
  public final static native int Grid_getType(long jarg1, Grid jarg1_);
  public final static native long Grid_getBasis(long jarg1, Grid jarg1_);
  public final static native void Grid_serialize(long jarg1, Grid jarg1_, long jarg2);
  public final static native void Grid_refine(long jarg1, Grid jarg1_, long jarg2, DataVector jarg2_, int jarg3);
  public final static native void Grid_insertPoint(long jarg1, Grid jarg1_, long jarg2, long jarg3, long jarg4, boolean jarg5);
  public final static native int Grid_getSize(long jarg1, Grid jarg1_);
  public final static native long Grid_clone(long jarg1, Grid jarg1_);
  public final static native long Grid_createMemento(long jarg1, Grid jarg1_);
  public final static native long Grid_setMemento(long jarg1);
  public final static native int Grid_getDegree(long jarg1, Grid jarg1_);
  public final static native long createOperationDiagonal__SWIG_0(long jarg1, Grid jarg1_, double jarg2);
  public final static native long createOperationDiagonal__SWIG_1(long jarg1, Grid jarg1_);
  public final static native long createOperationHierarchisation(long jarg1, Grid jarg1_);
  public final static native long createOperationQuadrature(long jarg1, Grid jarg1_);
  public final static native long createOperationFirstMoment(long jarg1, Grid jarg1_);
  public final static native long createOperationSecondMoment(long jarg1, Grid jarg1_);
  public final static native long createOperationConvert(long jarg1, Grid jarg1_);
  public final static native long createOperationIdentity(long jarg1, Grid jarg1_);
  public final static native long createOperationEval(long jarg1, Grid jarg1_);
  public final static native long createOperationMultipleEval__SWIG_0(long jarg1, Grid jarg1_, long jarg2, DataMatrix jarg2_);
  public final static native long createOperationMultipleEvalInter(long jarg1, Grid jarg1_, long jarg2, DataMatrix jarg2_, long jarg3);
  public final static native long createOperationEvalNaive(long jarg1, Grid jarg1_);
  public final static native long createOperationEvalGradientNaive(long jarg1, Grid jarg1_);
  public final static native long createOperationEvalHessianNaive(long jarg1, Grid jarg1_);
  public final static native long createOperationEvalPartialDerivativeNaive(long jarg1, Grid jarg1_);
  public final static native long new_DataVectorSP__SWIG_0(long jarg1);
  public final static native long new_DataVectorSP__SWIG_1(long jarg1, float jarg2);
  public final static native long new_DataVectorSP__SWIG_2(long jarg1, DataVectorSP jarg1_);
  public final static native long new_DataVectorSP__SWIG_3(long jarg1, long jarg2);
  public final static native long new_DataVectorSP__SWIG_4(long jarg1, FloatVector jarg1_);
  public final static native long new_DataVectorSP__SWIG_5(long jarg1);
  public final static native void DataVectorSP_resize(long jarg1, DataVectorSP jarg1_, long jarg2);
  public final static native void DataVectorSP_resizeZero(long jarg1, DataVectorSP jarg1_, long jarg2);
  public final static native void DataVectorSP_restructure(long jarg1, DataVectorSP jarg1_, long jarg2, SizeTVector jarg2_);
  public final static native void DataVectorSP_addSize(long jarg1, DataVectorSP jarg1_, long jarg2);
  public final static native long DataVectorSP_append__SWIG_0(long jarg1, DataVectorSP jarg1_);
  public final static native long DataVectorSP_append__SWIG_1(long jarg1, DataVectorSP jarg1_, float jarg2);
  public final static native void DataVectorSP_insert(long jarg1, DataVectorSP jarg1_, long jarg2, float jarg3);
  public final static native void DataVectorSP_setAll(long jarg1, DataVectorSP jarg1_, float jarg2);
  public final static native void DataVectorSP_copyFrom(long jarg1, DataVectorSP jarg1_, long jarg2, DataVectorSP jarg2_);
  public final static native long DataVectorSP_operatorAssignment(long jarg1, DataVectorSP jarg1_, long jarg2, DataVectorSP jarg2_);
  public final static native float DataVectorSP_get(long jarg1, DataVectorSP jarg1_, long jarg2);
  public final static native void DataVectorSP_set(long jarg1, DataVectorSP jarg1_, long jarg2, float jarg3);
  public final static native void DataVectorSP_add(long jarg1, DataVectorSP jarg1_, long jarg2, DataVectorSP jarg2_);
  public final static native void DataVectorSP_sub(long jarg1, DataVectorSP jarg1_, long jarg2, DataVectorSP jarg2_);
  public final static native void DataVectorSP_componentwise_mult(long jarg1, DataVectorSP jarg1_, long jarg2, DataVectorSP jarg2_);
  public final static native void DataVectorSP_componentwise_div(long jarg1, DataVectorSP jarg1_, long jarg2, DataVectorSP jarg2_);
  public final static native void DataVectorSP_mult(long jarg1, DataVectorSP jarg1_, float jarg2);
  public final static native void DataVectorSP_sqr(long jarg1, DataVectorSP jarg1_);
  public final static native void DataVectorSP_sqrt(long jarg1, DataVectorSP jarg1_);
  public final static native void DataVectorSP_abs(long jarg1, DataVectorSP jarg1_);
  public final static native float DataVectorSP_sum(long jarg1, DataVectorSP jarg1_);
  public final static native float DataVectorSP_maxNorm(long jarg1, DataVectorSP jarg1_);
  public final static native float DataVectorSP_RMSNorm(long jarg1, DataVectorSP jarg1_);
  public final static native float DataVectorSP_l2Norm(long jarg1, DataVectorSP jarg1_);
  public final static native float DataVectorSP_min(long jarg1, DataVectorSP jarg1_);
  public final static native float DataVectorSP_max(long jarg1, DataVectorSP jarg1_);
  public final static native void DataVectorSP_minmax(long jarg1, DataVectorSP jarg1_, long jarg2, long jarg3);
  public final static native void DataVectorSP_axpy(long jarg1, DataVectorSP jarg1_, float jarg2, long jarg3, DataVectorSP jarg3_);
  public final static native float DataVectorSP_dotProduct(long jarg1, DataVectorSP jarg1_, long jarg2, DataVectorSP jarg2_);
  public final static native long DataVectorSP_getSize(long jarg1, DataVectorSP jarg1_);
  public final static native long DataVectorSP_getUnused(long jarg1, DataVectorSP jarg1_);
  public final static native long DataVectorSP_getNumberNonZero(long jarg1, DataVectorSP jarg1_);
  public final static native long DataVectorSP_getInc(long jarg1, DataVectorSP jarg1_);
  public final static native void DataVectorSP_setInc(long jarg1, DataVectorSP jarg1_, long jarg2);
  public final static native void DataVectorSP_partitionClasses(long jarg1, DataVectorSP jarg1_, float jarg2);
  public final static native void DataVectorSP_normalize__SWIG_0(long jarg1, DataVectorSP jarg1_);
  public final static native void DataVectorSP_normalize__SWIG_1(long jarg1, DataVectorSP jarg1_, float jarg2);
  public final static native void DataVectorSP_toString__SWIG_0(long jarg1, DataVectorSP jarg1_, long jarg2);
  public final static native String DataVectorSP_toString__SWIG_1(long jarg1, DataVectorSP jarg1_);
  public final static native void delete_DataVectorSP(long jarg1);
  public final static native long new_DataMatrixSP__SWIG_0(long jarg1, long jarg2);
  public final static native long new_DataMatrixSP__SWIG_1(long jarg1, long jarg2, float jarg3);
  public final static native long new_DataMatrixSP__SWIG_2(long jarg1, DataMatrixSP jarg1_);
  public final static native long new_DataMatrixSP__SWIG_3(long jarg1, long jarg2, long jarg3);
  public final static native void DataMatrixSP_resize__SWIG_0(long jarg1, DataMatrixSP jarg1_, long jarg2);
  public final static native void DataMatrixSP_resize__SWIG_1(long jarg1, DataMatrixSP jarg1_, long jarg2, long jarg3);
  public final static native void DataMatrixSP_resizeZero__SWIG_0(long jarg1, DataMatrixSP jarg1_, long jarg2);
  public final static native void DataMatrixSP_resizeZero__SWIG_1(long jarg1, DataMatrixSP jarg1_, long jarg2, long jarg3);
  public final static native void DataMatrixSP_addSize(long jarg1, DataMatrixSP jarg1_, long jarg2);
  public final static native long DataMatrixSP_appendRow__SWIG_0(long jarg1, DataMatrixSP jarg1_);
  public final static native long DataMatrixSP_appendRow__SWIG_1(long jarg1, DataMatrixSP jarg1_, long jarg2, DataVectorSP jarg2_);
  public final static native void DataMatrixSP_setAll(long jarg1, DataMatrixSP jarg1_, float jarg2);
  public final static native void DataMatrixSP_copyFrom(long jarg1, DataMatrixSP jarg1_, long jarg2, DataMatrixSP jarg2_);
  public final static native void DataMatrixSP_transpose(long jarg1, DataMatrixSP jarg1_);
  public final static native long DataMatrixSP_operatorAssignment(long jarg1, DataMatrixSP jarg1_, long jarg2, DataMatrixSP jarg2_);
  public final static native float DataMatrixSP_get(long jarg1, DataMatrixSP jarg1_, long jarg2, long jarg3);
  public final static native void DataMatrixSP_set(long jarg1, DataMatrixSP jarg1_, long jarg2, long jarg3, float jarg4);
  public final static native void DataMatrixSP_getRow__SWIG_0(long jarg1, DataMatrixSP jarg1_, long jarg2, long jarg3, DataVectorSP jarg3_);
  public final static native void DataMatrixSP_getRow__SWIG_1(long jarg1, DataMatrixSP jarg1_, long jarg2, long jarg3, FloatVector jarg3_);
  public final static native void DataMatrixSP_setRow(long jarg1, DataMatrixSP jarg1_, long jarg2, long jarg3, DataVectorSP jarg3_);
  public final static native void DataMatrixSP_getColumn(long jarg1, DataMatrixSP jarg1_, long jarg2, long jarg3, DataVectorSP jarg3_);
  public final static native void DataMatrixSP_setColumn(long jarg1, DataMatrixSP jarg1_, long jarg2, long jarg3, DataVectorSP jarg3_);
  public final static native void DataMatrixSP_add(long jarg1, DataMatrixSP jarg1_, long jarg2, DataMatrixSP jarg2_);
  public final static native void DataMatrixSP_sub(long jarg1, DataMatrixSP jarg1_, long jarg2, DataMatrixSP jarg2_);
  public final static native void DataMatrixSP_addReduce__SWIG_0(long jarg1, DataMatrixSP jarg1_, long jarg2, DataVectorSP jarg2_);
  public final static native void DataMatrixSP_addReduce__SWIG_1(long jarg1, DataMatrixSP jarg1_, long jarg2, DataVectorSP jarg2_, long jarg3, DataVectorSP jarg3_, long jarg4);
  public final static native void DataMatrixSP_expand(long jarg1, DataMatrixSP jarg1_, long jarg2, DataVectorSP jarg2_);
  public final static native void DataMatrixSP_componentwise_mult(long jarg1, DataMatrixSP jarg1_, long jarg2, DataMatrixSP jarg2_);
  public final static native void DataMatrixSP_componentwise_div(long jarg1, DataMatrixSP jarg1_, long jarg2, DataMatrixSP jarg2_);
  public final static native void DataMatrixSP_mult__SWIG_0(long jarg1, DataMatrixSP jarg1_, long jarg2, DataVectorSP jarg2_, long jarg3, DataVectorSP jarg3_);
  public final static native void DataMatrixSP_mult__SWIG_1(long jarg1, DataMatrixSP jarg1_, float jarg2);
  public final static native void DataMatrixSP_sqr(long jarg1, DataMatrixSP jarg1_);
  public final static native void DataMatrixSP_sqrt(long jarg1, DataMatrixSP jarg1_);
  public final static native void DataMatrixSP_abs(long jarg1, DataMatrixSP jarg1_);
  public final static native float DataMatrixSP_sum(long jarg1, DataMatrixSP jarg1_);
  public final static native float DataMatrixSP_min__SWIG_0(long jarg1, DataMatrixSP jarg1_, long jarg2);
  public final static native float DataMatrixSP_min__SWIG_1(long jarg1, DataMatrixSP jarg1_);
  public final static native float DataMatrixSP_max__SWIG_0(long jarg1, DataMatrixSP jarg1_, long jarg2);
  public final static native float DataMatrixSP_max__SWIG_1(long jarg1, DataMatrixSP jarg1_);
  public final static native void DataMatrixSP_minmax__SWIG_0(long jarg1, DataMatrixSP jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void DataMatrixSP_minmax__SWIG_1(long jarg1, DataMatrixSP jarg1_, long jarg2, long jarg3);
  public final static native long DataMatrixSP_getSize(long jarg1, DataMatrixSP jarg1_);
  public final static native long DataMatrixSP_getUnused(long jarg1, DataMatrixSP jarg1_);
  public final static native long DataMatrixSP_getNumberNonZero(long jarg1, DataMatrixSP jarg1_);
  public final static native long DataMatrixSP_getNrows(long jarg1, DataMatrixSP jarg1_);
  public final static native long DataMatrixSP_getNcols(long jarg1, DataMatrixSP jarg1_);
  public final static native long DataMatrixSP_getInc(long jarg1, DataMatrixSP jarg1_);
  public final static native void DataMatrixSP_setInc(long jarg1, DataMatrixSP jarg1_, long jarg2);
  public final static native void DataMatrixSP_normalizeDimension__SWIG_0(long jarg1, DataMatrixSP jarg1_, long jarg2);
  public final static native void DataMatrixSP_normalizeDimension__SWIG_1(long jarg1, DataMatrixSP jarg1_, long jarg2, float jarg3);
  public final static native void DataMatrixSP_toString__SWIG_0(long jarg1, DataMatrixSP jarg1_, long jarg2);
  public final static native String DataMatrixSP_toString__SWIG_1(long jarg1, DataMatrixSP jarg1_);
  public final static native void delete_DataMatrixSP(long jarg1);
  public final static native long new_DataVector__SWIG_0();
  public final static native long new_DataVector__SWIG_1(long jarg1, DataVector jarg1_);
  public final static native long DataVector_operatorAssignment(long jarg1, DataVector jarg1_, long jarg2, DataVector jarg2_);
  public final static native void delete_DataVector(long jarg1);
  public final static native long new_DataVector__SWIG_2(long jarg1);
  public final static native long new_DataVector__SWIG_3(long jarg1, double jarg2);
  public final static native long new_DataVector__SWIG_4(long jarg1, long jarg2);
  public final static native long new_DataVector__SWIG_5(long jarg1, DoubleVector jarg1_);
  public final static native long new_DataVector__SWIG_6(long jarg1);
  public final static native long DataVector_fromFile(String jarg1);
  public final static native long DataVector_fromString(String jarg1);
  public final static native void DataVector_resizeZero(long jarg1, DataVector jarg1_, long jarg2);
  public final static native void DataVector_restructure(long jarg1, DataVector jarg1_, long jarg2, SizeTVector jarg2_);
  public final static native long DataVector_append__SWIG_0(long jarg1, DataVector jarg1_);
  public final static native long DataVector_append__SWIG_1(long jarg1, DataVector jarg1_, double jarg2);
  public final static native void DataVector_insert(long jarg1, DataVector jarg1_, long jarg2, double jarg3);
  public final static native void DataVector_setAll(long jarg1, DataVector jarg1_, double jarg2);
  public final static native double DataVector_get(long jarg1, DataVector jarg1_, long jarg2);
  public final static native void DataVector_set(long jarg1, DataVector jarg1_, long jarg2, double jarg3);
  public final static native void DataVector_copyFrom(long jarg1, DataVector jarg1_, long jarg2, DataVector jarg2_);
  public final static native void DataVector_add(long jarg1, DataVector jarg1_, long jarg2, DataVector jarg2_);
  public final static native void DataVector_accumulate(long jarg1, DataVector jarg1_, long jarg2, DataVector jarg2_);
  public final static native void DataVector_sub(long jarg1, DataVector jarg1_, long jarg2, DataVector jarg2_);
  public final static native void DataVector_componentwise_mult(long jarg1, DataVector jarg1_, long jarg2, DataVector jarg2_);
  public final static native void DataVector_componentwise_div(long jarg1, DataVector jarg1_, long jarg2, DataVector jarg2_);
  public final static native double DataVector_dotProduct(long jarg1, DataVector jarg1_, long jarg2, DataVector jarg2_);
  public final static native void DataVector_mult(long jarg1, DataVector jarg1_, double jarg2);
  public final static native void DataVector_sqr(long jarg1, DataVector jarg1_);
  public final static native void DataVector_sqrt(long jarg1, DataVector jarg1_);
  public final static native void DataVector_abs(long jarg1, DataVector jarg1_);
  public final static native double DataVector_sum(long jarg1, DataVector jarg1_);
  public final static native double DataVector_maxNorm(long jarg1, DataVector jarg1_);
  public final static native double DataVector_RMSNorm(long jarg1, DataVector jarg1_);
  public final static native double DataVector_l2Norm(long jarg1, DataVector jarg1_);
  public final static native double DataVector_min(long jarg1, DataVector jarg1_);
  public final static native double DataVector_max(long jarg1, DataVector jarg1_);
  public final static native void DataVector_minmax(long jarg1, DataVector jarg1_, long jarg2, long jarg3);
  public final static native void DataVector_axpy(long jarg1, DataVector jarg1_, double jarg2, long jarg3, DataVector jarg3_);
  public final static native long DataVector_getSize(long jarg1, DataVector jarg1_);
  public final static native long DataVector_getNumberNonZero(long jarg1, DataVector jarg1_);
  public final static native void DataVector_partitionClasses(long jarg1, DataVector jarg1_, double jarg2);
  public final static native void DataVector_normalize__SWIG_0(long jarg1, DataVector jarg1_);
  public final static native void DataVector_normalize__SWIG_1(long jarg1, DataVector jarg1_, double jarg2);
  public final static native void DataVector_toString__SWIG_0(long jarg1, DataVector jarg1_, long jarg2);
  public final static native String DataVector_toString__SWIG_1(long jarg1, DataVector jarg1_);
  public final static native void DataVector_toFile(long jarg1, DataVector jarg1_, String jarg2);
  public final static native long new_DataMatrix__SWIG_0();
  public final static native long new_DataMatrix__SWIG_1(long jarg1, DataMatrix jarg1_);
  public final static native long DataMatrix_operatorAssignment(long jarg1, DataMatrix jarg1_, long jarg2, DataMatrix jarg2_);
  public final static native void delete_DataMatrix(long jarg1);
  public final static native long new_DataMatrix__SWIG_2(long jarg1, long jarg2);
  public final static native long new_DataMatrix__SWIG_3(long jarg1, long jarg2, double jarg3);
  public final static native long new_DataMatrix__SWIG_4(long jarg1, long jarg2, long jarg3);
  public final static native long DataMatrix_fromFile(String jarg1);
  public final static native long DataMatrix_fromString(String jarg1);
  public final static native void DataMatrix_resize__SWIG_0(long jarg1, DataMatrix jarg1_, long jarg2);
  public final static native void DataMatrix_resizeRows(long jarg1, DataMatrix jarg1_, long jarg2);
  public final static native void DataMatrix_resize__SWIG_1(long jarg1, DataMatrix jarg1_, long jarg2, long jarg3);
  public final static native void DataMatrix_resizeRowsCols(long jarg1, DataMatrix jarg1_, long jarg2, long jarg3);
  public final static native void DataMatrix_resizeQuadratic(long jarg1, DataMatrix jarg1_, long jarg2);
  public final static native void DataMatrix_resizeZero__SWIG_0(long jarg1, DataMatrix jarg1_, long jarg2);
  public final static native void DataMatrix_resizeZero__SWIG_1(long jarg1, DataMatrix jarg1_, long jarg2, long jarg3);
  public final static native void DataMatrix_resizeToSubMatrix(long jarg1, DataMatrix jarg1_, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native void DataMatrix_reserveAdditionalRows(long jarg1, DataMatrix jarg1_, long jarg2);
  public final static native long DataMatrix_appendRow__SWIG_0(long jarg1, DataMatrix jarg1_);
  public final static native long DataMatrix_appendRow__SWIG_1(long jarg1, DataMatrix jarg1_, long jarg2, DataVector jarg2_);
  public final static native long DataMatrix_appendCol(long jarg1, DataMatrix jarg1_, long jarg2, DataVector jarg2_);
  public final static native void DataMatrix_setAll(long jarg1, DataMatrix jarg1_, double jarg2);
  public final static native void DataMatrix_copyFrom(long jarg1, DataMatrix jarg1_, long jarg2, DataMatrix jarg2_);
  public final static native void DataMatrix_transpose(long jarg1, DataMatrix jarg1_);
  public final static native double DataMatrix_get(long jarg1, DataMatrix jarg1_, long jarg2, long jarg3);
  public final static native void DataMatrix_set(long jarg1, DataMatrix jarg1_, long jarg2, long jarg3, double jarg4);
  public final static native void DataMatrix_getRow__SWIG_0(long jarg1, DataMatrix jarg1_, long jarg2, long jarg3, DataVector jarg3_);
  public final static native void DataMatrix_getRow__SWIG_1(long jarg1, DataMatrix jarg1_, long jarg2, long jarg3, DoubleVector jarg3_);
  public final static native void DataMatrix_setRow(long jarg1, DataMatrix jarg1_, long jarg2, long jarg3, DataVector jarg3_);
  public final static native void DataMatrix_getColumn(long jarg1, DataMatrix jarg1_, long jarg2, long jarg3, DataVector jarg3_);
  public final static native void DataMatrix_setColumn(long jarg1, DataMatrix jarg1_, long jarg2, long jarg3, DataVector jarg3_);
  public final static native void DataMatrix_add(long jarg1, DataMatrix jarg1_, long jarg2, DataMatrix jarg2_);
  public final static native void DataMatrix_sub(long jarg1, DataMatrix jarg1_, long jarg2, DataMatrix jarg2_);
  public final static native void DataMatrix_addReduce__SWIG_0(long jarg1, DataMatrix jarg1_, long jarg2, DataVector jarg2_);
  public final static native void DataMatrix_addReduce__SWIG_1(long jarg1, DataMatrix jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_, long jarg4);
  public final static native void DataMatrix_expand(long jarg1, DataMatrix jarg1_, long jarg2, DataVector jarg2_);
  public final static native void DataMatrix_componentwise_mult(long jarg1, DataMatrix jarg1_, long jarg2, DataMatrix jarg2_);
  public final static native void DataMatrix_componentwise_div(long jarg1, DataMatrix jarg1_, long jarg2, DataMatrix jarg2_);
  public final static native void DataMatrix_mult__SWIG_0(long jarg1, DataMatrix jarg1_, double jarg2);
  public final static native void DataMatrix_mult__SWIG_1(long jarg1, DataMatrix jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_);
  public final static native void DataMatrix_sqr(long jarg1, DataMatrix jarg1_);
  public final static native void DataMatrix_sqrt(long jarg1, DataMatrix jarg1_);
  public final static native void DataMatrix_abs(long jarg1, DataMatrix jarg1_);
  public final static native double DataMatrix_sum(long jarg1, DataMatrix jarg1_);
  public final static native double DataMatrix_min__SWIG_0(long jarg1, DataMatrix jarg1_, long jarg2);
  public final static native double DataMatrix_min__SWIG_1(long jarg1, DataMatrix jarg1_);
  public final static native double DataMatrix_max__SWIG_0(long jarg1, DataMatrix jarg1_, long jarg2);
  public final static native double DataMatrix_max__SWIG_1(long jarg1, DataMatrix jarg1_);
  public final static native void DataMatrix_minmax__SWIG_0(long jarg1, DataMatrix jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void DataMatrix_minmax__SWIG_1(long jarg1, DataMatrix jarg1_, long jarg2, long jarg3);
  public final static native long DataMatrix_getSize(long jarg1, DataMatrix jarg1_);
  public final static native long DataMatrix_getAdditionallyReservedRows(long jarg1, DataMatrix jarg1_);
  public final static native long DataMatrix_getNumberNonZero(long jarg1, DataMatrix jarg1_);
  public final static native long DataMatrix_getNrows(long jarg1, DataMatrix jarg1_);
  public final static native long DataMatrix_getNcols(long jarg1, DataMatrix jarg1_);
  public final static native void DataMatrix_normalizeDimension__SWIG_0(long jarg1, DataMatrix jarg1_, long jarg2);
  public final static native void DataMatrix_normalizeDimension__SWIG_1(long jarg1, DataMatrix jarg1_, long jarg2, double jarg3);
  public final static native void DataMatrix_toString__SWIG_0(long jarg1, DataMatrix jarg1_, long jarg2);
  public final static native void DataMatrix_toFile(long jarg1, DataMatrix jarg1_, String jarg2);
  public final static native String DataMatrix_toString__SWIG_1(long jarg1, DataMatrix jarg1_);
  public final static native void BoundingBox1D_leftBoundary_set(long jarg1, BoundingBox1D jarg1_, double jarg2);
  public final static native double BoundingBox1D_leftBoundary_get(long jarg1, BoundingBox1D jarg1_);
  public final static native void BoundingBox1D_rightBoundary_set(long jarg1, BoundingBox1D jarg1_, double jarg2);
  public final static native double BoundingBox1D_rightBoundary_get(long jarg1, BoundingBox1D jarg1_);
  public final static native void BoundingBox1D_bDirichletLeft_set(long jarg1, BoundingBox1D jarg1_, boolean jarg2);
  public final static native boolean BoundingBox1D_bDirichletLeft_get(long jarg1, BoundingBox1D jarg1_);
  public final static native void BoundingBox1D_bDirichletRight_set(long jarg1, BoundingBox1D jarg1_, boolean jarg2);
  public final static native boolean BoundingBox1D_bDirichletRight_get(long jarg1, BoundingBox1D jarg1_);
  public final static native long new_BoundingBox1D__SWIG_0();
  public final static native long new_BoundingBox1D__SWIG_1(double jarg1, double jarg2);
  public final static native long new_BoundingBox1D__SWIG_2(double jarg1, double jarg2, boolean jarg3, boolean jarg4);
  public final static native void delete_BoundingBox1D(long jarg1);
  public final static native long new_BoundingBox__SWIG_0(long jarg1);
  public final static native long new_BoundingBox__SWIG_1(long jarg1, BoundingBox1DVector jarg1_);
  public final static native void delete_BoundingBox(long jarg1);
  public final static native void BoundingBox_setBoundary(long jarg1, BoundingBox jarg1_, long jarg2, long jarg3, BoundingBox1D jarg3_);
  public final static native long BoundingBox_getBoundary(long jarg1, BoundingBox jarg1_, long jarg2);
  public final static native long BoundingBox_getDimension(long jarg1, BoundingBox jarg1_);
  public final static native double BoundingBox_getIntervalWidth(long jarg1, BoundingBox jarg1_, long jarg2);
  public final static native double BoundingBox_getIntervalOffset(long jarg1, BoundingBox jarg1_, long jarg2);
  public final static native boolean BoundingBox_isUnitCube(long jarg1, BoundingBox jarg1_);
  public final static native void BoundingBox_transformPointToBoundingBox__SWIG_0(long jarg1, BoundingBox jarg1_, long jarg2, DataVector jarg2_);
  public final static native double BoundingBox_transformPointToBoundingBox__SWIG_1(long jarg1, BoundingBox jarg1_, long jarg2, double jarg3);
  public final static native void BoundingBox_transformPointToUnitCube__SWIG_0(long jarg1, BoundingBox jarg1_, long jarg2, DataVector jarg2_);
  public final static native double BoundingBox_transformPointToUnitCube__SWIG_1(long jarg1, BoundingBox jarg1_, long jarg2, double jarg3);
  public final static native boolean BoundingBox_isContainingPoint__SWIG_0(long jarg1, BoundingBox jarg1_, long jarg2, DataVector jarg2_);
  public final static native boolean BoundingBox_isContainingPoint__SWIG_1(long jarg1, BoundingBox jarg1_, long jarg2, double jarg3);
  public final static native boolean BoundingBox_hasDirichletBoundaryLeft(long jarg1, BoundingBox jarg1_, long jarg2);
  public final static native boolean BoundingBox_hasDirichletBoundaryRight(long jarg1, BoundingBox jarg1_, long jarg2);
  public final static native String BoundingBox_serialize__SWIG_0(long jarg1, BoundingBox jarg1_, int jarg2);
  public final static native String BoundingBox_serialize__SWIG_1(long jarg1, BoundingBox jarg1_);
  public final static native void BoundingBox_serialize__SWIG_2(long jarg1, BoundingBox jarg1_, long jarg2, int jarg3);
  public final static native void BoundingBox_serialize__SWIG_3(long jarg1, BoundingBox jarg1_, long jarg2);
  public final static native void BoundingBox_unserialize__SWIG_0(long jarg1, BoundingBox jarg1_, String jarg2, int jarg3);
  public final static native void BoundingBox_unserialize__SWIG_1(long jarg1, BoundingBox jarg1_, long jarg2, int jarg3);
  public final static native void BoundingBox_toString__SWIG_0(long jarg1, BoundingBox jarg1_, long jarg2);
  public final static native String BoundingBox_toString__SWIG_1(long jarg1, BoundingBox jarg1_);
  public final static native int LOOKUPSIZE_get();
  public final static native int LOOKUPMAX_get();
  public final static native void Stretching1D_type_set(long jarg1, Stretching1D jarg1_, String jarg2);
  public final static native String Stretching1D_type_get(long jarg1, Stretching1D jarg1_);
  public final static native void Stretching1D_x_0_set(long jarg1, Stretching1D jarg1_, double jarg2);
  public final static native double Stretching1D_x_0_get(long jarg1, Stretching1D jarg1_);
  public final static native void Stretching1D_xsi_set(long jarg1, Stretching1D jarg1_, double jarg2);
  public final static native double Stretching1D_xsi_get(long jarg1, Stretching1D jarg1_);
  public final static native void Stretching1D_lookup_set(long jarg1, Stretching1D jarg1_, long jarg2);
  public final static native long Stretching1D_lookup_get(long jarg1, Stretching1D jarg1_);
  public final static native long new_Stretching1D__SWIG_0();
  public final static native long new_Stretching1D__SWIG_1(String jarg1);
  public final static native void delete_Stretching1D(long jarg1);
  public final static native long new_Stretching__SWIG_0(long jarg1);
  public final static native long new_Stretching__SWIG_1(long jarg1, BoundingBox1DVector jarg1_, long jarg2, Stretching1DVector jarg2_);
  public final static native long new_Stretching__SWIG_2(long jarg1, long jarg2, DoubleVector jarg2_);
  public final static native void delete_Stretching(long jarg1);
  public final static native double Stretching_getCoordinate(long jarg1, Stretching jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native long Stretching_getStretching1D(long jarg1, Stretching jarg1_, long jarg2);
  public final static native void Stretching_printLookupTable(long jarg1, Stretching jarg1_);
  public final static native void Stretching_getAdjacentPositions(long jarg1, Stretching jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7);
  public final static native String Stretching_getStretchingMode(long jarg1, Stretching jarg1_);
  public final static native long Stretching_getDiscreteVector(long jarg1, Stretching jarg1_, boolean jarg2);
  public final static native long Stretching_getDiscreteVectorLevel(long jarg1, Stretching jarg1_);
  public final static native void Stretching_calculateNeighborLookup(long jarg1, Stretching jarg1_, long jarg2);
  public final static native String Stretching_serialize__SWIG_0(long jarg1, Stretching jarg1_, int jarg2);
  public final static native String Stretching_serialize__SWIG_1(long jarg1, Stretching jarg1_);
  public final static native void Stretching_serialize__SWIG_2(long jarg1, Stretching jarg1_, long jarg2, int jarg3);
  public final static native void Stretching_serialize__SWIG_3(long jarg1, Stretching jarg1_, long jarg2);
  public final static native void Stretching_unserialize__SWIG_0(long jarg1, Stretching jarg1_, String jarg2, String jarg3, int jarg4);
  public final static native void Stretching_unserialize__SWIG_1(long jarg1, Stretching jarg1_, long jarg2, String jarg3, int jarg4);
  public final static native int SERIALIZATION_VERSION_get();
  public final static native long new_GridPoint__SWIG_0(long jarg1);
  public final static native long new_GridPoint__SWIG_1();
  public final static native long new_GridPoint__SWIG_2(long jarg1, GridPoint jarg1_);
  public final static native long new_GridPoint__SWIG_3(long jarg1, int jarg2);
  public final static native void delete_GridPoint(long jarg1);
  public final static native void GridPoint_serialize(long jarg1, GridPoint jarg1_, long jarg2, int jarg3);
  public final static native long GridPoint_getDimension(long jarg1, GridPoint jarg1_);
  public final static native void GridPoint_set__SWIG_0(long jarg1, GridPoint jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void GridPoint_set__SWIG_1(long jarg1, GridPoint jarg1_, long jarg2, long jarg3, long jarg4, boolean jarg5);
  public final static native void GridPoint_push__SWIG_0(long jarg1, GridPoint jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void GridPoint_push__SWIG_1(long jarg1, GridPoint jarg1_, long jarg2, long jarg3, long jarg4, boolean jarg5);
  public final static native void GridPoint_get(long jarg1, GridPoint jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native long GridPoint_getLevel(long jarg1, GridPoint jarg1_, long jarg2);
  public final static native long GridPoint_getIndex(long jarg1, GridPoint jarg1_, long jarg2);
  public final static native void GridPoint_setLeaf(long jarg1, GridPoint jarg1_, boolean jarg2);
  public final static native boolean GridPoint_isLeaf(long jarg1, GridPoint jarg1_);
  public final static native double GridPoint_getStandardCoordinate(long jarg1, GridPoint jarg1_, long jarg2);
  public final static native void GridPoint_getStandardCoordinates(long jarg1, GridPoint jarg1_, long jarg2, DataVector jarg2_);
  public final static native boolean GridPoint_isInnerPoint(long jarg1, GridPoint jarg1_);
  public final static native void GridPoint_rehash(long jarg1, GridPoint jarg1_);
  public final static native long GridPoint_getHash(long jarg1, GridPoint jarg1_);
  public final static native boolean GridPoint_equals(long jarg1, GridPoint jarg1_, long jarg2, GridPoint jarg2_);
  public final static native long GridPoint_assign(long jarg1, GridPoint jarg1_, long jarg2, GridPoint jarg2_);
  public final static native long GridPoint_operatorAssignment(long jarg1, GridPoint jarg1_, long jarg2, GridPoint jarg2_);
  public final static native String GridPoint_toString__SWIG_0(long jarg1, GridPoint jarg1_);
  public final static native void GridPoint_toString__SWIG_1(long jarg1, GridPoint jarg1_, long jarg2);
  public final static native long GridPoint_getLevelSum(long jarg1, GridPoint jarg1_);
  public final static native long GridPoint_getLevelMax(long jarg1, GridPoint jarg1_);
  public final static native long GridPoint_getLevelMin(long jarg1, GridPoint jarg1_);
  public final static native void GridPoint_getLeftLevelZero(long jarg1, GridPoint jarg1_, long jarg2);
  public final static native void GridPoint_getRightLevelZero(long jarg1, GridPoint jarg1_, long jarg2);
  public final static native void GridPoint_getLeftChild(long jarg1, GridPoint jarg1_, long jarg2);
  public final static native void GridPoint_getRightChild(long jarg1, GridPoint jarg1_, long jarg2);
  public final static native void GridPoint_getRoot(long jarg1, GridPoint jarg1_, long jarg2);
  public final static native long HashGridPointPointerHashFunctor_operatorParentheses(long jarg1, HashGridPointPointerHashFunctor jarg1_, long jarg2, GridPoint jarg2_);
  public final static native long new_HashGridPointPointerHashFunctor();
  public final static native void delete_HashGridPointPointerHashFunctor(long jarg1);
  public final static native long HashGridPointPointerEqualityFunctor_operatorParentheses(long jarg1, HashGridPointPointerEqualityFunctor jarg1_, long jarg2, GridPoint jarg2_, long jarg3, GridPoint jarg3_);
  public final static native long new_HashGridPointPointerEqualityFunctor();
  public final static native void delete_HashGridPointPointerEqualityFunctor(long jarg1);
  public final static native long HashGridPointHashFunctor_operatorParentheses(long jarg1, HashGridPointHashFunctor jarg1_, long jarg2, GridPoint jarg2_);
  public final static native long new_HashGridPointHashFunctor();
  public final static native void delete_HashGridPointHashFunctor(long jarg1);
  public final static native long HashGridPointEqualityFunctor_operatorParentheses(long jarg1, HashGridPointEqualityFunctor jarg1_, long jarg2, GridPoint jarg2_, long jarg3, GridPoint jarg3_);
  public final static native long new_HashGridPointEqualityFunctor();
  public final static native void delete_HashGridPointEqualityFunctor(long jarg1);
  public final static native long new_GridStorage__SWIG_0(long jarg1);
  public final static native long new_GridStorage__SWIG_1(long jarg1, BoundingBox jarg1_);
  public final static native long new_GridStorage__SWIG_2(long jarg1, Stretching jarg1_);
  public final static native long new_GridStorage__SWIG_3(long jarg1);
  public final static native long new_GridStorage__SWIG_4(long jarg1);
  public final static native long new_GridStorage__SWIG_5(long jarg1, GridStorage jarg1_);
  public final static native void GridStorage_operatorAssignment(long jarg1, GridStorage jarg1_, long jarg2, GridStorage jarg2_);
  public final static native void delete_GridStorage(long jarg1);
  public final static native void GridStorage_clear(long jarg1, GridStorage jarg1_);
  public final static native long GridStorage_deletePoints(long jarg1, GridStorage jarg1_, long jarg2);
  public final static native void GridStorage_unserializeNoAlgoDims(long jarg1, GridStorage jarg1_, long jarg2);
  public final static native String GridStorage_serialize__SWIG_0(long jarg1, GridStorage jarg1_, int jarg2);
  public final static native String GridStorage_serialize__SWIG_1(long jarg1, GridStorage jarg1_);
  public final static native void GridStorage_serialize__SWIG_2(long jarg1, GridStorage jarg1_, long jarg2, int jarg3);
  public final static native void GridStorage_serialize__SWIG_3(long jarg1, GridStorage jarg1_, long jarg2);
  public final static native String GridStorage_toString__SWIG_0(long jarg1, GridStorage jarg1_);
  public final static native void GridStorage_toString__SWIG_1(long jarg1, GridStorage jarg1_, long jarg2);
  public final static native long GridStorage_getSize(long jarg1, GridStorage jarg1_);
  public final static native long GridStorage_getNumberOfInnerPoints(long jarg1, GridStorage jarg1_);
  public final static native long GridStorage_getDimension(long jarg1, GridStorage jarg1_);
  public final static native long GridStorage_getPoint(long jarg1, GridStorage jarg1_, long jarg2);
  public final static native long GridStorage_insert(long jarg1, GridStorage jarg1_, long jarg2, GridPoint jarg2_);
  public final static native void GridStorage_update(long jarg1, GridStorage jarg1_, long jarg2, GridPoint jarg2_, long jarg3);
  public final static native void GridStorage_deleteLast(long jarg1, GridStorage jarg1_);
  public final static native long GridStorage_create(long jarg1, GridStorage jarg1_, long jarg2, GridPoint jarg2_);
  public final static native void GridStorage_destroy(long jarg1, GridStorage jarg1_, long jarg2, GridPoint jarg2_);
  public final static native long GridStorage_store(long jarg1, GridStorage jarg1_, long jarg2, GridPoint jarg2_);
  public final static native long GridStorage_find(long jarg1, GridStorage jarg1_, long jarg2, GridPoint jarg2_);
  public final static native long GridStorage_begin(long jarg1, GridStorage jarg1_);
  public final static native long GridStorage_end(long jarg1, GridStorage jarg1_);
  public final static native boolean GridStorage_isContaining(long jarg1, GridStorage jarg1_, long jarg2, GridPoint jarg2_);
  public final static native long GridStorage_getSequenceNumber(long jarg1, GridStorage jarg1_, long jarg2, GridPoint jarg2_);
  public final static native boolean GridStorage_isInvalidSequenceNumber(long jarg1, GridStorage jarg1_, long jarg2);
  public final static native long GridStorage_getAlgorithmicDimensions(long jarg1, GridStorage jarg1_);
  public final static native void GridStorage_setAlgorithmicDimensions(long jarg1, GridStorage jarg1_, long jarg2, SizeTVector jarg2_);
  public final static native void GridStorage_recalcLeafProperty(long jarg1, GridStorage jarg1_);
  public final static native long GridStorage_getBoundingBox(long jarg1, GridStorage jarg1_);
  public final static native long GridStorage_getStretching(long jarg1, GridStorage jarg1_);
  public final static native void GridStorage_setBoundingBox(long jarg1, GridStorage jarg1_, long jarg2, BoundingBox jarg2_);
  public final static native void GridStorage_setStretching(long jarg1, GridStorage jarg1_, long jarg2, Stretching jarg2_);
  public final static native void GridStorage_getLevelIndexArraysForEval__SWIG_0(long jarg1, GridStorage jarg1_, long jarg2, DataMatrix jarg2_, long jarg3, DataMatrix jarg3_);
  public final static native void GridStorage_getLevelIndexArraysForEval__SWIG_1(long jarg1, GridStorage jarg1_, long jarg2, DataMatrixSP jarg2_, long jarg3, DataMatrixSP jarg3_);
  public final static native void GridStorage_getLevelForIntegral(long jarg1, GridStorage jarg1_, long jarg2, DataMatrix jarg2_);
  public final static native long GridStorage_getMaxLevel(long jarg1, GridStorage jarg1_);
  public final static native void GridStorage_getLevelIndexMaskArraysForModEval__SWIG_0(long jarg1, GridStorage jarg1_, long jarg2, DataMatrix jarg2_, long jarg3, DataMatrix jarg3_, long jarg4, DataMatrix jarg4_, long jarg5, DataMatrix jarg5_);
  public final static native void GridStorage_getLevelIndexMaskArraysForModEval__SWIG_1(long jarg1, GridStorage jarg1_, long jarg2, DataMatrixSP jarg2_, long jarg3, DataMatrixSP jarg3_, long jarg4, DataMatrixSP jarg4_, long jarg5, DataMatrixSP jarg5_);
  public final static native double GridStorage_getCoordinate(long jarg1, GridStorage jarg1_, long jarg2, GridPoint jarg2_, long jarg3);
  public final static native double GridStorage_getUnitCoordinate(long jarg1, GridStorage jarg1_, long jarg2, GridPoint jarg2_, long jarg3);
  public final static native void GridStorage_getCoordinates__SWIG_0(long jarg1, GridStorage jarg1_, long jarg2, GridPoint jarg2_, long jarg3, DataVector jarg3_);
  public final static native long GridStorage_getCoordinates__SWIG_1(long jarg1, GridStorage jarg1_, long jarg2, GridPoint jarg2_);
  public final static native long new_HashGridIterator__SWIG_0(long jarg1, GridStorage jarg1_);
  public final static native long new_HashGridIterator__SWIG_1(long jarg1, HashGridIterator jarg1_);
  public final static native void delete_HashGridIterator(long jarg1);
  public final static native void HashGridIterator_resetToLevelZero(long jarg1, HashGridIterator jarg1_);
  public final static native void HashGridIterator_resetToLeftLevelZero(long jarg1, HashGridIterator jarg1_, long jarg2);
  public final static native void HashGridIterator_resetToRightLevelZero(long jarg1, HashGridIterator jarg1_, long jarg2);
  public final static native void HashGridIterator_resetToLevelOne(long jarg1, HashGridIterator jarg1_, long jarg2);
  public final static native void HashGridIterator_leftChild(long jarg1, HashGridIterator jarg1_, long jarg2);
  public final static native void HashGridIterator_rightChild(long jarg1, HashGridIterator jarg1_, long jarg2);
  public final static native void HashGridIterator_up(long jarg1, HashGridIterator jarg1_, long jarg2);
  public final static native void HashGridIterator_stepLeft(long jarg1, HashGridIterator jarg1_, long jarg2);
  public final static native void HashGridIterator_stepRight(long jarg1, HashGridIterator jarg1_, long jarg2);
  public final static native boolean HashGridIterator_isInnerPoint(long jarg1, HashGridIterator jarg1_);
  public final static native boolean HashGridIterator_hint(long jarg1, HashGridIterator jarg1_);
  public final static native boolean HashGridIterator_hintLeft(long jarg1, HashGridIterator jarg1_, long jarg2);
  public final static native boolean HashGridIterator_hintRight(long jarg1, HashGridIterator jarg1_, long jarg2);
  public final static native void HashGridIterator_get(long jarg1, HashGridIterator jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void HashGridIterator_set__SWIG_0(long jarg1, HashGridIterator jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void HashGridIterator_set__SWIG_1(long jarg1, HashGridIterator jarg1_, long jarg2, GridPoint jarg2_);
  public final static native void HashGridIterator_push(long jarg1, HashGridIterator jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native long HashGridIterator_seq(long jarg1, HashGridIterator jarg1_);
  public final static native long HashGridIterator_getGridDepth(long jarg1, HashGridIterator jarg1_, long jarg2);
  public final static native String HashGridIterator_toString(long jarg1, HashGridIterator jarg1_);
  public final static native void delete_RefinementFunctor(long jarg1);
  public final static native double RefinementFunctor_operatorParentheses(long jarg1, RefinementFunctor jarg1_, long jarg2, GridStorage jarg2_, long jarg3);
  public final static native double RefinementFunctor_start(long jarg1, RefinementFunctor jarg1_);
  public final static native long RefinementFunctor_getRefinementsNum(long jarg1, RefinementFunctor jarg1_);
  public final static native double RefinementFunctor_getRefinementThreshold(long jarg1, RefinementFunctor jarg1_);
  public final static native double RefinementFunctor_getTotalRefinementValue(long jarg1, RefinementFunctor jarg1_, long jarg2, GridStorage jarg2_);
  public final static native long new_SurplusRefinementFunctor__SWIG_0(long jarg1, DataVector jarg1_, long jarg2, double jarg3);
  public final static native long new_SurplusRefinementFunctor__SWIG_1(long jarg1, DataVector jarg1_, long jarg2);
  public final static native long new_SurplusRefinementFunctor__SWIG_2(long jarg1, DataVector jarg1_);
  public final static native void delete_SurplusRefinementFunctor(long jarg1);
  public final static native double SurplusRefinementFunctor_operatorParentheses(long jarg1, SurplusRefinementFunctor jarg1_, long jarg2, GridStorage jarg2_, long jarg3);
  public final static native double SurplusRefinementFunctor_start(long jarg1, SurplusRefinementFunctor jarg1_);
  public final static native long SurplusRefinementFunctor_getRefinementsNum(long jarg1, SurplusRefinementFunctor jarg1_);
  public final static native double SurplusRefinementFunctor_getRefinementThreshold(long jarg1, SurplusRefinementFunctor jarg1_);
  public final static native void delete_CoarseningFunctor(long jarg1);
  public final static native double CoarseningFunctor_operatorParentheses(long jarg1, CoarseningFunctor jarg1_, long jarg2, GridStorage jarg2_, long jarg3);
  public final static native double CoarseningFunctor_start(long jarg1, CoarseningFunctor jarg1_);
  public final static native long CoarseningFunctor_getRemovementsNum(long jarg1, CoarseningFunctor jarg1_);
  public final static native double CoarseningFunctor_getCoarseningThreshold(long jarg1, CoarseningFunctor jarg1_);
  public final static native void delete_GridGenerator(long jarg1);
  public final static native void GridGenerator_regular__SWIG_0(long jarg1, GridGenerator jarg1_, long jarg2);
  public final static native void GridGenerator_regular__SWIG_1(long jarg1, GridGenerator jarg1_, long jarg2, double jarg3);
  public final static native void GridGenerator_regularInter(long jarg1, GridGenerator jarg1_, long jarg2, long jarg3, double jarg4);
  public final static native void GridGenerator_cliques__SWIG_0(long jarg1, GridGenerator jarg1_, long jarg2, long jarg3);
  public final static native void GridGenerator_cliques__SWIG_1(long jarg1, GridGenerator jarg1_, long jarg2, long jarg3, double jarg4);
  public final static native void GridGenerator_full(long jarg1, GridGenerator jarg1_, long jarg2);
  public final static native void GridGenerator_truncated(long jarg1, GridGenerator jarg1_, long jarg2, long jarg3);
  public final static native void GridGenerator_refine(long jarg1, GridGenerator jarg1_, long jarg2, RefinementFunctor jarg2_);
  public final static native void GridGenerator_refineInter(long jarg1, GridGenerator jarg1_, long jarg2, RefinementFunctor jarg2_, long jarg3);
  public final static native void GridGenerator_coarsen(long jarg1, GridGenerator jarg1_, long jarg2, CoarseningFunctor jarg2_, long jarg3, DataVector jarg3_);
  public final static native void GridGenerator_coarsenNFirstOnly(long jarg1, GridGenerator jarg1_, long jarg2, CoarseningFunctor jarg2_, long jarg3, DataVector jarg3_, long jarg4);
  public final static native long GridGenerator_getNumberOfRefinablePoints(long jarg1, GridGenerator jarg1_);
  public final static native long GridGenerator_getNumberOfRemovablePoints(long jarg1, GridGenerator jarg1_);
  public final static native void GridGenerator_refineMaxLevel(long jarg1, GridGenerator jarg1_, long jarg2, RefinementFunctor jarg2_, long jarg3);
  public final static native long GridGenerator_getNumberOfRefinablePointsToMaxLevel(long jarg1, GridGenerator jarg1_, long jarg2);
  public final static native void delete_OperationMultipleEval(long jarg1);
  public final static native void OperationMultipleEval_mult__SWIG_0(long jarg1, OperationMultipleEval jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_);
  public final static native void OperationMultipleEval_mult__SWIG_1(long jarg1, OperationMultipleEval jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_, long jarg4, long jarg5);
  public final static native void OperationMultipleEval_multTranspose__SWIG_0(long jarg1, OperationMultipleEval jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_);
  public final static native void OperationMultipleEval_multTranspose__SWIG_1(long jarg1, OperationMultipleEval jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_, long jarg4, long jarg5);
  public final static native void OperationMultipleEval_eval(long jarg1, OperationMultipleEval jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_);
  public final static native void OperationMultipleEval_prepare(long jarg1, OperationMultipleEval jarg1_);
  public final static native double OperationMultipleEval_getDuration(long jarg1, OperationMultipleEval jarg1_);
  public final static native String OperationMultipleEval_getImplementationName(long jarg1, OperationMultipleEval jarg1_);
  public final static native void delete_OperationMatrix(long jarg1);
  public final static native void OperationMatrix_mult(long jarg1, OperationMatrix jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_);
  public final static native void delete_OperationConvert(long jarg1);
  public final static native void OperationConvert_doConvertToLinear(long jarg1, OperationConvert jarg1_, long jarg2, DataVector jarg2_);
  public final static native void OperationConvert_doConvertFromLinear(long jarg1, OperationConvert jarg1_, long jarg2, DataVector jarg2_);
  public final static native void delete_OperationEval(long jarg1);
  public final static native double OperationEval_eval__SWIG_0(long jarg1, OperationEval jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_);
  public final static native void OperationEval_eval__SWIG_1(long jarg1, OperationEval jarg1_, long jarg2, DataMatrix jarg2_, long jarg3, DataVector jarg3_, long jarg4, DataVector jarg4_);
  public final static native void delete_OperationEvalGradient(long jarg1);
  public final static native double OperationEvalGradient_evalGradient__SWIG_0(long jarg1, OperationEvalGradient jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_, long jarg4, DataVector jarg4_);
  public final static native void OperationEvalGradient_evalGradient__SWIG_1(long jarg1, OperationEvalGradient jarg1_, long jarg2, DataMatrix jarg2_, long jarg3, DataVector jarg3_, long jarg4, DataVector jarg4_, long jarg5, DataMatrix jarg5_);
  public final static native void OperationEvalGradient_pointInUnitCube_set(long jarg1, OperationEvalGradient jarg1_, long jarg2, DataVector jarg2_);
  public final static native long OperationEvalGradient_pointInUnitCube_get(long jarg1, OperationEvalGradient jarg1_);
  public final static native void delete_OperationEvalHessian(long jarg1);
  public final static native double OperationEvalHessian_evalHessian__SWIG_0(long jarg1, OperationEvalHessian jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_, long jarg4, DataVector jarg4_, long jarg5, DataMatrix jarg5_);
  public final static native void OperationEvalHessian_evalHessian__SWIG_1(long jarg1, OperationEvalHessian jarg1_, long jarg2, DataMatrix jarg2_, long jarg3, DataVector jarg3_, long jarg4, DataVector jarg4_, long jarg5, DataMatrix jarg5_, long jarg6);
  public final static native void OperationEvalHessian_pointInUnitCube_set(long jarg1, OperationEvalHessian jarg1_, long jarg2, DataVector jarg2_);
  public final static native long OperationEvalHessian_pointInUnitCube_get(long jarg1, OperationEvalHessian jarg1_);
  public final static native void delete_OperationEvalPartialDerivative(long jarg1);
  public final static native double OperationEvalPartialDerivative_evalPartialDerivative__SWIG_0(long jarg1, OperationEvalPartialDerivative jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_, long jarg4, long jarg5);
  public final static native void OperationEvalPartialDerivative_evalPartialDerivative__SWIG_1(long jarg1, OperationEvalPartialDerivative jarg1_, long jarg2, DataMatrix jarg2_, long jarg3, DataVector jarg3_, long jarg4, long jarg5, DataVector jarg5_, long jarg6, DataVector jarg6_);
  public final static native void OperationEvalPartialDerivative_pointInUnitCube_set(long jarg1, OperationEvalPartialDerivative jarg1_, long jarg2, DataVector jarg2_);
  public final static native long OperationEvalPartialDerivative_pointInUnitCube_get(long jarg1, OperationEvalPartialDerivative jarg1_);
  public final static native void delete_OperationHierarchisation(long jarg1);
  public final static native void OperationHierarchisation_doHierarchisation(long jarg1, OperationHierarchisation jarg1_, long jarg2, DataVector jarg2_);
  public final static native void OperationHierarchisation_doDehierarchisation(long jarg1, OperationHierarchisation jarg1_, long jarg2, DataVector jarg2_);
  public final static native void delete_OperationQuadrature(long jarg1);
  public final static native double OperationQuadrature_doQuadrature(long jarg1, OperationQuadrature jarg1_, long jarg2, DataVector jarg2_);
  public final static native long new_OperationQuadratureMC(long jarg1, Grid jarg1_, int jarg2);
  public final static native void delete_OperationQuadratureMC(long jarg1);
  public final static native double OperationQuadratureMC_doQuadrature(long jarg1, OperationQuadratureMC jarg1_, long jarg2, DataVector jarg2_);
  public final static native double OperationQuadratureMC_doQuadratureFunc(long jarg1, OperationQuadratureMC jarg1_, long jarg2, long jarg3);
  public final static native double OperationQuadratureMC_doQuadratureL2Error(long jarg1, OperationQuadratureMC jarg1_, long jarg2, long jarg3, long jarg4, DataVector jarg4_);
  public final static native long new_DirichletUpdateVector(long jarg1, GridStorage jarg1_);
  public final static native void delete_DirichletUpdateVector(long jarg1);
  public final static native void DirichletUpdateVector_applyDirichletConditions(long jarg1, DirichletUpdateVector jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_);
  public final static native void DirichletUpdateVector_setBoundariesToZero(long jarg1, DirichletUpdateVector jarg1_, long jarg2, DataVector jarg2_);
  public final static native void DirichletUpdateVector_setInnerPointsToZero(long jarg1, DirichletUpdateVector jarg1_, long jarg2, DataVector jarg2_);
  public final static native void DirichletUpdateVector_multiplyBoundaryVector(long jarg1, DirichletUpdateVector jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_);
  public final static native void DirichletUpdateVector_multiplyBoundary(long jarg1, DirichletUpdateVector jarg1_, long jarg2, DataVector jarg2_, double jarg3);
  public final static native void DirichletUpdateVector_multiply(long jarg1, DirichletUpdateVector jarg1_, long jarg2, DataVector jarg2_, double jarg3, long jarg4);
  public final static native void HashGenerator_regular__SWIG_0(long jarg1, HashGenerator jarg1_, long jarg2, GridStorage jarg2_, long jarg3, double jarg4);
  public final static native void HashGenerator_regular__SWIG_1(long jarg1, HashGenerator jarg1_, long jarg2, GridStorage jarg2_, long jarg3);
  public final static native void HashGenerator_regularInter__SWIG_0(long jarg1, HashGenerator jarg1_, long jarg2, GridStorage jarg2_, long jarg3, long jarg4, double jarg5);
  public final static native void HashGenerator_regularInter__SWIG_1(long jarg1, HashGenerator jarg1_, long jarg2, GridStorage jarg2_, long jarg3, long jarg4);
  public final static native void HashGenerator_regular_inter__SWIG_0(long jarg1, HashGenerator jarg1_, long jarg2, GridStorage jarg2_, long jarg3, long jarg4, double jarg5);
  public final static native void HashGenerator_regular_inter__SWIG_1(long jarg1, HashGenerator jarg1_, long jarg2, GridStorage jarg2_, long jarg3, long jarg4);
  public final static native void HashGenerator_cliques__SWIG_0(long jarg1, HashGenerator jarg1_, long jarg2, GridStorage jarg2_, long jarg3, long jarg4, double jarg5);
  public final static native void HashGenerator_cliques__SWIG_1(long jarg1, HashGenerator jarg1_, long jarg2, GridStorage jarg2_, long jarg3, long jarg4);
  public final static native void HashGenerator_full(long jarg1, HashGenerator jarg1_, long jarg2, GridStorage jarg2_, long jarg3);
  public final static native void HashGenerator_fullWithBoundary(long jarg1, HashGenerator jarg1_, long jarg2, GridStorage jarg2_, long jarg3);
  public final static native void HashGenerator_regularWithBoundaries__SWIG_0(long jarg1, HashGenerator jarg1_, long jarg2, GridStorage jarg2_, long jarg3, long jarg4);
  public final static native void HashGenerator_regularWithBoundaries__SWIG_1(long jarg1, HashGenerator jarg1_, long jarg2, GridStorage jarg2_, long jarg3);
  public final static native void HashGenerator_regularWithPeriodicBoundaries__SWIG_0(long jarg1, HashGenerator jarg1_, long jarg2, GridStorage jarg2_, long jarg3, double jarg4);
  public final static native void HashGenerator_regularWithPeriodicBoundaries__SWIG_1(long jarg1, HashGenerator jarg1_, long jarg2, GridStorage jarg2_, long jarg3);
  public final static native void HashGenerator_squareRoot(long jarg1, HashGenerator jarg1_, long jarg2, GridStorage jarg2_, long jarg3);
  public final static native void HashGenerator_truncated(long jarg1, HashGenerator jarg1_, long jarg2, GridStorage jarg2_, long jarg3, long jarg4);
  public final static native long new_HashGenerator();
  public final static native void delete_HashGenerator(long jarg1);
  public final static native long new_AbstractRefinement_refinement_key(long jarg1, GridPoint jarg1_, long jarg2);
  public final static native void delete_AbstractRefinement_refinement_key(long jarg1);
  public final static native long AbstractRefinement_refinement_key_getLevelVector(long jarg1, AbstractRefinement_refinement_key jarg1_);
  public final static native long AbstractRefinement_refinement_key_getPoint(long jarg1, AbstractRefinement_refinement_key jarg1_);
  public final static native long AbstractRefinement_refinement_key_getSeq(long jarg1, AbstractRefinement_refinement_key jarg1_);
  public final static native boolean AbstractRefinement_compare_pairs(long jarg1, long jarg2);
  public final static native void AbstractRefinement_free_refine(long jarg1, AbstractRefinement jarg1_, long jarg2, GridStorage jarg2_, long jarg3, RefinementFunctor jarg3_);
  public final static native long AbstractRefinement_getNumberOfRefinablePoints(long jarg1, AbstractRefinement jarg1_, long jarg2, GridStorage jarg2_);
  public final static native void AbstractRefinement_refineGridpoint1D__SWIG_0(long jarg1, AbstractRefinement jarg1_, long jarg2, GridStorage jarg2_, long jarg3, GridPoint jarg3_, long jarg4);
  public final static native void AbstractRefinement_refineGridpoint1D__SWIG_1(long jarg1, AbstractRefinement jarg1_, long jarg2, GridStorage jarg2_, long jarg3, long jarg4);
  public final static native boolean AbstractRefinement_isRefinable(long jarg1, AbstractRefinement jarg1_, long jarg2, GridStorage jarg2_, long jarg3, GridPoint jarg3_);
  public final static native void delete_AbstractRefinement(long jarg1);
  public final static native long AbstractRefinement_getIndexOfMin(long jarg1, AbstractRefinement jarg1_, long jarg2, long jarg3);
  public final static native long new_RefinementDecorator(long jarg1, AbstractRefinement jarg1_);
  public final static native void delete_RefinementDecorator(long jarg1);
  public final static native void RefinementDecorator_free_refine(long jarg1, RefinementDecorator jarg1_, long jarg2, GridStorage jarg2_, long jarg3, RefinementFunctor jarg3_);
  public final static native long RefinementDecorator_getNumberOfRefinablePoints(long jarg1, RefinementDecorator jarg1_, long jarg2, GridStorage jarg2_);
  public final static native void RefinementDecorator_refineGridpoint1D(long jarg1, RefinementDecorator jarg1_, long jarg2, GridStorage jarg2_, long jarg3, GridPoint jarg3_, long jarg4);
  public final static native boolean RefinementDecorator_checkAdmissibility(long jarg1, RefinementDecorator jarg1_, long jarg2, GridStorage jarg2_, long jarg3, GridPoint jarg3_);
  public final static native void HashRefinement_free_refine(long jarg1, HashRefinement jarg1_, long jarg2, GridStorage jarg2_, long jarg3, RefinementFunctor jarg3_);
  public final static native long HashRefinement_getNumberOfRefinablePoints(long jarg1, HashRefinement jarg1_, long jarg2, GridStorage jarg2_);
  public final static native void HashRefinement_refineGridpoint1D__SWIG_0(long jarg1, HashRefinement jarg1_, long jarg2, GridStorage jarg2_, long jarg3, GridPoint jarg3_, long jarg4);
  public final static native void HashRefinement_refineGridpoint1D__SWIG_1(long jarg1, HashRefinement jarg1_, long jarg2, GridStorage jarg2_, long jarg3, long jarg4);
  public final static native void delete_HashRefinement(long jarg1);
  public final static native long new_HashRefinement();
  public final static native void HashCoarsening_free_coarsen_NFirstOnly__SWIG_0(long jarg1, HashCoarsening jarg1_, long jarg2, GridStorage jarg2_, long jarg3, CoarseningFunctor jarg3_, long jarg4, DataVector jarg4_, long jarg5, long jarg6);
  public final static native void HashCoarsening_free_coarsen_NFirstOnly__SWIG_1(long jarg1, HashCoarsening jarg1_, long jarg2, GridStorage jarg2_, long jarg3, CoarseningFunctor jarg3_, long jarg4, DataVector jarg4_, long jarg5);
  public final static native void HashCoarsening_free_coarsen(long jarg1, HashCoarsening jarg1_, long jarg2, GridStorage jarg2_, long jarg3, CoarseningFunctor jarg3_, long jarg4, DataVector jarg4_);
  public final static native long HashCoarsening_getNumberOfRemovablePoints(long jarg1, HashCoarsening jarg1_, long jarg2, GridStorage jarg2_);
  public final static native long HashCoarsening_getDeletedPoints(long jarg1, HashCoarsening jarg1_);
  public final static native long new_HashCoarsening();
  public final static native void delete_HashCoarsening(long jarg1);
  public final static native void HashRefinementBoundaries_free_refine(long jarg1, HashRefinementBoundaries jarg1_, long jarg2, GridStorage jarg2_, long jarg3, RefinementFunctor jarg3_);
  public final static native long HashRefinementBoundaries_getNumberOfRefinablePoints(long jarg1, HashRefinementBoundaries jarg1_, long jarg2, GridStorage jarg2_);
  public final static native void HashRefinementBoundaries_refineGridpoint1D(long jarg1, HashRefinementBoundaries jarg1_, long jarg2, GridStorage jarg2_, long jarg3, GridPoint jarg3_, long jarg4);
  public final static native long new_HashRefinementBoundaries();
  public final static native void delete_HashRefinementBoundaries(long jarg1);
  public final static native long new_PredictiveRefinementIndicator__SWIG_0(long jarg1, Grid jarg1_, long jarg2, DataMatrix jarg2_, long jarg3, DataVector jarg3_, long jarg4, double jarg5, java.math.BigInteger jarg6);
  public final static native long new_PredictiveRefinementIndicator__SWIG_1(long jarg1, Grid jarg1_, long jarg2, DataMatrix jarg2_, long jarg3, DataVector jarg3_, long jarg4, double jarg5);
  public final static native long new_PredictiveRefinementIndicator__SWIG_2(long jarg1, Grid jarg1_, long jarg2, DataMatrix jarg2_, long jarg3, DataVector jarg3_, long jarg4);
  public final static native long new_PredictiveRefinementIndicator__SWIG_3(long jarg1, Grid jarg1_, long jarg2, DataMatrix jarg2_, long jarg3, DataVector jarg3_);
  public final static native void delete_PredictiveRefinementIndicator(long jarg1);
  public final static native double PredictiveRefinementIndicator_operatorParentheses__SWIG_0(long jarg1, PredictiveRefinementIndicator jarg1_, long jarg2, GridPoint jarg2_);
  public final static native double PredictiveRefinementIndicator_runOperator(long jarg1, PredictiveRefinementIndicator jarg1_, long jarg2, GridStorage jarg2_, long jarg3);
  public final static native long PredictiveRefinementIndicator_getRefinementsNum(long jarg1, PredictiveRefinementIndicator jarg1_);
  public final static native double PredictiveRefinementIndicator_getRefinementThreshold(long jarg1, PredictiveRefinementIndicator jarg1_);
  public final static native double PredictiveRefinementIndicator_start(long jarg1, PredictiveRefinementIndicator jarg1_);
  public final static native java.math.BigInteger PredictiveRefinementIndicator_getMinSupportPoints(long jarg1, PredictiveRefinementIndicator jarg1_);
  public final static native void PredictiveRefinementIndicator_setMinSupportPoints(long jarg1, PredictiveRefinementIndicator jarg1_, java.math.BigInteger jarg2);
  public final static native double PredictiveRefinementIndicator_operatorParentheses__SWIG_1(long jarg1, PredictiveRefinementIndicator jarg1_, long jarg2, GridStorage jarg2_, long jarg3);
  public final static native long new_PredictiveRefinement_refinement_key(long jarg1, GridPoint jarg1_, long jarg2, long jarg3);
  public final static native long PredictiveRefinement_refinement_key_getDim(long jarg1, PredictiveRefinement_refinement_key jarg1_);
  public final static native void delete_PredictiveRefinement_refinement_key(long jarg1);
  public final static native void PredictiveRefinement_free_refine__SWIG_0_0(long jarg1, PredictiveRefinement jarg1_, long jarg2, GridStorage jarg2_, long jarg3, RefinementFunctor jarg3_);
  public final static native long new_PredictiveRefinement(long jarg1, AbstractRefinement jarg1_);
  public final static native void PredictiveRefinement_free_refine__SWIG_1(long jarg1, PredictiveRefinement jarg1_, long jarg2, GridStorage jarg2_, long jarg3, PredictiveRefinementIndicator jarg3_);
  public final static native void PredictiveRefinement_setAlpha(long jarg1, PredictiveRefinement jarg1_, long jarg2, DataVector jarg2_);
  public final static native void delete_PredictiveRefinement(long jarg1);
  public final static native long new_ForwardSelectorRefinementIndicator__SWIG_0(long jarg1, Grid jarg1_, long jarg2, DataMatrix jarg2_, long jarg3, DataVector jarg3_, long jarg4, DataVector jarg4_, long jarg5, DataVector jarg5_, double jarg6, double jarg7, long jarg8, boolean jarg9);
  public final static native long new_ForwardSelectorRefinementIndicator__SWIG_1(long jarg1, Grid jarg1_, long jarg2, DataMatrix jarg2_, long jarg3, DataVector jarg3_, long jarg4, DataVector jarg4_, long jarg5, DataVector jarg5_, double jarg6, double jarg7, long jarg8);
  public final static native long new_ForwardSelectorRefinementIndicator__SWIG_2(long jarg1, Grid jarg1_, long jarg2, DataMatrix jarg2_, long jarg3, DataVector jarg3_, long jarg4, DataVector jarg4_, long jarg5, DataVector jarg5_, double jarg6, double jarg7);
  public final static native long new_ForwardSelectorRefinementIndicator__SWIG_3(long jarg1, Grid jarg1_, long jarg2, DataMatrix jarg2_, long jarg3, DataVector jarg3_, long jarg4, DataVector jarg4_, long jarg5, DataVector jarg5_, double jarg6);
  public final static native double ForwardSelectorRefinementIndicator_operatorParentheses__SWIG_0(long jarg1, ForwardSelectorRefinementIndicator jarg1_, long jarg2, GridStorage jarg2_, long jarg3);
  public final static native double ForwardSelectorRefinementIndicator_runOperator(long jarg1, ForwardSelectorRefinementIndicator jarg1_, long jarg2, GridStorage jarg2_, long jarg3);
  public final static native long ForwardSelectorRefinementIndicator_getRefinementsNum(long jarg1, ForwardSelectorRefinementIndicator jarg1_);
  public final static native double ForwardSelectorRefinementIndicator_getRefinementThreshold(long jarg1, ForwardSelectorRefinementIndicator jarg1_);
  public final static native double ForwardSelectorRefinementIndicator_start(long jarg1, ForwardSelectorRefinementIndicator jarg1_);
  public final static native double ForwardSelectorRefinementIndicator_operatorParentheses__SWIG_1(long jarg1, ForwardSelectorRefinementIndicator jarg1_, long jarg2, GridPoint jarg2_);
  public final static native void ForwardSelectorRefinementIndicator_update(long jarg1, ForwardSelectorRefinementIndicator jarg1_, long jarg2, GridPoint jarg2_);
  public final static native void delete_ForwardSelectorRefinementIndicator(long jarg1);
  public final static native long new_ForwardSelectorRefinement_refinement_key(long jarg1, GridPoint jarg1_, long jarg2, long jarg3);
  public final static native long ForwardSelectorRefinement_refinement_key_getDim(long jarg1, ForwardSelectorRefinement_refinement_key jarg1_);
  public final static native void delete_ForwardSelectorRefinement_refinement_key(long jarg1);
  public final static native void ForwardSelectorRefinement_free_refine__SWIG_0_0(long jarg1, ForwardSelectorRefinement jarg1_, long jarg2, GridStorage jarg2_, long jarg3, RefinementFunctor jarg3_);
  public final static native long new_ForwardSelectorRefinement(long jarg1, AbstractRefinement jarg1_);
  public final static native void ForwardSelectorRefinement_free_refine__SWIG_1(long jarg1, ForwardSelectorRefinement jarg1_, long jarg2, GridStorage jarg2_, long jarg3, ForwardSelectorRefinementIndicator jarg3_);
  public final static native void delete_ForwardSelectorRefinement(long jarg1);
  public final static native long new_ImpurityRefinementIndicator__SWIG_0(long jarg1, Grid jarg1_, long jarg2, DataMatrix jarg2_, long jarg3, DataVector jarg3_, long jarg4, DataVector jarg4_, long jarg5, DataVector jarg5_, long jarg6, DataVector jarg6_, double jarg7, long jarg8);
  public final static native long new_ImpurityRefinementIndicator__SWIG_1(long jarg1, Grid jarg1_, long jarg2, DataMatrix jarg2_, long jarg3, DataVector jarg3_, long jarg4, DataVector jarg4_, long jarg5, DataVector jarg5_, long jarg6, DataVector jarg6_, double jarg7);
  public final static native long new_ImpurityRefinementIndicator__SWIG_2(long jarg1, Grid jarg1_, long jarg2, DataMatrix jarg2_, long jarg3, DataVector jarg3_, long jarg4, DataVector jarg4_, long jarg5, DataVector jarg5_, long jarg6, DataVector jarg6_);
  public final static native double ImpurityRefinementIndicator_operatorParentheses__SWIG_0(long jarg1, ImpurityRefinementIndicator jarg1_, long jarg2, GridPoint jarg2_);
  public final static native long ImpurityRefinementIndicator_getRefinementsNum(long jarg1, ImpurityRefinementIndicator jarg1_);
  public final static native double ImpurityRefinementIndicator_getRefinementThreshold(long jarg1, ImpurityRefinementIndicator jarg1_);
  public final static native double ImpurityRefinementIndicator_start(long jarg1, ImpurityRefinementIndicator jarg1_);
  public final static native double ImpurityRefinementIndicator_operatorParentheses__SWIG_1(long jarg1, ImpurityRefinementIndicator jarg1_, long jarg2, GridStorage jarg2_, long jarg3);
  public final static native void ImpurityRefinementIndicator_update(long jarg1, ImpurityRefinementIndicator jarg1_, long jarg2, GridPoint jarg2_);
  public final static native void ImpurityRefinementIndicator_alphas_set(long jarg1, ImpurityRefinementIndicator jarg1_, long jarg2, DataVector jarg2_);
  public final static native long ImpurityRefinementIndicator_alphas_get(long jarg1, ImpurityRefinementIndicator jarg1_);
  public final static native void ImpurityRefinementIndicator_w1_set(long jarg1, ImpurityRefinementIndicator jarg1_, long jarg2, DataVector jarg2_);
  public final static native long ImpurityRefinementIndicator_w1_get(long jarg1, ImpurityRefinementIndicator jarg1_);
  public final static native void ImpurityRefinementIndicator_w2_set(long jarg1, ImpurityRefinementIndicator jarg1_, long jarg2, DataVector jarg2_);
  public final static native long ImpurityRefinementIndicator_w2_get(long jarg1, ImpurityRefinementIndicator jarg1_);
  public final static native void delete_ImpurityRefinementIndicator(long jarg1);
  public final static native long new_ImpurityRefinement_refinement_key(long jarg1, GridPoint jarg1_, long jarg2, long jarg3);
  public final static native long ImpurityRefinement_refinement_key_getDim(long jarg1, ImpurityRefinement_refinement_key jarg1_);
  public final static native void delete_ImpurityRefinement_refinement_key(long jarg1);
  public final static native void ImpurityRefinement_free_refine__SWIG_0_0(long jarg1, ImpurityRefinement jarg1_, long jarg2, GridStorage jarg2_, long jarg3, RefinementFunctor jarg3_);
  public final static native long new_ImpurityRefinement(long jarg1, AbstractRefinement jarg1_);
  public final static native void ImpurityRefinement_free_refine__SWIG_1(long jarg1, ImpurityRefinement jarg1_, long jarg2, GridStorage jarg2_, long jarg3, ImpurityRefinementIndicator jarg3_);
  public final static native void delete_ImpurityRefinement(long jarg1);
  public final static native long new_StandardGridGenerator(long jarg1, GridStorage jarg1_);
  public final static native void delete_StandardGridGenerator(long jarg1);
  public final static native void StandardGridGenerator_regular__SWIG_0(long jarg1, StandardGridGenerator jarg1_, long jarg2);
  public final static native void StandardGridGenerator_regular__SWIG_1(long jarg1, StandardGridGenerator jarg1_, long jarg2, double jarg3);
  public final static native void StandardGridGenerator_regularInter(long jarg1, StandardGridGenerator jarg1_, long jarg2, long jarg3, double jarg4);
  public final static native void StandardGridGenerator_cliques__SWIG_0(long jarg1, StandardGridGenerator jarg1_, long jarg2, long jarg3);
  public final static native void StandardGridGenerator_cliques__SWIG_1(long jarg1, StandardGridGenerator jarg1_, long jarg2, long jarg3, double jarg4);
  public final static native void StandardGridGenerator_full(long jarg1, StandardGridGenerator jarg1_, long jarg2);
  public final static native void StandardGridGenerator_refine(long jarg1, StandardGridGenerator jarg1_, long jarg2, RefinementFunctor jarg2_);
  public final static native void StandardGridGenerator_refineInter__SWIG_0(long jarg1, StandardGridGenerator jarg1_, long jarg2, RefinementFunctor jarg2_, long jarg3);
  public final static native void StandardGridGenerator_refineInter__SWIG_1(long jarg1, StandardGridGenerator jarg1_, long jarg2, RefinementFunctor jarg2_, long jarg3);
  public final static native long StandardGridGenerator_getNumberOfRefinablePoints(long jarg1, StandardGridGenerator jarg1_);
  public final static native void StandardGridGenerator_coarsen(long jarg1, StandardGridGenerator jarg1_, long jarg2, CoarseningFunctor jarg2_, long jarg3, DataVector jarg3_);
  public final static native void StandardGridGenerator_coarsenNFirstOnly(long jarg1, StandardGridGenerator jarg1_, long jarg2, CoarseningFunctor jarg2_, long jarg3, DataVector jarg3_, long jarg4);
  public final static native long StandardGridGenerator_getNumberOfRemovablePoints(long jarg1, StandardGridGenerator jarg1_);
  public final static native void StandardGridGenerator_refineMaxLevel(long jarg1, StandardGridGenerator jarg1_, long jarg2, RefinementFunctor jarg2_, long jarg3);
  public final static native long StandardGridGenerator_getNumberOfRefinablePointsToMaxLevel(long jarg1, StandardGridGenerator jarg1_, long jarg2);
  public final static native long new_L0BoundaryGridGenerator(long jarg1, GridStorage jarg1_);
  public final static native void delete_L0BoundaryGridGenerator(long jarg1);
  public final static native void L0BoundaryGridGenerator_regular(long jarg1, L0BoundaryGridGenerator jarg1_, long jarg2);
  public final static native void L0BoundaryGridGenerator_cliques(long jarg1, L0BoundaryGridGenerator jarg1_, long jarg2, long jarg3);
  public final static native void L0BoundaryGridGenerator_full(long jarg1, L0BoundaryGridGenerator jarg1_, long jarg2);
  public final static native void L0BoundaryGridGenerator_refine(long jarg1, L0BoundaryGridGenerator jarg1_, long jarg2, RefinementFunctor jarg2_);
  public final static native long L0BoundaryGridGenerator_getNumberOfRefinablePoints(long jarg1, L0BoundaryGridGenerator jarg1_);
  public final static native void L0BoundaryGridGenerator_coarsen(long jarg1, L0BoundaryGridGenerator jarg1_, long jarg2, CoarseningFunctor jarg2_, long jarg3, DataVector jarg3_);
  public final static native void L0BoundaryGridGenerator_coarsenNFirstOnly(long jarg1, L0BoundaryGridGenerator jarg1_, long jarg2, CoarseningFunctor jarg2_, long jarg3, DataVector jarg3_, long jarg4);
  public final static native long L0BoundaryGridGenerator_getNumberOfRemovablePoints(long jarg1, L0BoundaryGridGenerator jarg1_);
  public final static native void L0BoundaryGridGenerator_refineMaxLevel(long jarg1, L0BoundaryGridGenerator jarg1_, long jarg2, RefinementFunctor jarg2_, long jarg3);
  public final static native long L0BoundaryGridGenerator_getNumberOfRefinablePointsToMaxLevel(long jarg1, L0BoundaryGridGenerator jarg1_, long jarg2);
  public final static native long new_PrewaveletGridGenerator(long jarg1, GridStorage jarg1_, long jarg2, GridStorage jarg2_);
  public final static native void delete_PrewaveletGridGenerator(long jarg1);
  public final static native void PrewaveletGridGenerator_regular__SWIG_0(long jarg1, PrewaveletGridGenerator jarg1_, long jarg2);
  public final static native void PrewaveletGridGenerator_cliques__SWIG_0(long jarg1, PrewaveletGridGenerator jarg1_, long jarg2, long jarg3);
  public final static native void PrewaveletGridGenerator_regular__SWIG_1(long jarg1, PrewaveletGridGenerator jarg1_, long jarg2, double jarg3);
  public final static native void PrewaveletGridGenerator_cliques__SWIG_1(long jarg1, PrewaveletGridGenerator jarg1_, long jarg2, long jarg3, double jarg4);
  public final static native void PrewaveletGridGenerator_full(long jarg1, PrewaveletGridGenerator jarg1_, long jarg2);
  public final static native void PrewaveletGridGenerator_refine(long jarg1, PrewaveletGridGenerator jarg1_, long jarg2, RefinementFunctor jarg2_);
  public final static native long PrewaveletGridGenerator_getNumberOfRefinablePoints(long jarg1, PrewaveletGridGenerator jarg1_);
  public final static native void PrewaveletGridGenerator_coarsen(long jarg1, PrewaveletGridGenerator jarg1_, long jarg2, CoarseningFunctor jarg2_, long jarg3, DataVector jarg3_);
  public final static native void PrewaveletGridGenerator_coarsenNFirstOnly(long jarg1, PrewaveletGridGenerator jarg1_, long jarg2, CoarseningFunctor jarg2_, long jarg3, DataVector jarg3_, long jarg4);
  public final static native long PrewaveletGridGenerator_getNumberOfRemovablePoints(long jarg1, PrewaveletGridGenerator jarg1_);
  public final static native void PrewaveletGridGenerator_refineMaxLevel(long jarg1, PrewaveletGridGenerator jarg1_, long jarg2, RefinementFunctor jarg2_, long jarg3);
  public final static native long PrewaveletGridGenerator_getNumberOfRefinablePointsToMaxLevel(long jarg1, PrewaveletGridGenerator jarg1_, long jarg2);
  public final static native long new_PeriodicGridGenerator(long jarg1, GridStorage jarg1_);
  public final static native void delete_PeriodicGridGenerator(long jarg1);
  public final static native void PeriodicGridGenerator_regular__SWIG_0(long jarg1, PeriodicGridGenerator jarg1_, long jarg2);
  public final static native void PeriodicGridGenerator_regular__SWIG_1(long jarg1, PeriodicGridGenerator jarg1_, long jarg2, double jarg3);
  public final static native void PeriodicGridGenerator_full(long jarg1, PeriodicGridGenerator jarg1_, long jarg2);
  public final static native void PeriodicGridGenerator_refine(long jarg1, PeriodicGridGenerator jarg1_, long jarg2, RefinementFunctor jarg2_);
  public final static native void PeriodicGridGenerator_cliques__SWIG_0(long jarg1, PeriodicGridGenerator jarg1_, long jarg2, long jarg3);
  public final static native void PeriodicGridGenerator_cliques__SWIG_1(long jarg1, PeriodicGridGenerator jarg1_, long jarg2, long jarg3, double jarg4);
  public final static native long PeriodicGridGenerator_getNumberOfRefinablePoints(long jarg1, PeriodicGridGenerator jarg1_);
  public final static native void PeriodicGridGenerator_coarsen(long jarg1, PeriodicGridGenerator jarg1_, long jarg2, CoarseningFunctor jarg2_, long jarg3, DataVector jarg3_);
  public final static native void PeriodicGridGenerator_coarsenNFirstOnly(long jarg1, PeriodicGridGenerator jarg1_, long jarg2, CoarseningFunctor jarg2_, long jarg3, DataVector jarg3_, long jarg4);
  public final static native long PeriodicGridGenerator_getNumberOfRemovablePoints(long jarg1, PeriodicGridGenerator jarg1_);
  public final static native void PeriodicGridGenerator_refineMaxLevel(long jarg1, PeriodicGridGenerator jarg1_, long jarg2, RefinementFunctor jarg2_, long jarg3);
  public final static native long PeriodicGridGenerator_getNumberOfRefinablePointsToMaxLevel(long jarg1, PeriodicGridGenerator jarg1_, long jarg2);
  public final static native long new_StretchedBoundaryGridGenerator(long jarg1, GridStorage jarg1_);
  public final static native void delete_StretchedBoundaryGridGenerator(long jarg1);
  public final static native void StretchedBoundaryGridGenerator_regular(long jarg1, StretchedBoundaryGridGenerator jarg1_, long jarg2);
  public final static native void StretchedBoundaryGridGenerator_cliques(long jarg1, StretchedBoundaryGridGenerator jarg1_, long jarg2, long jarg3);
  public final static native void StretchedBoundaryGridGenerator_full(long jarg1, StretchedBoundaryGridGenerator jarg1_, long jarg2);
  public final static native void StretchedBoundaryGridGenerator_refine(long jarg1, StretchedBoundaryGridGenerator jarg1_, long jarg2, RefinementFunctor jarg2_);
  public final static native long StretchedBoundaryGridGenerator_getNumberOfRefinablePoints(long jarg1, StretchedBoundaryGridGenerator jarg1_);
  public final static native void StretchedBoundaryGridGenerator_coarsen(long jarg1, StretchedBoundaryGridGenerator jarg1_, long jarg2, CoarseningFunctor jarg2_, long jarg3, DataVector jarg3_);
  public final static native void StretchedBoundaryGridGenerator_coarsenNFirstOnly(long jarg1, StretchedBoundaryGridGenerator jarg1_, long jarg2, CoarseningFunctor jarg2_, long jarg3, DataVector jarg3_, long jarg4);
  public final static native long StretchedBoundaryGridGenerator_getNumberOfRemovablePoints(long jarg1, StretchedBoundaryGridGenerator jarg1_);
  public final static native void StretchedBoundaryGridGenerator_refineMaxLevel(long jarg1, StretchedBoundaryGridGenerator jarg1_, long jarg2, RefinementFunctor jarg2_, long jarg3);
  public final static native long StretchedBoundaryGridGenerator_getNumberOfRefinablePointsToMaxLevel(long jarg1, StretchedBoundaryGridGenerator jarg1_, long jarg2);
  public final static native long new_BoundaryGridGenerator__SWIG_0(long jarg1, GridStorage jarg1_, long jarg2);
  public final static native long new_BoundaryGridGenerator__SWIG_1(long jarg1, GridStorage jarg1_);
  public final static native void delete_BoundaryGridGenerator(long jarg1);
  public final static native long BoundaryGridGenerator_getBoundaryLevel(long jarg1, BoundaryGridGenerator jarg1_);
  public final static native void BoundaryGridGenerator_setBoundaryLevel(long jarg1, BoundaryGridGenerator jarg1_, long jarg2);
  public final static native void BoundaryGridGenerator_regular(long jarg1, BoundaryGridGenerator jarg1_, long jarg2);
  public final static native void BoundaryGridGenerator_cliques(long jarg1, BoundaryGridGenerator jarg1_, long jarg2, long jarg3);
  public final static native void BoundaryGridGenerator_full(long jarg1, BoundaryGridGenerator jarg1_, long jarg2);
  public final static native void BoundaryGridGenerator_refine(long jarg1, BoundaryGridGenerator jarg1_, long jarg2, RefinementFunctor jarg2_);
  public final static native long BoundaryGridGenerator_getNumberOfRefinablePoints(long jarg1, BoundaryGridGenerator jarg1_);
  public final static native void BoundaryGridGenerator_coarsen(long jarg1, BoundaryGridGenerator jarg1_, long jarg2, CoarseningFunctor jarg2_, long jarg3, DataVector jarg3_);
  public final static native void BoundaryGridGenerator_coarsenNFirstOnly(long jarg1, BoundaryGridGenerator jarg1_, long jarg2, CoarseningFunctor jarg2_, long jarg3, DataVector jarg3_, long jarg4);
  public final static native long BoundaryGridGenerator_getNumberOfRemovablePoints(long jarg1, BoundaryGridGenerator jarg1_);
  public final static native void BoundaryGridGenerator_refineMaxLevel(long jarg1, BoundaryGridGenerator jarg1_, long jarg2, RefinementFunctor jarg2_, long jarg3);
  public final static native long BoundaryGridGenerator_getNumberOfRefinablePointsToMaxLevel(long jarg1, BoundaryGridGenerator jarg1_, long jarg2);
  public final static native long new_SquareRootGridGenerator(long jarg1, GridStorage jarg1_);
  public final static native void delete_SquareRootGridGenerator(long jarg1);
  public final static native void SquareRootGridGenerator_regular(long jarg1, SquareRootGridGenerator jarg1_, long jarg2);
  public final static native void SquareRootGridGenerator_cliques(long jarg1, SquareRootGridGenerator jarg1_, long jarg2, long jarg3);
  public final static native void SquareRootGridGenerator_full(long jarg1, SquareRootGridGenerator jarg1_, long jarg2);
  public final static native void SquareRootGridGenerator_refine(long jarg1, SquareRootGridGenerator jarg1_, long jarg2, RefinementFunctor jarg2_);
  public final static native long SquareRootGridGenerator_getNumberOfRefinablePoints(long jarg1, SquareRootGridGenerator jarg1_);
  public final static native void SquareRootGridGenerator_coarsen(long jarg1, SquareRootGridGenerator jarg1_, long jarg2, CoarseningFunctor jarg2_, long jarg3, DataVector jarg3_);
  public final static native void SquareRootGridGenerator_coarsenNFirstOnly(long jarg1, SquareRootGridGenerator jarg1_, long jarg2, CoarseningFunctor jarg2_, long jarg3, DataVector jarg3_, long jarg4);
  public final static native long SquareRootGridGenerator_getNumberOfRemovablePoints(long jarg1, SquareRootGridGenerator jarg1_);
  public final static native void SquareRootGridGenerator_refineMaxLevel(long jarg1, SquareRootGridGenerator jarg1_, long jarg2, RefinementFunctor jarg2_, long jarg3);
  public final static native long SquareRootGridGenerator_getNumberOfRefinablePointsToMaxLevel(long jarg1, SquareRootGridGenerator jarg1_, long jarg2);
  public final static native long new_SurplusVolumeRefinementFunctor__SWIG_0(long jarg1, DataVector jarg1_, long jarg2, double jarg3);
  public final static native long new_SurplusVolumeRefinementFunctor__SWIG_1(long jarg1, DataVector jarg1_, long jarg2);
  public final static native long new_SurplusVolumeRefinementFunctor__SWIG_2(long jarg1, DataVector jarg1_);
  public final static native void delete_SurplusVolumeRefinementFunctor(long jarg1);
  public final static native double SurplusVolumeRefinementFunctor_operatorParentheses(long jarg1, SurplusVolumeRefinementFunctor jarg1_, long jarg2, GridStorage jarg2_, long jarg3);
  public final static native double SurplusVolumeRefinementFunctor_start(long jarg1, SurplusVolumeRefinementFunctor jarg1_);
  public final static native long SurplusVolumeRefinementFunctor_getRefinementsNum(long jarg1, SurplusVolumeRefinementFunctor jarg1_);
  public final static native double SurplusVolumeRefinementFunctor_getRefinementThreshold(long jarg1, SurplusVolumeRefinementFunctor jarg1_);
  public final static native long new_SurplusCoarseningFunctor__SWIG_0(long jarg1, DataVector jarg1_, long jarg2, double jarg3);
  public final static native long new_SurplusCoarseningFunctor__SWIG_1(long jarg1, DataVector jarg1_, long jarg2);
  public final static native long new_SurplusCoarseningFunctor__SWIG_2(long jarg1, DataVector jarg1_);
  public final static native void delete_SurplusCoarseningFunctor(long jarg1);
  public final static native double SurplusCoarseningFunctor_operatorParentheses(long jarg1, SurplusCoarseningFunctor jarg1_, long jarg2, GridStorage jarg2_, long jarg3);
  public final static native double SurplusCoarseningFunctor_start(long jarg1, SurplusCoarseningFunctor jarg1_);
  public final static native long SurplusCoarseningFunctor_getRemovementsNum(long jarg1, SurplusCoarseningFunctor jarg1_);
  public final static native double SurplusCoarseningFunctor_getCoarseningThreshold(long jarg1, SurplusCoarseningFunctor jarg1_);
  public final static native long new_GridPrinter(long jarg1, Grid jarg1_);
  public final static native void delete_GridPrinter(long jarg1);
  public final static native void GridPrinter_printLevelIndexGrid(long jarg1, GridPrinter jarg1_, String jarg2);
  public final static native void GridPrinter_printGrid(long jarg1, GridPrinter jarg1_, long jarg2, DataVector jarg2_, String jarg3, long jarg4);
  public final static native void GridPrinter_printGridDomain(long jarg1, GridPrinter jarg1_, long jarg2, DataVector jarg2_, String jarg3, long jarg4, BoundingBox jarg4_, long jarg5);
  public final static native void GridPrinter_printSparseGrid(long jarg1, GridPrinter jarg1_, long jarg2, DataVector jarg2_, String jarg3, boolean jarg4);
  public final static native void GridPrinter_printSparseGridExpTransform(long jarg1, GridPrinter jarg1_, long jarg2, DataVector jarg2_, String jarg3, boolean jarg4);
  public final static native long new_GridPrinterForStretching(long jarg1, Grid jarg1_);
  public final static native void delete_GridPrinterForStretching(long jarg1);
  public final static native void GridPrinterForStretching_printGrid(long jarg1, GridPrinterForStretching jarg1_, long jarg2, DataVector jarg2_, String jarg3, long jarg4);
  public final static native void GridPrinterForStretching_printGridDomain(long jarg1, GridPrinterForStretching jarg1_, long jarg2, DataVector jarg2_, String jarg3, long jarg4, BoundingBox jarg4_, long jarg5);
  public final static native void GridPrinterForStretching_printGridDomainStretching(long jarg1, GridPrinterForStretching jarg1_, long jarg2, DataVector jarg2_, String jarg3, long jarg4, Stretching jarg4_, long jarg5);
  public final static native void GridPrinterForStretching_printSparseGrid(long jarg1, GridPrinterForStretching jarg1_, long jarg2, DataVector jarg2_, String jarg3, boolean jarg4);
  public final static native void GridPrinterForStretching_printSparseGridExpTransform(long jarg1, GridPrinterForStretching jarg1_, long jarg2, DataVector jarg2_, String jarg3, boolean jarg4);
  public final static native long new_StdNormalDistribution();
  public final static native void delete_StdNormalDistribution(long jarg1);
  public final static native double StdNormalDistribution_getCumulativeDensity(long jarg1, StdNormalDistribution jarg1_, double jarg2);
  public final static native double StdNormalDistribution_getDensity__SWIG_0(long jarg1, StdNormalDistribution jarg1_, double jarg2);
  public final static native double StdNormalDistribution_getDensity__SWIG_1(long jarg1, StdNormalDistribution jarg1_, double jarg2, double jarg3, double jarg4);
  public final static native double StdNormalDistribution_getNormedDensity(long jarg1, StdNormalDistribution jarg1_, double jarg2, double jarg3, double jarg4);
  public final static native long new_QuadRule1D();
  public final static native void delete_QuadRule1D(long jarg1);
  public final static native long QuadRule1D_getMaxSupportedLevel(long jarg1, QuadRule1D jarg1_);
  public final static native void QuadRule1D_getLevelPointsAndWeights(long jarg1, QuadRule1D jarg1_, long jarg2, long jarg3, DataVector jarg3_, long jarg4, DataVector jarg4_);
  public final static native long new_GaussLegendreQuadRule1D();
  public final static native void delete_GaussLegendreQuadRule1D(long jarg1);
  public final static native void GaussLegendreQuadRule1D_getLevelPointsAndWeightsNormalized(long jarg1, GaussLegendreQuadRule1D jarg1_, long jarg2, long jarg3, DataVector jarg3_, long jarg4, DataVector jarg4_);
  public final static native long GaussLegendreQuadRule1D_getInstance();
  public final static native long new_GaussHermiteQuadRule1D();
  public final static native void delete_GaussHermiteQuadRule1D(long jarg1);
  public final static native void GaussHermiteQuadRule1D_getLevelPointsAndWeightsNormalized__SWIG_0(long jarg1, GaussHermiteQuadRule1D jarg1_, long jarg2, long jarg3, DataVector jarg3_, long jarg4, DataVector jarg4_, double jarg5, double jarg6);
  public final static native void GaussHermiteQuadRule1D_getLevelPointsAndWeightsNormalized__SWIG_1(long jarg1, GaussHermiteQuadRule1D jarg1_, long jarg2, long jarg3, DataVector jarg3_, long jarg4, DataVector jarg4_, double jarg5);
  public final static native void GaussHermiteQuadRule1D_getLevelPointsAndWeightsNormalized__SWIG_2(long jarg1, GaussHermiteQuadRule1D jarg1_, long jarg2, long jarg3, DataVector jarg3_, long jarg4, DataVector jarg4_);
  public final static native long GaussHermiteQuadRule1D_getInstance();
  public final static native void delete_OperationFirstMoment(long jarg1);
  public final static native double OperationFirstMoment_doQuadrature(long jarg1, OperationFirstMoment jarg1_, long jarg2, DataVector jarg2_);
  public final static native void delete_OperationSecondMoment(long jarg1);
  public final static native double OperationSecondMoment_doQuadrature(long jarg1, OperationSecondMoment jarg1_, long jarg2, DataVector jarg2_);
  public final static native char GridDataBase_ascii_get();
  public final static native char GridDataBase_binary_get();
  public final static native long new_GridDataBase__SWIG_0(long jarg1);
  public final static native long new_GridDataBase__SWIG_1(long jarg1, Grid jarg1_, long jarg2, DataVector jarg2_);
  public final static native long new_GridDataBase__SWIG_2(String jarg1);
  public final static native void delete_GridDataBase(long jarg1);
  public final static native void GridDataBase_clear(long jarg1, GridDataBase jarg1_);
  public final static native String GridDataBase_toString(long jarg1, GridDataBase jarg1_);
  public final static native boolean GridDataBase_hasKey(long jarg1, GridDataBase jarg1_, long jarg2, GridPoint jarg2_);
  public final static native void GridDataBase_set(long jarg1, GridDataBase jarg1_, long jarg2, GridPoint jarg2_, double jarg3);
  public final static native void GridDataBase_setValuesFor(long jarg1, GridDataBase jarg1_, long jarg2, Grid jarg2_, long jarg3, DataVector jarg3_);
  public final static native long GridDataBase_size(long jarg1, GridDataBase jarg1_);
  public final static native long GridDataBase_dim(long jarg1, GridDataBase jarg1_);
  public final static native double GridDataBase_get(long jarg1, GridDataBase jarg1_, long jarg2, GridPoint jarg2_);
  public final static native void GridDataBase_remove(long jarg1, GridDataBase jarg1_, long jarg2, GridPoint jarg2_);
  public final static native void GridDataBase_save__SWIG_0(long jarg1, GridDataBase jarg1_, String jarg2, char jarg3);
  public final static native void GridDataBase_save__SWIG_1(long jarg1, GridDataBase jarg1_, String jarg2);
  public final static native void GridDataBase_load(long jarg1, GridDataBase jarg1_, String jarg2);
  public final static native long GridDataBase_begin(long jarg1, GridDataBase jarg1_);
  public final static native long GridDataBase_end(long jarg1, GridDataBase jarg1_);
  public final static native long new_ScreenOutput();
  public final static native void delete_ScreenOutput(long jarg1);
  public final static native void ScreenOutput_update(long jarg1, ScreenOutput jarg1_, long jarg2, String jarg3);
  public final static native void ScreenOutput_writeTitle(long jarg1, ScreenOutput jarg1_, String jarg2, String jarg3);
  public final static native void ScreenOutput_writeHelp(long jarg1, ScreenOutput jarg1_, String jarg2);
  public final static native void ScreenOutput_writeStartSolve(long jarg1, ScreenOutput jarg1_, String jarg2);
  public final static native void ScreenOutput_writeEmptyLines(long jarg1, ScreenOutput jarg1_, long jarg2);
  public final static native long new_OperationEvalPeriodic(long jarg1, GridStorage jarg1_);
  public final static native void delete_OperationEvalPeriodic(long jarg1);
  public final static native double OperationEvalPeriodic_eval(long jarg1, OperationEvalPeriodic jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_);
  public final static native long new_OperationMultipleEvalPeriodic(long jarg1, Grid jarg1_, long jarg2, DataMatrix jarg2_);
  public final static native void delete_OperationMultipleEvalPeriodic(long jarg1);
  public final static native void OperationMultipleEvalPeriodic_mult(long jarg1, OperationMultipleEvalPeriodic jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_);
  public final static native void OperationMultipleEvalPeriodic_multTranspose(long jarg1, OperationMultipleEvalPeriodic jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_);
  public final static native double OperationMultipleEvalPeriodic_getDuration(long jarg1, OperationMultipleEvalPeriodic jarg1_);
  public final static native void delete_SLinearBase(long jarg1);
  public final static native double SLinearBase_eval(long jarg1, SLinearBase jarg1_, long jarg2, long jarg3, double jarg4);
  public final static native long new_SLinearBase();
  public final static native void delete_SLinearBoundaryBase(long jarg1);
  public final static native double SLinearBoundaryBase_eval__SWIG_0(long jarg1, SLinearBoundaryBase jarg1_, long jarg2, long jarg3, double jarg4);
  public final static native double SLinearBoundaryBase_eval__SWIG_1(long jarg1, SLinearBoundaryBase jarg1_, long jarg2, long jarg3, double jarg4, double jarg5, double jarg6);
  public final static native long new_SLinearBoundaryBase();
  public final static native long new_SLinearClenshawCurtisBase();
  public final static native void delete_SLinearClenshawCurtisBase(long jarg1);
  public final static native double SLinearClenshawCurtisBase_eval(long jarg1, SLinearClenshawCurtisBase jarg1_, long jarg2, long jarg3, double jarg4);
  public final static native void delete_SLinearStretchedBase(long jarg1);
  public final static native double SLinearStretchedBase_stretchedEval(long jarg1, SLinearStretchedBase jarg1_, double jarg2, double jarg3, double jarg4);
  public final static native long new_SLinearStretchedBase();
  public final static native void delete_SLinearStretchedBoundaryBase(long jarg1);
  public final static native double SLinearStretchedBoundaryBase_stretchedEval(long jarg1, SLinearStretchedBoundaryBase jarg1_, double jarg2, double jarg3, double jarg4);
  public final static native double SLinearStretchedBoundaryBase_eval(long jarg1, SLinearStretchedBoundaryBase jarg1_, long jarg2, long jarg3, double jarg4, double jarg5, double jarg6);
  public final static native long new_SLinearStretchedBoundaryBase();
  public final static native void delete_SLinearModifiedBase(long jarg1);
  public final static native double SLinearModifiedBase_eval(long jarg1, SLinearModifiedBase jarg1_, long jarg2, long jarg3, double jarg4);
  public final static native long new_SLinearModifiedBase();
  public final static native long new_SPolyBase(long jarg1);
  public final static native void delete_SPolyBase(long jarg1);
  public final static native double SPolyBase_evalHierToTop(long jarg1, SPolyBase jarg1_, long jarg2, long jarg3, long jarg4, DataVector jarg4_, double jarg5);
  public final static native long SPolyBase_getDegree(long jarg1, SPolyBase jarg1_);
  public final static native double SPolyBase_eval(long jarg1, SPolyBase jarg1_, long jarg2, long jarg3, double jarg4);
  public final static native double SPolyBase_getIntegral(long jarg1, SPolyBase jarg1_, long jarg2, long jarg3);
  public final static native void delete_SWaveletBase(long jarg1);
  public final static native double SWaveletBase_eval(long jarg1, SWaveletBase jarg1_, long jarg2, long jarg3, double jarg4);
  public final static native double SWaveletBase_evalDx(long jarg1, SWaveletBase jarg1_, long jarg2, long jarg3, double jarg4);
  public final static native double SWaveletBase_evalDxDx(long jarg1, SWaveletBase jarg1_, long jarg2, long jarg3, double jarg4);
  public final static native long new_SWaveletBase();
  public final static native void delete_SWaveletBoundaryBase(long jarg1);
  public final static native double SWaveletBoundaryBase_eval(long jarg1, SWaveletBoundaryBase jarg1_, long jarg2, long jarg3, double jarg4);
  public final static native double SWaveletBoundaryBase_evalDx(long jarg1, SWaveletBoundaryBase jarg1_, long jarg2, long jarg3, double jarg4);
  public final static native double SWaveletBoundaryBase_evalDxDx(long jarg1, SWaveletBoundaryBase jarg1_, long jarg2, long jarg3, double jarg4);
  public final static native long new_SWaveletBoundaryBase();
  public final static native void delete_SWaveletModifiedBase(long jarg1);
  public final static native double SWaveletModifiedBase_eval(long jarg1, SWaveletModifiedBase jarg1_, long jarg2, long jarg3, double jarg4);
  public final static native double SWaveletModifiedBase_evalDx(long jarg1, SWaveletModifiedBase jarg1_, long jarg2, long jarg3, double jarg4);
  public final static native double SWaveletModifiedBase_evalDxDx(long jarg1, SWaveletModifiedBase jarg1_, long jarg2, long jarg3, double jarg4);
  public final static native long new_SWaveletModifiedBase();
  public final static native long new_SBsplineBase__SWIG_0();
  public final static native long new_SBsplineBase__SWIG_1(long jarg1);
  public final static native void delete_SBsplineBase(long jarg1);
  public final static native double SBsplineBase_uniformBSpline(long jarg1, SBsplineBase jarg1_, double jarg2, long jarg3);
  public final static native double SBsplineBase_uniformBSplineDx(long jarg1, SBsplineBase jarg1_, double jarg2, long jarg3);
  public final static native double SBsplineBase_uniformBSplineDxDx(long jarg1, SBsplineBase jarg1_, double jarg2, long jarg3);
  public final static native double SBsplineBase_eval(long jarg1, SBsplineBase jarg1_, long jarg2, long jarg3, double jarg4);
  public final static native double SBsplineBase_evalDx(long jarg1, SBsplineBase jarg1_, long jarg2, long jarg3, double jarg4);
  public final static native double SBsplineBase_evalDxDx(long jarg1, SBsplineBase jarg1_, long jarg2, long jarg3, double jarg4);
  public final static native long SBsplineBase_getDegree(long jarg1, SBsplineBase jarg1_);
  public final static native long new_SBsplineBoundaryBase__SWIG_0();
  public final static native long new_SBsplineBoundaryBase__SWIG_1(long jarg1);
  public final static native void delete_SBsplineBoundaryBase(long jarg1);
  public final static native double SBsplineBoundaryBase_eval(long jarg1, SBsplineBoundaryBase jarg1_, long jarg2, long jarg3, double jarg4);
  public final static native double SBsplineBoundaryBase_evalDx(long jarg1, SBsplineBoundaryBase jarg1_, long jarg2, long jarg3, double jarg4);
  public final static native double SBsplineBoundaryBase_evalDxDx(long jarg1, SBsplineBoundaryBase jarg1_, long jarg2, long jarg3, double jarg4);
  public final static native long SBsplineBoundaryBase_getDegree(long jarg1, SBsplineBoundaryBase jarg1_);
  public final static native long new_SBsplineClenshawCurtisBase__SWIG_0();
  public final static native long new_SBsplineClenshawCurtisBase__SWIG_1(long jarg1);
  public final static native void delete_SBsplineClenshawCurtisBase(long jarg1);
  public final static native double SBsplineClenshawCurtisBase_nonUniformBSpline(long jarg1, SBsplineClenshawCurtisBase jarg1_, double jarg2, long jarg3, long jarg4);
  public final static native double SBsplineClenshawCurtisBase_nonUniformBSplineDx(long jarg1, SBsplineClenshawCurtisBase jarg1_, double jarg2, long jarg3, long jarg4);
  public final static native double SBsplineClenshawCurtisBase_nonUniformBSplineDxDx(long jarg1, SBsplineClenshawCurtisBase jarg1_, double jarg2, long jarg3, long jarg4);
  public final static native double SBsplineClenshawCurtisBase_clenshawCurtisPoint(long jarg1, SBsplineClenshawCurtisBase jarg1_, long jarg2, long jarg3);
  public final static native void SBsplineClenshawCurtisBase_constructKnots(long jarg1, SBsplineClenshawCurtisBase jarg1_, long jarg2, long jarg3);
  public final static native double SBsplineClenshawCurtisBase_eval(long jarg1, SBsplineClenshawCurtisBase jarg1_, long jarg2, long jarg3, double jarg4);
  public final static native double SBsplineClenshawCurtisBase_evalDx(long jarg1, SBsplineClenshawCurtisBase jarg1_, long jarg2, long jarg3, double jarg4);
  public final static native double SBsplineClenshawCurtisBase_evalDxDx(long jarg1, SBsplineClenshawCurtisBase jarg1_, long jarg2, long jarg3, double jarg4);
  public final static native long SBsplineClenshawCurtisBase_getDegree(long jarg1, SBsplineClenshawCurtisBase jarg1_);
  public final static native long new_SBsplineModifiedBase__SWIG_0();
  public final static native long new_SBsplineModifiedBase__SWIG_1(long jarg1);
  public final static native void delete_SBsplineModifiedBase(long jarg1);
  public final static native double SBsplineModifiedBase_modifiedBSpline(long jarg1, SBsplineModifiedBase jarg1_, double jarg2, long jarg3);
  public final static native double SBsplineModifiedBase_modifiedBSplineDx(long jarg1, SBsplineModifiedBase jarg1_, double jarg2, long jarg3);
  public final static native double SBsplineModifiedBase_modifiedBSplineDxDx(long jarg1, SBsplineModifiedBase jarg1_, double jarg2, long jarg3);
  public final static native double SBsplineModifiedBase_eval(long jarg1, SBsplineModifiedBase jarg1_, long jarg2, long jarg3, double jarg4);
  public final static native double SBsplineModifiedBase_evalDx(long jarg1, SBsplineModifiedBase jarg1_, long jarg2, long jarg3, double jarg4);
  public final static native double SBsplineModifiedBase_evalDxDx(long jarg1, SBsplineModifiedBase jarg1_, long jarg2, long jarg3, double jarg4);
  public final static native long SBsplineModifiedBase_getDegree(long jarg1, SBsplineModifiedBase jarg1_);
  public final static native long new_SBsplineModifiedClenshawCurtisBase__SWIG_0();
  public final static native long new_SBsplineModifiedClenshawCurtisBase__SWIG_1(long jarg1);
  public final static native void delete_SBsplineModifiedClenshawCurtisBase(long jarg1);
  public final static native double SBsplineModifiedClenshawCurtisBase_clenshawCurtisPoint(long jarg1, SBsplineModifiedClenshawCurtisBase jarg1_, long jarg2, long jarg3);
  public final static native double SBsplineModifiedClenshawCurtisBase_clenshawCurtisPointNegativeIndex(long jarg1, SBsplineModifiedClenshawCurtisBase jarg1_, long jarg2, long jarg3);
  public final static native double SBsplineModifiedClenshawCurtisBase_eval(long jarg1, SBsplineModifiedClenshawCurtisBase jarg1_, long jarg2, long jarg3, double jarg4);
  public final static native double SBsplineModifiedClenshawCurtisBase_evalDx(long jarg1, SBsplineModifiedClenshawCurtisBase jarg1_, long jarg2, long jarg3, double jarg4);
  public final static native double SBsplineModifiedClenshawCurtisBase_evalDxDx(long jarg1, SBsplineModifiedClenshawCurtisBase jarg1_, long jarg2, long jarg3, double jarg4);
  public final static native long SBsplineModifiedClenshawCurtisBase_getDegree(long jarg1, SBsplineModifiedClenshawCurtisBase jarg1_);
  public final static native long new_SFundamentalSplineBase__SWIG_0();
  public final static native long new_SFundamentalSplineBase__SWIG_1(long jarg1);
  public final static native void delete_SFundamentalSplineBase(long jarg1);
  public final static native double SFundamentalSplineBase_eval(long jarg1, SFundamentalSplineBase jarg1_, long jarg2, long jarg3, double jarg4);
  public final static native double SFundamentalSplineBase_evalDx(long jarg1, SFundamentalSplineBase jarg1_, long jarg2, long jarg3, double jarg4);
  public final static native double SFundamentalSplineBase_evalDxDx(long jarg1, SFundamentalSplineBase jarg1_, long jarg2, long jarg3, double jarg4);
  public final static native long SFundamentalSplineBase_getDegree(long jarg1, SFundamentalSplineBase jarg1_);
  public final static native long new_SFundamentalSplineModifiedBase__SWIG_0();
  public final static native long new_SFundamentalSplineModifiedBase__SWIG_1(long jarg1);
  public final static native void delete_SFundamentalSplineModifiedBase(long jarg1);
  public final static native double SFundamentalSplineModifiedBase_eval(long jarg1, SFundamentalSplineModifiedBase jarg1_, long jarg2, long jarg3, double jarg4);
  public final static native double SFundamentalSplineModifiedBase_evalDx(long jarg1, SFundamentalSplineModifiedBase jarg1_, long jarg2, long jarg3, double jarg4);
  public final static native double SFundamentalSplineModifiedBase_evalDxDx(long jarg1, SFundamentalSplineModifiedBase jarg1_, long jarg2, long jarg3, double jarg4);
  public final static native long SFundamentalSplineModifiedBase_getDegree(long jarg1, SFundamentalSplineModifiedBase jarg1_);
  public final static native void delete_SPrewaveletBase(long jarg1);
  public final static native double SPrewaveletBase_eval(long jarg1, SPrewaveletBase jarg1_, long jarg2, long jarg3, double jarg4);
  public final static native long new_SPrewaveletBase();
  public final static native long new_SGetAffectedBasisFunctions(long jarg1, GridStorage jarg1_);
  public final static native void delete_SGetAffectedBasisFunctions(long jarg1);
  public final static native void SGetAffectedBasisFunctions_operatorParentheses(long jarg1, SGetAffectedBasisFunctions jarg1_, long jarg2, SLinearBase jarg2_, long jarg3, DataVector jarg3_, long jarg4, IndexValVector jarg4_);
  public final static native long new_SAlgorithmEvaluation(long jarg1, GridStorage jarg1_);
  public final static native void delete_SAlgorithmEvaluation(long jarg1);
  public final static native double SAlgorithmEvaluation_operatorParentheses(long jarg1, SAlgorithmEvaluation jarg1_, long jarg2, SLinearBase jarg2_, long jarg3, DataVector jarg3_, long jarg4, DataVector jarg4_);
  public final static native long new_SGetAffectedBasisFunctionsBoundaries(long jarg1, GridStorage jarg1_);
  public final static native void delete_SGetAffectedBasisFunctionsBoundaries(long jarg1);
  public final static native void SGetAffectedBasisFunctionsBoundaries_operatorParentheses(long jarg1, SGetAffectedBasisFunctionsBoundaries jarg1_, long jarg2, SLinearBoundaryBase jarg2_, long jarg3, DataVector jarg3_, long jarg4, IndexValVector jarg4_);
  public final static native long new_SGetAffectedBasisFunctionsLinearStretchedBoundaries(long jarg1, GridStorage jarg1_);
  public final static native void delete_SGetAffectedBasisFunctionsLinearStretchedBoundaries(long jarg1);
  public final static native void SGetAffectedBasisFunctionsLinearStretchedBoundaries_operatorParentheses(long jarg1, SGetAffectedBasisFunctionsLinearStretchedBoundaries jarg1_, long jarg2, SLinearStretchedBoundaryBase jarg2_, long jarg3, DataVector jarg3_, long jarg4, IndexValVector jarg4_);
  public final static native long new_BoundingBox1DVector__SWIG_0();
  public final static native long new_BoundingBox1DVector__SWIG_1(long jarg1);
  public final static native long BoundingBox1DVector_size(long jarg1, BoundingBox1DVector jarg1_);
  public final static native long BoundingBox1DVector_capacity(long jarg1, BoundingBox1DVector jarg1_);
  public final static native void BoundingBox1DVector_reserve(long jarg1, BoundingBox1DVector jarg1_, long jarg2);
  public final static native boolean BoundingBox1DVector_isEmpty(long jarg1, BoundingBox1DVector jarg1_);
  public final static native void BoundingBox1DVector_clear(long jarg1, BoundingBox1DVector jarg1_);
  public final static native void BoundingBox1DVector_add(long jarg1, BoundingBox1DVector jarg1_, long jarg2, BoundingBox1D jarg2_);
  public final static native long BoundingBox1DVector_get(long jarg1, BoundingBox1DVector jarg1_, int jarg2);
  public final static native void BoundingBox1DVector_set(long jarg1, BoundingBox1DVector jarg1_, int jarg2, long jarg3, BoundingBox1D jarg3_);
  public final static native void delete_BoundingBox1DVector(long jarg1);
  public final static native long new_Stretching1DVector__SWIG_0();
  public final static native long new_Stretching1DVector__SWIG_1(long jarg1);
  public final static native long Stretching1DVector_size(long jarg1, Stretching1DVector jarg1_);
  public final static native long Stretching1DVector_capacity(long jarg1, Stretching1DVector jarg1_);
  public final static native void Stretching1DVector_reserve(long jarg1, Stretching1DVector jarg1_, long jarg2);
  public final static native boolean Stretching1DVector_isEmpty(long jarg1, Stretching1DVector jarg1_);
  public final static native void Stretching1DVector_clear(long jarg1, Stretching1DVector jarg1_);
  public final static native void Stretching1DVector_add(long jarg1, Stretching1DVector jarg1_, long jarg2, Stretching1D jarg2_);
  public final static native long Stretching1DVector_get(long jarg1, Stretching1DVector jarg1_, int jarg2);
  public final static native void Stretching1DVector_set(long jarg1, Stretching1DVector jarg1_, int jarg2, long jarg3, Stretching1D jarg3_);
  public final static native void delete_Stretching1DVector(long jarg1);
  public final static native void delete_OperationParabolicPDESolverSystem(long jarg1);
  public final static native void OperationParabolicPDESolverSystem_mult(long jarg1, OperationParabolicPDESolverSystem jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_);
  public final static native long OperationParabolicPDESolverSystem_generateRHS(long jarg1, OperationParabolicPDESolverSystem jarg1_);
  public final static native void OperationParabolicPDESolverSystem_finishTimestep(long jarg1, OperationParabolicPDESolverSystem jarg1_);
  public final static native void OperationParabolicPDESolverSystem_coarsenAndRefine__SWIG_0(long jarg1, OperationParabolicPDESolverSystem jarg1_, boolean jarg2);
  public final static native void OperationParabolicPDESolverSystem_coarsenAndRefine__SWIG_1(long jarg1, OperationParabolicPDESolverSystem jarg1_);
  public final static native void OperationParabolicPDESolverSystem_startTimestep(long jarg1, OperationParabolicPDESolverSystem jarg1_);
  public final static native long OperationParabolicPDESolverSystem_getGrid(long jarg1, OperationParabolicPDESolverSystem jarg1_);
  public final static native long OperationParabolicPDESolverSystem_getGridCoefficientsForCG(long jarg1, OperationParabolicPDESolverSystem jarg1_);
  public final static native long OperationParabolicPDESolverSystem_getGridCoefficients(long jarg1, OperationParabolicPDESolverSystem jarg1_);
  public final static native void OperationParabolicPDESolverSystem_setODESolver(long jarg1, OperationParabolicPDESolverSystem jarg1_, String jarg2);
  public final static native String OperationParabolicPDESolverSystem_getODESolver(long jarg1, OperationParabolicPDESolverSystem jarg1_);
  public final static native long OperationParabolicPDESolverSystem_getSumGridPointsComplete(long jarg1, OperationParabolicPDESolverSystem jarg1_);
  public final static native long OperationParabolicPDESolverSystem_getSumGridPointsInner(long jarg1, OperationParabolicPDESolverSystem jarg1_);
  public final static native void OperationParabolicPDESolverSystem_setTimestepSize(long jarg1, OperationParabolicPDESolverSystem jarg1_, double jarg2);
  public final static native void OperationParabolicPDESolverSystem_abortTimestep(long jarg1, OperationParabolicPDESolverSystem jarg1_);
  public final static native void OperationParabolicPDESolverSystem_saveAlpha(long jarg1, OperationParabolicPDESolverSystem jarg1_);
  public final static native void OperationParabolicPDESolverSystem_getGridCoefficientsForSC(long jarg1, OperationParabolicPDESolverSystem jarg1_, long jarg2, DataVector jarg2_);
  public final static native long OperationParabolicPDESolverSystem_getGridStorage(long jarg1, OperationParabolicPDESolverSystem jarg1_);
  public final static native long OperationParabolicPDESolverSystem_getOldGridStorage(long jarg1, OperationParabolicPDESolverSystem jarg1_);
  public final static native long OperationParabolicPDESolverSystem_getSecondGridStorage(long jarg1, OperationParabolicPDESolverSystem jarg1_);
  public final static native void delete_OperationParabolicPDESolverSystemDirichlet(long jarg1);
  public final static native void OperationParabolicPDESolverSystemDirichlet_mult(long jarg1, OperationParabolicPDESolverSystemDirichlet jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_);
  public final static native long OperationParabolicPDESolverSystemDirichlet_generateRHS(long jarg1, OperationParabolicPDESolverSystemDirichlet jarg1_);
  public final static native long OperationParabolicPDESolverSystemDirichlet_getGridCoefficientsForCG(long jarg1, OperationParabolicPDESolverSystemDirichlet jarg1_);
  public final static native long new_HeatEquationParabolicPDESolverSystem__SWIG_0(long jarg1, Grid jarg1_, long jarg2, DataVector jarg2_, double jarg3, double jarg4, String jarg5);
  public final static native long new_HeatEquationParabolicPDESolverSystem__SWIG_1(long jarg1, Grid jarg1_, long jarg2, DataVector jarg2_, double jarg3, double jarg4);
  public final static native void delete_HeatEquationParabolicPDESolverSystem(long jarg1);
  public final static native void HeatEquationParabolicPDESolverSystem_finishTimestep(long jarg1, HeatEquationParabolicPDESolverSystem jarg1_);
  public final static native void HeatEquationParabolicPDESolverSystem_coarsenAndRefine__SWIG_0(long jarg1, HeatEquationParabolicPDESolverSystem jarg1_, boolean jarg2);
  public final static native void HeatEquationParabolicPDESolverSystem_coarsenAndRefine__SWIG_1(long jarg1, HeatEquationParabolicPDESolverSystem jarg1_);
  public final static native void HeatEquationParabolicPDESolverSystem_startTimestep(long jarg1, HeatEquationParabolicPDESolverSystem jarg1_);
  public final static native void delete_PDESolver(long jarg1);
  public final static native void PDESolver_constructGrid(long jarg1, PDESolver jarg1_, long jarg2, BoundingBox jarg2_, long jarg3);
  public final static native void PDESolver_setGrid(long jarg1, PDESolver jarg1_, String jarg2);
  public final static native String PDESolver_getGrid(long jarg1, PDESolver jarg1_);
  public final static native void PDESolver_deleteGrid(long jarg1, PDESolver jarg1_);
  public final static native void PDESolver_refineInitialGridSurplus(long jarg1, PDESolver jarg1_, long jarg2, DataVector jarg2_, int jarg3, double jarg4);
  public final static native void PDESolver_refineInitialGridSurplusToMaxLevel(long jarg1, PDESolver jarg1_, long jarg2, DataVector jarg2_, double jarg3, long jarg4);
  public final static native void PDESolver_refineInitialGridSurplusSubDomain(long jarg1, PDESolver jarg1_, long jarg2, DataVector jarg2_, int jarg3, double jarg4, long jarg5, DoubleVector jarg5_, long jarg6, DoubleVector jarg6_);
  public final static native void PDESolver_refineInitialGridSurplusToMaxLevelSubDomain(long jarg1, PDESolver jarg1_, long jarg2, DataVector jarg2_, double jarg3, long jarg4, long jarg5, DoubleVector jarg5_, long jarg6, DoubleVector jarg6_);
  public final static native void PDESolver_coarsenInitialGridSurplus(long jarg1, PDESolver jarg1_, long jarg2, DataVector jarg2_, double jarg3);
  public final static native double PDESolver_evaluatePoint(long jarg1, PDESolver jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_);
  public final static native void PDESolver_evaluateCuboid(long jarg1, PDESolver jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_, long jarg4, DataMatrix jarg4_);
  public final static native void PDESolver_printLevelIndexGrid(long jarg1, PDESolver jarg1_, String jarg2);
  public final static native void PDESolver_printGrid(long jarg1, PDESolver jarg1_, long jarg2, DataVector jarg2_, long jarg3, String jarg4);
  public final static native void PDESolver_printGridDomain(long jarg1, PDESolver jarg1_, long jarg2, DataVector jarg2_, long jarg3, long jarg4, BoundingBox jarg4_, String jarg5);
  public final static native void PDESolver_printSparseGrid(long jarg1, PDESolver jarg1_, long jarg2, DataVector jarg2_, String jarg3, boolean jarg4);
  public final static native void PDESolver_printSparseGridExpTransform(long jarg1, PDESolver jarg1_, long jarg2, DataVector jarg2_, String jarg3, boolean jarg4);
  public final static native long PDESolver_getNumberGridPoints(long jarg1, PDESolver jarg1_);
  public final static native long PDESolver_getNumberInnerGridPoints(long jarg1, PDESolver jarg1_);
  public final static native long PDESolver_getNumberDimensions(long jarg1, PDESolver jarg1_);
  public final static native void delete_ParabolicPDESolver(long jarg1);
  public final static native void ParabolicPDESolver_solveImplicitEuler__SWIG_0(long jarg1, ParabolicPDESolver jarg1_, long jarg2, double jarg3, long jarg4, double jarg5, long jarg6, DataVector jarg6_, boolean jarg7, boolean jarg8);
  public final static native void ParabolicPDESolver_solveImplicitEuler__SWIG_1(long jarg1, ParabolicPDESolver jarg1_, long jarg2, double jarg3, long jarg4, double jarg5, long jarg6, DataVector jarg6_, boolean jarg7);
  public final static native void ParabolicPDESolver_solveImplicitEuler__SWIG_2(long jarg1, ParabolicPDESolver jarg1_, long jarg2, double jarg3, long jarg4, double jarg5, long jarg6, DataVector jarg6_);
  public final static native void ParabolicPDESolver_solveExplicitEuler__SWIG_0(long jarg1, ParabolicPDESolver jarg1_, long jarg2, double jarg3, long jarg4, double jarg5, long jarg6, DataVector jarg6_, boolean jarg7, boolean jarg8);
  public final static native void ParabolicPDESolver_solveExplicitEuler__SWIG_1(long jarg1, ParabolicPDESolver jarg1_, long jarg2, double jarg3, long jarg4, double jarg5, long jarg6, DataVector jarg6_, boolean jarg7);
  public final static native void ParabolicPDESolver_solveExplicitEuler__SWIG_2(long jarg1, ParabolicPDESolver jarg1_, long jarg2, double jarg3, long jarg4, double jarg5, long jarg6, DataVector jarg6_);
  public final static native void ParabolicPDESolver_solveCrankNicolson__SWIG_0(long jarg1, ParabolicPDESolver jarg1_, long jarg2, double jarg3, long jarg4, double jarg5, long jarg6, DataVector jarg6_, long jarg7);
  public final static native void ParabolicPDESolver_solveCrankNicolson__SWIG_1(long jarg1, ParabolicPDESolver jarg1_, long jarg2, double jarg3, long jarg4, double jarg5, long jarg6, DataVector jarg6_);
  public final static native long new_HeatEquationSolver();
  public final static native void delete_HeatEquationSolver(long jarg1);
  public final static native void HeatEquationSolver_constructGrid(long jarg1, HeatEquationSolver jarg1_, long jarg2, BoundingBox jarg2_, long jarg3);
  public final static native void HeatEquationSolver_solveExplicitEuler__SWIG_0(long jarg1, HeatEquationSolver jarg1_, long jarg2, double jarg3, long jarg4, double jarg5, long jarg6, DataVector jarg6_, boolean jarg7, boolean jarg8);
  public final static native void HeatEquationSolver_solveExplicitEuler__SWIG_1(long jarg1, HeatEquationSolver jarg1_, long jarg2, double jarg3, long jarg4, double jarg5, long jarg6, DataVector jarg6_, boolean jarg7);
  public final static native void HeatEquationSolver_solveExplicitEuler__SWIG_2(long jarg1, HeatEquationSolver jarg1_, long jarg2, double jarg3, long jarg4, double jarg5, long jarg6, DataVector jarg6_);
  public final static native void HeatEquationSolver_solveImplicitEuler__SWIG_0(long jarg1, HeatEquationSolver jarg1_, long jarg2, double jarg3, long jarg4, double jarg5, long jarg6, DataVector jarg6_, boolean jarg7, boolean jarg8);
  public final static native void HeatEquationSolver_solveImplicitEuler__SWIG_1(long jarg1, HeatEquationSolver jarg1_, long jarg2, double jarg3, long jarg4, double jarg5, long jarg6, DataVector jarg6_, boolean jarg7);
  public final static native void HeatEquationSolver_solveImplicitEuler__SWIG_2(long jarg1, HeatEquationSolver jarg1_, long jarg2, double jarg3, long jarg4, double jarg5, long jarg6, DataVector jarg6_);
  public final static native void HeatEquationSolver_solveCrankNicolson__SWIG_0(long jarg1, HeatEquationSolver jarg1_, long jarg2, double jarg3, long jarg4, double jarg5, long jarg6, DataVector jarg6_, long jarg7);
  public final static native void HeatEquationSolver_solveCrankNicolson__SWIG_1(long jarg1, HeatEquationSolver jarg1_, long jarg2, double jarg3, long jarg4, double jarg5, long jarg6, DataVector jarg6_);
  public final static native void HeatEquationSolver_setHeatCoefficient(long jarg1, HeatEquationSolver jarg1_, double jarg2);
  public final static native void HeatEquationSolver_initGridWithSmoothHeat(long jarg1, HeatEquationSolver jarg1_, long jarg2, DataVector jarg2_, double jarg3, double jarg4, double jarg5);
  public final static native void HeatEquationSolver_initScreen(long jarg1, HeatEquationSolver jarg1_);
  public final static native void HeatEquationSolver_storeInnerRHS(long jarg1, HeatEquationSolver jarg1_, long jarg2, DataVector jarg2_, String jarg3, double jarg4);
  public final static native void HeatEquationSolver_storeInnerSolution(long jarg1, HeatEquationSolver jarg1_, long jarg2, DataVector jarg2_, long jarg3, double jarg4, long jarg5, double jarg6, String jarg7);
  public final static native long new_HeatEquationSolverWithStretching();
  public final static native void delete_HeatEquationSolverWithStretching(long jarg1);
  public final static native void HeatEquationSolverWithStretching_constructGrid__SWIG_0(long jarg1, HeatEquationSolverWithStretching jarg1_, long jarg2, Stretching jarg2_, long jarg3);
  public final static native void HeatEquationSolverWithStretching_constructGrid__SWIG_1(long jarg1, HeatEquationSolverWithStretching jarg1_, long jarg2, BoundingBox jarg2_, long jarg3);
  public final static native void HeatEquationSolverWithStretching_solveExplicitEuler__SWIG_0(long jarg1, HeatEquationSolverWithStretching jarg1_, long jarg2, double jarg3, long jarg4, double jarg5, long jarg6, DataVector jarg6_, boolean jarg7, boolean jarg8);
  public final static native void HeatEquationSolverWithStretching_solveExplicitEuler__SWIG_1(long jarg1, HeatEquationSolverWithStretching jarg1_, long jarg2, double jarg3, long jarg4, double jarg5, long jarg6, DataVector jarg6_, boolean jarg7);
  public final static native void HeatEquationSolverWithStretching_solveExplicitEuler__SWIG_2(long jarg1, HeatEquationSolverWithStretching jarg1_, long jarg2, double jarg3, long jarg4, double jarg5, long jarg6, DataVector jarg6_);
  public final static native void HeatEquationSolverWithStretching_solveImplicitEuler__SWIG_0(long jarg1, HeatEquationSolverWithStretching jarg1_, long jarg2, double jarg3, long jarg4, double jarg5, long jarg6, DataVector jarg6_, boolean jarg7, boolean jarg8);
  public final static native void HeatEquationSolverWithStretching_solveImplicitEuler__SWIG_1(long jarg1, HeatEquationSolverWithStretching jarg1_, long jarg2, double jarg3, long jarg4, double jarg5, long jarg6, DataVector jarg6_, boolean jarg7);
  public final static native void HeatEquationSolverWithStretching_solveImplicitEuler__SWIG_2(long jarg1, HeatEquationSolverWithStretching jarg1_, long jarg2, double jarg3, long jarg4, double jarg5, long jarg6, DataVector jarg6_);
  public final static native void HeatEquationSolverWithStretching_solveCrankNicolson__SWIG_0(long jarg1, HeatEquationSolverWithStretching jarg1_, long jarg2, double jarg3, long jarg4, double jarg5, long jarg6, DataVector jarg6_, long jarg7);
  public final static native void HeatEquationSolverWithStretching_solveCrankNicolson__SWIG_1(long jarg1, HeatEquationSolverWithStretching jarg1_, long jarg2, double jarg3, long jarg4, double jarg5, long jarg6, DataVector jarg6_);
  public final static native void HeatEquationSolverWithStretching_setHeatCoefficient(long jarg1, HeatEquationSolverWithStretching jarg1_, double jarg2);
  public final static native void HeatEquationSolverWithStretching_initGridWithSmoothHeat(long jarg1, HeatEquationSolverWithStretching jarg1_, long jarg2, DataVector jarg2_, double jarg3, double jarg4, double jarg5);
  public final static native void HeatEquationSolverWithStretching_initScreen(long jarg1, HeatEquationSolverWithStretching jarg1_);
  public final static native void HeatEquationSolverWithStretching_printGrid(long jarg1, HeatEquationSolverWithStretching jarg1_, long jarg2, DataVector jarg2_, long jarg3, String jarg4);
  public final static native void HeatEquationSolverWithStretching_printGridDomain(long jarg1, HeatEquationSolverWithStretching jarg1_, long jarg2, DataVector jarg2_, long jarg3, long jarg4, BoundingBox jarg4_, String jarg5);
  public final static native void HeatEquationSolverWithStretching_printGridDomainStretching(long jarg1, HeatEquationSolverWithStretching jarg1_, long jarg2, DataVector jarg2_, long jarg3, long jarg4, Stretching jarg4_, String jarg5);
  public final static native void HeatEquationSolverWithStretching_printSparseGrid(long jarg1, HeatEquationSolverWithStretching jarg1_, long jarg2, DataVector jarg2_, String jarg3, boolean jarg4);
  public final static native void HeatEquationSolverWithStretching_printSparseGridExpTransform(long jarg1, HeatEquationSolverWithStretching jarg1_, long jarg2, DataVector jarg2_, String jarg3, boolean jarg4);
  public final static native void delete_EllipticPDESolver(long jarg1);
  public final static native void EllipticPDESolver_solvePDE__SWIG_0(long jarg1, EllipticPDESolver jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_, long jarg4, double jarg5, boolean jarg6);
  public final static native void EllipticPDESolver_solvePDE__SWIG_1(long jarg1, EllipticPDESolver jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_, long jarg4, double jarg5);
  public final static native long new_PoissonEquationSolver();
  public final static native void delete_PoissonEquationSolver(long jarg1);
  public final static native void PoissonEquationSolver_constructGrid(long jarg1, PoissonEquationSolver jarg1_, long jarg2, BoundingBox jarg2_, long jarg3);
  public final static native void PoissonEquationSolver_solvePDE__SWIG_0(long jarg1, PoissonEquationSolver jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_, long jarg4, double jarg5, boolean jarg6);
  public final static native void PoissonEquationSolver_solvePDE__SWIG_1(long jarg1, PoissonEquationSolver jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_, long jarg4, double jarg5);
  public final static native void PoissonEquationSolver_initGridWithSmoothHeat(long jarg1, PoissonEquationSolver jarg1_, long jarg2, DataVector jarg2_, double jarg3, double jarg4, double jarg5);
  public final static native void PoissonEquationSolver_initGridWithSmoothHeatFullDomain(long jarg1, PoissonEquationSolver jarg1_, long jarg2, DataVector jarg2_, double jarg3, double jarg4, double jarg5);
  public final static native void PoissonEquationSolver_initGridWithExpHeat__SWIG_0(long jarg1, PoissonEquationSolver jarg1_, long jarg2, DataVector jarg2_, double jarg3);
  public final static native void PoissonEquationSolver_initGridWithExpHeat__SWIG_1(long jarg1, PoissonEquationSolver jarg1_, long jarg2, DataVector jarg2_);
  public final static native void PoissonEquationSolver_initGridWithExpHeatFullDomain__SWIG_0(long jarg1, PoissonEquationSolver jarg1_, long jarg2, DataVector jarg2_, double jarg3);
  public final static native void PoissonEquationSolver_initGridWithExpHeatFullDomain__SWIG_1(long jarg1, PoissonEquationSolver jarg1_, long jarg2, DataVector jarg2_);
  public final static native void PoissonEquationSolver_storeInnerRHS(long jarg1, PoissonEquationSolver jarg1_, long jarg2, DataVector jarg2_, String jarg3);
  public final static native void PoissonEquationSolver_storeInnerSolution(long jarg1, PoissonEquationSolver jarg1_, long jarg2, DataVector jarg2_, long jarg3, double jarg4, String jarg5);
  public final static native void PoissonEquationSolver_initScreen(long jarg1, PoissonEquationSolver jarg1_);
  public final static native long createOperationLaplace__SWIG_0(long jarg1, Grid jarg1_);
  public final static native long createOperationLaplace__SWIG_1(long jarg1, Grid jarg1_, long jarg2, DataVector jarg2_);
  public final static native long createOperationLTwoDotProduct(long jarg1, Grid jarg1_);
  public final static native long createOperationLTwoDotExplicit__SWIG_0(long jarg1, Grid jarg1_);
  public final static native long createOperationLTwoDotExplicit__SWIG_1(long jarg1, DataMatrix jarg1_, long jarg2, Grid jarg2_);
  public final static native long createOperationLaplaceEnhanced__SWIG_0(long jarg1, Grid jarg1_);
  public final static native long createOperationLaplaceEnhanced__SWIG_1(long jarg1, Grid jarg1_, long jarg2, DataVector jarg2_);
  public final static native void delete_OperationParabolicPDESolverSystemFreeBoundaries(long jarg1);
  public final static native void OperationParabolicPDESolverSystemFreeBoundaries_mult(long jarg1, OperationParabolicPDESolverSystemFreeBoundaries jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_);
  public final static native long OperationParabolicPDESolverSystemFreeBoundaries_generateRHS(long jarg1, OperationParabolicPDESolverSystemFreeBoundaries jarg1_);
  public final static native long OperationParabolicPDESolverSystemFreeBoundaries_getGridCoefficientsForCG(long jarg1, OperationParabolicPDESolverSystemFreeBoundaries jarg1_);
  public final static native long new_OperationMatrixLTwoDotExplicitPeriodic__SWIG_0(long jarg1, DataMatrix jarg1_, long jarg2, Grid jarg2_);
  public final static native long new_OperationMatrixLTwoDotExplicitPeriodic__SWIG_1(long jarg1, Grid jarg1_);
  public final static native void delete_OperationMatrixLTwoDotExplicitPeriodic(long jarg1);
  public final static native void OperationMatrixLTwoDotExplicitPeriodic_mult(long jarg1, OperationMatrixLTwoDotExplicitPeriodic jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_);
  public final static native long new_OperationMatrixLTwoDotPeriodic(long jarg1, GridStorage jarg1_);
  public final static native void delete_OperationMatrixLTwoDotPeriodic(long jarg1);
  public final static native void OperationMatrixLTwoDotPeriodic_mult(long jarg1, OperationMatrixLTwoDotPeriodic jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_);
  public final static native long new_SGSolver(long jarg1, double jarg2);
  public final static native void delete_SGSolver(long jarg1);
  public final static native long SGSolver_getNumberIterations(long jarg1, SGSolver jarg1_);
  public final static native double SGSolver_getResiduum(long jarg1, SGSolver jarg1_);
  public final static native void SGSolver_setMaxIterations(long jarg1, SGSolver jarg1_, long jarg2);
  public final static native void SGSolver_setEpsilon(long jarg1, SGSolver jarg1_, double jarg2);
  public final static native double SGSolver_getEpsilon(long jarg1, SGSolver jarg1_);
  public final static native double DEFAULT_RES_THRESHOLD_get();
  public final static native void delete_SLESolver(long jarg1);
  public final static native void SLESolver_solve__SWIG_0(long jarg1, SLESolver jarg1_, long jarg2, OperationMatrix jarg2_, long jarg3, DataVector jarg3_, long jarg4, DataVector jarg4_, boolean jarg5, boolean jarg6, double jarg7);
  public final static native void SLESolver_solve__SWIG_1(long jarg1, SLESolver jarg1_, long jarg2, OperationMatrix jarg2_, long jarg3, DataVector jarg3_, long jarg4, DataVector jarg4_, boolean jarg5, boolean jarg6);
  public final static native void SLESolver_solve__SWIG_2(long jarg1, SLESolver jarg1_, long jarg2, OperationMatrix jarg2_, long jarg3, DataVector jarg3_, long jarg4, DataVector jarg4_, boolean jarg5);
  public final static native void SLESolver_solve__SWIG_3(long jarg1, SLESolver jarg1_, long jarg2, OperationMatrix jarg2_, long jarg3, DataVector jarg3_, long jarg4, DataVector jarg4_);
  public final static native void delete_ODESolver(long jarg1);
  public final static native void ODESolver_solve__SWIG_0(long jarg1, ODESolver jarg1_, long jarg2, SLESolver jarg2_, long jarg3, OperationParabolicPDESolverSystem jarg3_, boolean jarg4, boolean jarg5);
  public final static native void ODESolver_solve__SWIG_1(long jarg1, ODESolver jarg1_, long jarg2, SLESolver jarg2_, long jarg3, OperationParabolicPDESolverSystem jarg3_, boolean jarg4);
  public final static native void ODESolver_solve__SWIG_2(long jarg1, ODESolver jarg1_, long jarg2, SLESolver jarg2_, long jarg3, OperationParabolicPDESolverSystem jarg3_);
  public final static native long new_ConjugateGradients(long jarg1, double jarg2);
  public final static native void delete_ConjugateGradients(long jarg1);
  public final static native void ConjugateGradients_solve__SWIG_0(long jarg1, ConjugateGradients jarg1_, long jarg2, OperationMatrix jarg2_, long jarg3, DataVector jarg3_, long jarg4, DataVector jarg4_, boolean jarg5, boolean jarg6, double jarg7);
  public final static native void ConjugateGradients_solveSwigExplicitConjugateGradients__SWIG_0(long jarg1, ConjugateGradients jarg1_, long jarg2, OperationMatrix jarg2_, long jarg3, DataVector jarg3_, long jarg4, DataVector jarg4_, boolean jarg5, boolean jarg6, double jarg7);
  public final static native void ConjugateGradients_solve__SWIG_1(long jarg1, ConjugateGradients jarg1_, long jarg2, OperationMatrix jarg2_, long jarg3, DataVector jarg3_, long jarg4, DataVector jarg4_, boolean jarg5, boolean jarg6);
  public final static native void ConjugateGradients_solveSwigExplicitConjugateGradients__SWIG_1(long jarg1, ConjugateGradients jarg1_, long jarg2, OperationMatrix jarg2_, long jarg3, DataVector jarg3_, long jarg4, DataVector jarg4_, boolean jarg5, boolean jarg6);
  public final static native void ConjugateGradients_solve__SWIG_2(long jarg1, ConjugateGradients jarg1_, long jarg2, OperationMatrix jarg2_, long jarg3, DataVector jarg3_, long jarg4, DataVector jarg4_, boolean jarg5);
  public final static native void ConjugateGradients_solveSwigExplicitConjugateGradients__SWIG_2(long jarg1, ConjugateGradients jarg1_, long jarg2, OperationMatrix jarg2_, long jarg3, DataVector jarg3_, long jarg4, DataVector jarg4_, boolean jarg5);
  public final static native void ConjugateGradients_solve__SWIG_3(long jarg1, ConjugateGradients jarg1_, long jarg2, OperationMatrix jarg2_, long jarg3, DataVector jarg3_, long jarg4, DataVector jarg4_);
  public final static native void ConjugateGradients_solveSwigExplicitConjugateGradients__SWIG_3(long jarg1, ConjugateGradients jarg1_, long jarg2, OperationMatrix jarg2_, long jarg3, DataVector jarg3_, long jarg4, DataVector jarg4_);
  public final static native void ConjugateGradients_starting(long jarg1, ConjugateGradients jarg1_);
  public final static native void ConjugateGradients_startingSwigExplicitConjugateGradients(long jarg1, ConjugateGradients jarg1_);
  public final static native void ConjugateGradients_calcStarting(long jarg1, ConjugateGradients jarg1_);
  public final static native void ConjugateGradients_calcStartingSwigExplicitConjugateGradients(long jarg1, ConjugateGradients jarg1_);
  public final static native void ConjugateGradients_iterationComplete(long jarg1, ConjugateGradients jarg1_);
  public final static native void ConjugateGradients_iterationCompleteSwigExplicitConjugateGradients(long jarg1, ConjugateGradients jarg1_);
  public final static native void ConjugateGradients_complete(long jarg1, ConjugateGradients jarg1_);
  public final static native void ConjugateGradients_completeSwigExplicitConjugateGradients(long jarg1, ConjugateGradients jarg1_);
  public final static native void ConjugateGradients_director_connect(ConjugateGradients obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void ConjugateGradients_change_ownership(ConjugateGradients obj, long cptr, boolean take_or_release);
  public final static native long new_BiCGStab(long jarg1, double jarg2);
  public final static native void delete_BiCGStab(long jarg1);
  public final static native void BiCGStab_solve__SWIG_0(long jarg1, BiCGStab jarg1_, long jarg2, OperationMatrix jarg2_, long jarg3, DataVector jarg3_, long jarg4, DataVector jarg4_, boolean jarg5, boolean jarg6, double jarg7);
  public final static native void BiCGStab_solve__SWIG_1(long jarg1, BiCGStab jarg1_, long jarg2, OperationMatrix jarg2_, long jarg3, DataVector jarg3_, long jarg4, DataVector jarg4_, boolean jarg5, boolean jarg6);
  public final static native void BiCGStab_solve__SWIG_2(long jarg1, BiCGStab jarg1_, long jarg2, OperationMatrix jarg2_, long jarg3, DataVector jarg3_, long jarg4, DataVector jarg4_, boolean jarg5);
  public final static native void BiCGStab_solve__SWIG_3(long jarg1, BiCGStab jarg1_, long jarg2, OperationMatrix jarg2_, long jarg3, DataVector jarg3_, long jarg4, DataVector jarg4_);
  public final static native long new_Euler__SWIG_0(String jarg1, long jarg2, double jarg3, boolean jarg4, long jarg5, ScreenOutput jarg5_);
  public final static native long new_Euler__SWIG_1(String jarg1, long jarg2, double jarg3, boolean jarg4);
  public final static native long new_Euler__SWIG_2(String jarg1, long jarg2, double jarg3);
  public final static native void delete_Euler(long jarg1);
  public final static native void Euler_solve__SWIG_0(long jarg1, Euler jarg1_, long jarg2, SLESolver jarg2_, long jarg3, OperationParabolicPDESolverSystem jarg3_, boolean jarg4, boolean jarg5);
  public final static native void Euler_solve__SWIG_1(long jarg1, Euler jarg1_, long jarg2, SLESolver jarg2_, long jarg3, OperationParabolicPDESolverSystem jarg3_, boolean jarg4);
  public final static native void Euler_solve__SWIG_2(long jarg1, Euler jarg1_, long jarg2, SLESolver jarg2_, long jarg3, OperationParabolicPDESolverSystem jarg3_);
  public final static native long new_CrankNicolson__SWIG_0(long jarg1, double jarg2, long jarg3, ScreenOutput jarg3_);
  public final static native long new_CrankNicolson__SWIG_1(long jarg1, double jarg2);
  public final static native void delete_CrankNicolson(long jarg1);
  public final static native void CrankNicolson_solve__SWIG_0(long jarg1, CrankNicolson jarg1_, long jarg2, SLESolver jarg2_, long jarg3, OperationParabolicPDESolverSystem jarg3_, boolean jarg4, boolean jarg5);
  public final static native void CrankNicolson_solve__SWIG_1(long jarg1, CrankNicolson jarg1_, long jarg2, SLESolver jarg2_, long jarg3, OperationParabolicPDESolverSystem jarg3_, boolean jarg4);
  public final static native void CrankNicolson_solve__SWIG_2(long jarg1, CrankNicolson jarg1_, long jarg2, SLESolver jarg2_, long jarg3, OperationParabolicPDESolverSystem jarg3_);
  public final static native void SLESolverConfiguration_type__set(long jarg1, SLESolverConfiguration jarg1_, int jarg2);
  public final static native int SLESolverConfiguration_type__get(long jarg1, SLESolverConfiguration jarg1_);
  public final static native void SLESolverConfiguration_eps__set(long jarg1, SLESolverConfiguration jarg1_, double jarg2);
  public final static native double SLESolverConfiguration_eps__get(long jarg1, SLESolverConfiguration jarg1_);
  public final static native void SLESolverConfiguration_maxIterations__set(long jarg1, SLESolverConfiguration jarg1_, long jarg2);
  public final static native long SLESolverConfiguration_maxIterations__get(long jarg1, SLESolverConfiguration jarg1_);
  public final static native void SLESolverConfiguration_threshold__set(long jarg1, SLESolverConfiguration jarg1_, double jarg2);
  public final static native double SLESolverConfiguration_threshold__get(long jarg1, SLESolverConfiguration jarg1_);
  public final static native long new_SLESolverConfiguration();
  public final static native void delete_SLESolverConfiguration(long jarg1);
  public final static native void SLESolverSPConfiguration_type__set(long jarg1, SLESolverSPConfiguration jarg1_, int jarg2);
  public final static native int SLESolverSPConfiguration_type__get(long jarg1, SLESolverSPConfiguration jarg1_);
  public final static native void SLESolverSPConfiguration_eps__set(long jarg1, SLESolverSPConfiguration jarg1_, float jarg2);
  public final static native float SLESolverSPConfiguration_eps__get(long jarg1, SLESolverSPConfiguration jarg1_);
  public final static native void SLESolverSPConfiguration_maxIterations__set(long jarg1, SLESolverSPConfiguration jarg1_, long jarg2);
  public final static native long SLESolverSPConfiguration_maxIterations__get(long jarg1, SLESolverSPConfiguration jarg1_);
  public final static native void SLESolverSPConfiguration_threshold__set(long jarg1, SLESolverSPConfiguration jarg1_, float jarg2);
  public final static native float SLESolverSPConfiguration_threshold__get(long jarg1, SLESolverSPConfiguration jarg1_);
  public final static native long new_SLESolverSPConfiguration();
  public final static native void delete_SLESolverSPConfiguration(long jarg1);
  public final static native long new_DensitySystemMatrix(long jarg1, Grid jarg1_, long jarg2, DataMatrix jarg2_, long jarg3, OperationMatrix jarg3_, double jarg4);
  public final static native void DensitySystemMatrix_mult(long jarg1, DensitySystemMatrix jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_);
  public final static native void DensitySystemMatrix_generateb(long jarg1, DensitySystemMatrix jarg1_, long jarg2, DataVector jarg2_);
  public final static native void delete_DensitySystemMatrix(long jarg1);
  public final static native void BatchConfiguration_filename__set(long jarg1, BatchConfiguration jarg1_, String jarg2);
  public final static native String BatchConfiguration_filename__get(long jarg1, BatchConfiguration jarg1_);
  public final static native void BatchConfiguration_batchsize__set(long jarg1, BatchConfiguration jarg1_, long jarg2);
  public final static native long BatchConfiguration_batchsize__get(long jarg1, BatchConfiguration jarg1_);
  public final static native void BatchConfiguration_samples__set(long jarg1, BatchConfiguration jarg1_, long jarg2);
  public final static native long BatchConfiguration_samples__get(long jarg1, BatchConfiguration jarg1_);
  public final static native void BatchConfiguration_seed__set(long jarg1, BatchConfiguration jarg1_, int jarg2);
  public final static native int BatchConfiguration_seed__get(long jarg1, BatchConfiguration jarg1_);
  public final static native void BatchConfiguration_wMode__set(long jarg1, BatchConfiguration jarg1_, int jarg2);
  public final static native int BatchConfiguration_wMode__get(long jarg1, BatchConfiguration jarg1_);
  public final static native void BatchConfiguration_wArgument__set(long jarg1, BatchConfiguration jarg1_, double jarg2);
  public final static native double BatchConfiguration_wArgument__get(long jarg1, BatchConfiguration jarg1_);
  public final static native void BatchConfiguration_refineEvery__set(long jarg1, BatchConfiguration jarg1_, long jarg2);
  public final static native long BatchConfiguration_refineEvery__get(long jarg1, BatchConfiguration jarg1_);
  public final static native void BatchConfiguration_verbose__set(long jarg1, BatchConfiguration jarg1_, boolean jarg2);
  public final static native boolean BatchConfiguration_verbose__get(long jarg1, BatchConfiguration jarg1_);
  public final static native void BatchConfiguration_stack__set(long jarg1, BatchConfiguration jarg1_, long jarg2);
  public final static native long BatchConfiguration_stack__get(long jarg1, BatchConfiguration jarg1_);
  public final static native void BatchConfiguration_testsize__set(long jarg1, BatchConfiguration jarg1_, long jarg2);
  public final static native long BatchConfiguration_testsize__get(long jarg1, BatchConfiguration jarg1_);
  public final static native void BatchConfiguration_lambda__set(long jarg1, BatchConfiguration jarg1_, double jarg2);
  public final static native double BatchConfiguration_lambda__get(long jarg1, BatchConfiguration jarg1_);
  public final static native long new_BatchConfiguration();
  public final static native void delete_BatchConfiguration(long jarg1);
  public final static native void DensityEstimationConfiguration_type__set(long jarg1, DensityEstimationConfiguration jarg1_, int jarg2);
  public final static native int DensityEstimationConfiguration_type__get(long jarg1, DensityEstimationConfiguration jarg1_);
  public final static native void DensityEstimationConfiguration_decomposition__set(long jarg1, DensityEstimationConfiguration jarg1_, int jarg2);
  public final static native int DensityEstimationConfiguration_decomposition__get(long jarg1, DensityEstimationConfiguration jarg1_);
  public final static native void DensityEstimationConfiguration_iCholSweepsDecompose__set(long jarg1, DensityEstimationConfiguration jarg1_, long jarg2);
  public final static native long DensityEstimationConfiguration_iCholSweepsDecompose__get(long jarg1, DensityEstimationConfiguration jarg1_);
  public final static native void DensityEstimationConfiguration_iCholSweepsRefine__set(long jarg1, DensityEstimationConfiguration jarg1_, long jarg2);
  public final static native long DensityEstimationConfiguration_iCholSweepsRefine__get(long jarg1, DensityEstimationConfiguration jarg1_);
  public final static native void DensityEstimationConfiguration_iCholSweepsUpdateLambda__set(long jarg1, DensityEstimationConfiguration jarg1_, long jarg2);
  public final static native long DensityEstimationConfiguration_iCholSweepsUpdateLambda__get(long jarg1, DensityEstimationConfiguration jarg1_);
  public final static native void DensityEstimationConfiguration_iCholSweepsSolver__set(long jarg1, DensityEstimationConfiguration jarg1_, long jarg2);
  public final static native long DensityEstimationConfiguration_iCholSweepsSolver__get(long jarg1, DensityEstimationConfiguration jarg1_);
  public final static native long new_DensityEstimationConfiguration();
  public final static native void delete_DensityEstimationConfiguration(long jarg1);
  public final static native void RegularizationConfiguration_type__set(long jarg1, RegularizationConfiguration jarg1_, int jarg2);
  public final static native int RegularizationConfiguration_type__get(long jarg1, RegularizationConfiguration jarg1_);
  public final static native void RegularizationConfiguration_lambda__set(long jarg1, RegularizationConfiguration jarg1_, double jarg2);
  public final static native double RegularizationConfiguration_lambda__get(long jarg1, RegularizationConfiguration jarg1_);
  public final static native void RegularizationConfiguration_l1Ratio__set(long jarg1, RegularizationConfiguration jarg1_, double jarg2);
  public final static native double RegularizationConfiguration_l1Ratio__get(long jarg1, RegularizationConfiguration jarg1_);
  public final static native void RegularizationConfiguration_exponentBase__set(long jarg1, RegularizationConfiguration jarg1_, double jarg2);
  public final static native double RegularizationConfiguration_exponentBase__get(long jarg1, RegularizationConfiguration jarg1_);
  public final static native long new_RegularizationConfiguration();
  public final static native void delete_RegularizationConfiguration(long jarg1);
  public final static native long new_Dataset__SWIG_0();
  public final static native long new_Dataset__SWIG_1(long jarg1, long jarg2);
  public final static native long Dataset_getNumberInstances(long jarg1, Dataset jarg1_);
  public final static native long Dataset_getDimension(long jarg1, Dataset jarg1_);
  public final static native long Dataset_getTargets(long jarg1, Dataset jarg1_);
  public final static native long Dataset_getConstTargets(long jarg1, Dataset jarg1_);
  public final static native long Dataset_getData(long jarg1, Dataset jarg1_);
  public final static native long Dataset_getConstData(long jarg1, Dataset jarg1_);
  public final static native void delete_Dataset(long jarg1);
  public final static native long new_ConvergenceMonitor(double jarg1, long jarg2, long jarg3);
  public final static native void delete_ConvergenceMonitor(long jarg1);
  public final static native void ConvergenceMonitor_pushToBuffer(long jarg1, ConvergenceMonitor jarg1_, double jarg2, double jarg3);
  public final static native boolean ConvergenceMonitor_checkConvergence(long jarg1, ConvergenceMonitor jarg1_);
  public final static native void ConvergenceMonitor_nextRefCnt_set(long jarg1, ConvergenceMonitor jarg1_, long jarg2);
  public final static native long ConvergenceMonitor_nextRefCnt_get(long jarg1, ConvergenceMonitor jarg1_);
  public final static native void ConvergenceMonitor_minRefInterval_set(long jarg1, ConvergenceMonitor jarg1_, long jarg2);
  public final static native long ConvergenceMonitor_minRefInterval_get(long jarg1, ConvergenceMonitor jarg1_);
  public final static native void ConvergenceMonitor_validErrorDeclineBuffer_set(long jarg1, ConvergenceMonitor jarg1_, long jarg2);
  public final static native long ConvergenceMonitor_validErrorDeclineBuffer_get(long jarg1, ConvergenceMonitor jarg1_);
  public final static native void ConvergenceMonitor_trainErrorDeclineBuffer_set(long jarg1, ConvergenceMonitor jarg1_, long jarg2);
  public final static native long ConvergenceMonitor_trainErrorDeclineBuffer_get(long jarg1, ConvergenceMonitor jarg1_);
  public final static native long new_DBMatDecompMatrixSolver();
  public final static native void delete_DBMatDecompMatrixSolver(long jarg1);
  public final static native long new_DBMatDMSChol();
  public final static native void DBMatDMSChol_solve(long jarg1, DBMatDMSChol jarg1_, long jarg2, DataMatrix jarg2_, long jarg3, DataVector jarg3_, long jarg4, DataVector jarg4_, double jarg5, double jarg6);
  public final static native void DBMatDMSChol_choleskyUpdate__SWIG_0(long jarg1, DBMatDMSChol jarg1_, long jarg2, DataMatrix jarg2_, long jarg3, DataVector jarg3_, boolean jarg4);
  public final static native void DBMatDMSChol_choleskyUpdate__SWIG_1(long jarg1, DBMatDMSChol jarg1_, long jarg2, DataMatrix jarg2_, long jarg3, DataVector jarg3_);
  public final static native void DBMatDMSChol_choleskyDowndate__SWIG_0(long jarg1, DBMatDMSChol jarg1_, long jarg2, DataMatrix jarg2_, long jarg3, DataVector jarg3_, boolean jarg4);
  public final static native void DBMatDMSChol_choleskyDowndate__SWIG_1(long jarg1, DBMatDMSChol jarg1_, long jarg2, DataMatrix jarg2_, long jarg3, DataVector jarg3_);
  public final static native void delete_DBMatDMSChol(long jarg1);
  public final static native long new_DBMatDMSDenseIChol(long jarg1, DensityEstimationConfiguration jarg1_, long jarg2, Grid jarg2_, double jarg3, boolean jarg4);
  public final static native void delete_DBMatDMSDenseIChol(long jarg1);
  public final static native void delete_DBMatOffline(long jarg1);
  public final static native long DBMatOffline_clone(long jarg1, DBMatOffline jarg1_);
  public final static native boolean DBMatOffline_isRefineable(long jarg1, DBMatOffline jarg1_);
  public final static native long DBMatOffline_getGridConfig(long jarg1, DBMatOffline jarg1_);
  public final static native long DBMatOffline_getAdaptivityConfig(long jarg1, DBMatOffline jarg1_);
  public final static native long DBMatOffline_getRegularizationConfig(long jarg1, DBMatOffline jarg1_);
  public final static native long DBMatOffline_getDensityEstimationConfig(long jarg1, DBMatOffline jarg1_);
  public final static native long DBMatOffline_getDecomposedMatrix(long jarg1, DBMatOffline jarg1_);
  public final static native long DBMatOffline_getLhsMatrix_ONLY_FOR_TESTING(long jarg1, DBMatOffline jarg1_);
  public final static native long DBMatOffline_getGrid(long jarg1, DBMatOffline jarg1_);
  public final static native void DBMatOffline_buildMatrix(long jarg1, DBMatOffline jarg1_);
  public final static native void DBMatOffline_decomposeMatrix(long jarg1, DBMatOffline jarg1_);
  public final static native void DBMatOffline_printMatrix(long jarg1, DBMatOffline jarg1_);
  public final static native void DBMatOffline_store(long jarg1, DBMatOffline jarg1_, String jarg2);
  public final static native void DBMatOffline_setInter(long jarg1, DBMatOffline jarg1_, long jarg2);
  public final static native void DBMatOffline_interactions_set(long jarg1, DBMatOffline jarg1_, long jarg2);
  public final static native long DBMatOffline_interactions_get(long jarg1, DBMatOffline jarg1_);
  public final static native void DBMatOfflineGE_buildMatrix(long jarg1, DBMatOfflineGE jarg1_);
  public final static native void delete_DBMatOfflineGE(long jarg1);
  public final static native long new_DBMatOfflineChol__SWIG_0(long jarg1, RegularGridConfiguration jarg1_, long jarg2, AdpativityConfiguration jarg2_, long jarg3, RegularizationConfiguration jarg3_, long jarg4, DensityEstimationConfiguration jarg4_);
  public final static native long new_DBMatOfflineChol__SWIG_1(String jarg1);
  public final static native long DBMatOfflineChol_clone(long jarg1, DBMatOfflineChol jarg1_);
  public final static native boolean DBMatOfflineChol_isRefineable(long jarg1, DBMatOfflineChol jarg1_);
  public final static native void DBMatOfflineChol_decomposeMatrix(long jarg1, DBMatOfflineChol jarg1_);
  public final static native void DBMatOfflineChol_choleskyModification(long jarg1, DBMatOfflineChol jarg1_, long jarg2, long jarg3, double jarg4);
  public final static native void delete_DBMatOfflineChol(long jarg1);
  public final static native long new_DBMatOfflineDenseIChol__SWIG_0(long jarg1, RegularGridConfiguration jarg1_, long jarg2, AdpativityConfiguration jarg2_, long jarg3, RegularizationConfiguration jarg3_, long jarg4, DensityEstimationConfiguration jarg4_);
  public final static native long new_DBMatOfflineDenseIChol__SWIG_1(String jarg1);
  public final static native long DBMatOfflineDenseIChol_clone(long jarg1, DBMatOfflineDenseIChol jarg1_);
  public final static native void DBMatOfflineDenseIChol_decomposeMatrix(long jarg1, DBMatOfflineDenseIChol jarg1_);
  public final static native void DBMatOfflineDenseIChol_choleskyModification(long jarg1, DBMatOfflineDenseIChol jarg1_, long jarg2, long jarg3, double jarg4);
  public final static native void DBMatOfflineDenseIChol_ichol__SWIG_0(long jarg1, DataMatrix jarg1_, long jarg2, DataMatrix jarg2_, long jarg3, long jarg4);
  public final static native void DBMatOfflineDenseIChol_ichol__SWIG_1(long jarg1, DataMatrix jarg1_, long jarg2, DataMatrix jarg2_, long jarg3);
  public final static native void DBMatOfflineDenseIChol_ichol__SWIG_2(long jarg1, DataMatrix jarg1_, long jarg2, DataMatrix jarg2_);
  public final static native void delete_DBMatOfflineDenseIChol(long jarg1);
  public final static native long new_DBMatOnline__SWIG_0(long jarg1, DBMatOffline jarg1_);
  public final static native long new_DBMatOnline__SWIG_1(long jarg1, DBMatOnline jarg1_);
  public final static native void delete_DBMatOnline(long jarg1);
  public final static native void DBMatOnline_setLambda(long jarg1, DBMatOnline jarg1_, double jarg2);
  public final static native long DBMatOnline_getOfflineObject(long jarg1, DBMatOnline jarg1_);
  public final static native long DBMatOnline_getConstOfflineObject(long jarg1, DBMatOnline jarg1_);
  public final static native long DBMatOnline_updateSystemMatrixDecomposition(long jarg1, DBMatOnline jarg1_, long jarg2, long jarg3, double jarg4);
  public final static native void DBMatOnlineDE_computeDensityFunction__SWIG_0(long jarg1, DBMatOnlineDE jarg1_, long jarg2, DataMatrix jarg2_, boolean jarg3, boolean jarg4, long jarg5, long jarg6);
  public final static native void DBMatOnlineDE_computeDensityFunction__SWIG_1(long jarg1, DBMatOnlineDE jarg1_, long jarg2, DataMatrix jarg2_, boolean jarg3, boolean jarg4, long jarg5);
  public final static native void DBMatOnlineDE_computeDensityFunction__SWIG_2(long jarg1, DBMatOnlineDE jarg1_, long jarg2, DataMatrix jarg2_, boolean jarg3, boolean jarg4);
  public final static native void DBMatOnlineDE_computeDensityFunction__SWIG_3(long jarg1, DBMatOnlineDE jarg1_, long jarg2, DataMatrix jarg2_, boolean jarg3);
  public final static native void DBMatOnlineDE_computeDensityFunction__SWIG_4(long jarg1, DBMatOnlineDE jarg1_, long jarg2, DataMatrix jarg2_);
  public final static native double DBMatOnlineDE_eval__SWIG_0(long jarg1, DBMatOnlineDE jarg1_, long jarg2, DataVector jarg2_, boolean jarg3);
  public final static native double DBMatOnlineDE_eval__SWIG_1(long jarg1, DBMatOnlineDE jarg1_, long jarg2, DataVector jarg2_);
  public final static native void DBMatOnlineDE_eval__SWIG_2(long jarg1, DBMatOnlineDE jarg1_, long jarg2, DataMatrix jarg2_, long jarg3, DataVector jarg3_, boolean jarg4);
  public final static native void DBMatOnlineDE_eval__SWIG_3(long jarg1, DBMatOnlineDE jarg1_, long jarg2, DataMatrix jarg2_, long jarg3, DataVector jarg3_);
  public final static native long DBMatOnlineDE_getAlpha(long jarg1, DBMatOnlineDE jarg1_);
  public final static native void DBMatOnlineDE_updateAlpha(long jarg1, DBMatOnlineDE jarg1_, long jarg2, long jarg3);
  public final static native boolean DBMatOnlineDE_isComputed(long jarg1, DBMatOnlineDE jarg1_);
  public final static native void DBMatOnlineDE_setCrossValidationParameters(long jarg1, DBMatOnlineDE jarg1_, int jarg2, double jarg3, double jarg4, long jarg5, DataMatrix jarg5_, long jarg6, DataMatrix jarg6_, boolean jarg7);
  public final static native double DBMatOnlineDE_getBestLambda(long jarg1, DBMatOnlineDE jarg1_);
  public final static native void DBMatOnlineDE_setBeta(long jarg1, DBMatOnlineDE jarg1_, double jarg2);
  public final static native double DBMatOnlineDE_getBeta(long jarg1, DBMatOnlineDE jarg1_);
  public final static native double DBMatOnlineDE_normalize__SWIG_0(long jarg1, DBMatOnlineDE jarg1_, long jarg2);
  public final static native double DBMatOnlineDE_normalize__SWIG_1(long jarg1, DBMatOnlineDE jarg1_);
  public final static native double DBMatOnlineDE_normalizeQuadrature(long jarg1, DBMatOnlineDE jarg1_);
  public final static native void delete_DBMatOnlineDE(long jarg1);
  public final static native long new_DBMatOnlineDEChol__SWIG_0(long jarg1, DBMatOffline jarg1_, double jarg2);
  public final static native long new_DBMatOnlineDEChol__SWIG_1(long jarg1, DBMatOffline jarg1_);
  public final static native long DBMatOnlineDEChol_updateSystemMatrixDecomposition(long jarg1, DBMatOnlineDEChol jarg1_, long jarg2, long jarg3, double jarg4);
  public final static native void delete_DBMatOnlineDEChol(long jarg1);
  public final static native long buildDBMatOnlineDE__SWIG_0(long jarg1, DBMatOffline jarg1_, double jarg2);
  public final static native long buildDBMatOnlineDE__SWIG_1(long jarg1, DBMatOffline jarg1_);
  public final static native long buildOfflineObject(long jarg1, RegularGridConfiguration jarg1_, long jarg2, AdpativityConfiguration jarg2_, long jarg3, RegularizationConfiguration jarg3_, long jarg4, DensityEstimationConfiguration jarg4_);
  public final static native long buildFromFile(String jarg1);
  public final static native long createOperationTest(long jarg1, Grid jarg1_);
  public final static native long createOperationRegularizationDiagonal(long jarg1, Grid jarg1_, int jarg2, double jarg3);
  public final static native long createOperationDensityMarginalize(long jarg1, Grid jarg1_);
  public final static native long createOperationDensityMargTo1D(long jarg1, Grid jarg1_);
  public final static native long createOperationDensitySampling1D(long jarg1, Grid jarg1_);
  public final static native long createOperationDensitySampling(long jarg1, Grid jarg1_);
  public final static native long createOperationDensityRejectionSampling(long jarg1, Grid jarg1_);
  public final static native long createOperationDensityConditional(long jarg1, Grid jarg1_);
  public final static native long createOperationRosenblattTransformation(long jarg1, Grid jarg1_);
  public final static native long createOperationRosenblattTransformation1D(long jarg1, Grid jarg1_);
  public final static native long createOperationInverseRosenblattTransformation(long jarg1, Grid jarg1_);
  public final static native long createOperationInverseRosenblattTransformation1D(long jarg1, Grid jarg1_);
  public final static native long createOperationRosenblattTransformationKDE(long jarg1, GaussianKDE jarg1_);
  public final static native long createOperationInverseRosenblattTransformationKDE(long jarg1, GaussianKDE jarg1_);
  public final static native long createOperationDensityMarginalizeKDE(long jarg1, GaussianKDE jarg1_);
  public final static native long createOperationDensityConditionalKDE(long jarg1, GaussianKDE jarg1_);
  public final static native long createOperationMultipleEval__SWIG_1(long jarg1, Grid jarg1_, long jarg2, DataMatrix jarg2_, long jarg3);
  public final static native void ClassificatorQuality_truePositive__set(long jarg1, ClassificatorQuality jarg1_, long jarg2);
  public final static native long ClassificatorQuality_truePositive__get(long jarg1, ClassificatorQuality jarg1_);
  public final static native void ClassificatorQuality_trueNegative__set(long jarg1, ClassificatorQuality jarg1_, long jarg2);
  public final static native long ClassificatorQuality_trueNegative__get(long jarg1, ClassificatorQuality jarg1_);
  public final static native void ClassificatorQuality_falsePositive__set(long jarg1, ClassificatorQuality jarg1_, long jarg2);
  public final static native long ClassificatorQuality_falsePositive__get(long jarg1, ClassificatorQuality jarg1_);
  public final static native void ClassificatorQuality_falseNegative__set(long jarg1, ClassificatorQuality jarg1_, long jarg2);
  public final static native long ClassificatorQuality_falseNegative__get(long jarg1, ClassificatorQuality jarg1_);
  public final static native long new_ClassificatorQuality();
  public final static native void delete_ClassificatorQuality(long jarg1);
  public final static native void LearnerTiming_timeComplete__set(long jarg1, LearnerTiming jarg1_, double jarg2);
  public final static native double LearnerTiming_timeComplete__get(long jarg1, LearnerTiming jarg1_);
  public final static native void LearnerTiming_timeMultComplete__set(long jarg1, LearnerTiming jarg1_, double jarg2);
  public final static native double LearnerTiming_timeMultComplete__get(long jarg1, LearnerTiming jarg1_);
  public final static native void LearnerTiming_timeMultCompute__set(long jarg1, LearnerTiming jarg1_, double jarg2);
  public final static native double LearnerTiming_timeMultCompute__get(long jarg1, LearnerTiming jarg1_);
  public final static native void LearnerTiming_timeMultTransComplete__set(long jarg1, LearnerTiming jarg1_, double jarg2);
  public final static native double LearnerTiming_timeMultTransComplete__get(long jarg1, LearnerTiming jarg1_);
  public final static native void LearnerTiming_timeMultTransCompute__set(long jarg1, LearnerTiming jarg1_, double jarg2);
  public final static native double LearnerTiming_timeMultTransCompute__get(long jarg1, LearnerTiming jarg1_);
  public final static native void LearnerTiming_timeRegularization__set(long jarg1, LearnerTiming jarg1_, double jarg2);
  public final static native double LearnerTiming_timeRegularization__get(long jarg1, LearnerTiming jarg1_);
  public final static native void LearnerTiming_GFlop__set(long jarg1, LearnerTiming jarg1_, double jarg2);
  public final static native double LearnerTiming_GFlop__get(long jarg1, LearnerTiming jarg1_);
  public final static native void LearnerTiming_GByte__set(long jarg1, LearnerTiming jarg1_, double jarg2);
  public final static native double LearnerTiming_GByte__get(long jarg1, LearnerTiming jarg1_);
  public final static native long new_LearnerTiming();
  public final static native void delete_LearnerTiming(long jarg1);
  public final static native void delete_LearnerBase(long jarg1);
  public final static native long LearnerBase_train__SWIG_0(long jarg1, LearnerBase jarg1_, long jarg2, DataMatrix jarg2_, long jarg3, DataVector jarg3_, long jarg4, RegularGridConfiguration jarg4_, long jarg5, SLESolverConfiguration jarg5_, long jarg6, SLESolverConfiguration jarg6_, long jarg7, AdpativityConfiguration jarg7_, boolean jarg8, double jarg9, long jarg10, DataMatrix jarg10_, long jarg11, DataVector jarg11_);
  public final static native long LearnerBase_train__SWIG_1(long jarg1, LearnerBase jarg1_, long jarg2, DataMatrix jarg2_, long jarg3, DataVector jarg3_, long jarg4, RegularGridConfiguration jarg4_, long jarg5, SLESolverConfiguration jarg5_, long jarg6, SLESolverConfiguration jarg6_, long jarg7, AdpativityConfiguration jarg7_, boolean jarg8, double jarg9, long jarg10, DataMatrix jarg10_);
  public final static native long LearnerBase_train__SWIG_2(long jarg1, LearnerBase jarg1_, long jarg2, DataMatrix jarg2_, long jarg3, DataVector jarg3_, long jarg4, RegularGridConfiguration jarg4_, long jarg5, SLESolverConfiguration jarg5_, long jarg6, SLESolverConfiguration jarg6_, long jarg7, AdpativityConfiguration jarg7_, boolean jarg8, double jarg9);
  public final static native long LearnerBase_train__SWIG_3(long jarg1, LearnerBase jarg1_, long jarg2, DataMatrix jarg2_, long jarg3, DataVector jarg3_, long jarg4, RegularGridConfiguration jarg4_, long jarg5, SLESolverConfiguration jarg5_, double jarg6);
  public final static native void LearnerBase_predict(long jarg1, LearnerBase jarg1_, long jarg2, DataMatrix jarg2_, long jarg3, DataVector jarg3_);
  public final static native void LearnerBase_multTranspose(long jarg1, LearnerBase jarg1_, long jarg2, DataMatrix jarg2_, long jarg3, DataVector jarg3_, long jarg4, DataVector jarg4_);
  public final static native double LearnerBase_getAccuracy__SWIG_0(long jarg1, LearnerBase jarg1_, long jarg2, DataMatrix jarg2_, long jarg3, DataVector jarg3_, double jarg4);
  public final static native double LearnerBase_getAccuracy__SWIG_1(long jarg1, LearnerBase jarg1_, long jarg2, DataMatrix jarg2_, long jarg3, DataVector jarg3_);
  public final static native double LearnerBase_getAccuracy__SWIG_2(long jarg1, LearnerBase jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_, double jarg4);
  public final static native double LearnerBase_getAccuracy__SWIG_3(long jarg1, LearnerBase jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_);
  public final static native long LearnerBase_getCassificatorQuality__SWIG_0(long jarg1, LearnerBase jarg1_, long jarg2, DataMatrix jarg2_, long jarg3, DataVector jarg3_, double jarg4);
  public final static native long LearnerBase_getCassificatorQuality__SWIG_1(long jarg1, LearnerBase jarg1_, long jarg2, DataMatrix jarg2_, long jarg3, DataVector jarg3_);
  public final static native long LearnerBase_getCassificatorQuality__SWIG_2(long jarg1, LearnerBase jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_, double jarg4);
  public final static native long LearnerBase_getCassificatorQuality__SWIG_3(long jarg1, LearnerBase jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_);
  public final static native void LearnerBase_store(long jarg1, LearnerBase jarg1_, String jarg2, String jarg3);
  public final static native void LearnerBase_dumpGrid(long jarg1, LearnerBase jarg1_, String jarg2);
  public final static native void LearnerBase_dumpFunction(long jarg1, LearnerBase jarg1_, String jarg2, long jarg3);
  public final static native boolean LearnerBase_getIsRegression(long jarg1, LearnerBase jarg1_);
  public final static native boolean LearnerBase_getIsVerbose(long jarg1, LearnerBase jarg1_);
  public final static native void LearnerBase_setIsVerbose(long jarg1, LearnerBase jarg1_, boolean jarg2);
  public final static native long LearnerBase_getRefinementExecTimes(long jarg1, LearnerBase jarg1_);
  public final static native long LearnerBase_getGrid(long jarg1, LearnerBase jarg1_);
  public final static native long LearnerBase_getAlpha(long jarg1, LearnerBase jarg1_);
  public final static native void LearnerBase_setReuseCoefficients(long jarg1, LearnerBase jarg1_, boolean jarg2);
  public final static native void LearnerBase_setSolverVerbose(long jarg1, LearnerBase jarg1_, boolean jarg2);
  public final static native void delete_DensityEstimator(long jarg1);
  public final static native void DensityEstimator_initialize(long jarg1, DensityEstimator jarg1_, long jarg2, DataMatrix jarg2_);
  public final static native double DensityEstimator_pdf__SWIG_0(long jarg1, DensityEstimator jarg1_, long jarg2, DataVector jarg2_);
  public final static native void DensityEstimator_pdf__SWIG_1(long jarg1, DensityEstimator jarg1_, long jarg2, DataMatrix jarg2_, long jarg3, DataVector jarg3_);
  public final static native double DensityEstimator_mean(long jarg1, DensityEstimator jarg1_);
  public final static native double DensityEstimator_variance(long jarg1, DensityEstimator jarg1_);
  public final static native double DensityEstimator_std_deviation(long jarg1, DensityEstimator jarg1_);
  public final static native void DensityEstimator_cov(long jarg1, DensityEstimator jarg1_, long jarg2, DataMatrix jarg2_);
  public final static native void DensityEstimator_corrcoef(long jarg1, DensityEstimator jarg1_, long jarg2, DataMatrix jarg2_);
  public final static native long DensityEstimator_getSamples__SWIG_0(long jarg1, DensityEstimator jarg1_, long jarg2);
  public final static native long DensityEstimator_getSamples__SWIG_1(long jarg1, DensityEstimator jarg1_);
  public final static native long DensityEstimator_getDim(long jarg1, DensityEstimator jarg1_);
  public final static native long DensityEstimator_getNsamples(long jarg1, DensityEstimator jarg1_);
  public final static native double M_SQRT2PI_get();
  public final static native long new_GaussianKDE__SWIG_0();
  public final static native long new_GaussianKDE__SWIG_1(long jarg1);
  public final static native long new_GaussianKDE__SWIG_2(long jarg1, DataMatrix jarg1_);
  public final static native long new_GaussianKDE__SWIG_3(long jarg1, GaussianKDE jarg1_);
  public final static native void delete_GaussianKDE(long jarg1);
  public final static native void GaussianKDE_initialize__SWIG_0(long jarg1, GaussianKDE jarg1_, long jarg2, DataMatrix jarg2_);
  public final static native void GaussianKDE_initialize__SWIG_1(long jarg1, GaussianKDE jarg1_, long jarg2);
  public final static native double GaussianKDE_mean(long jarg1, GaussianKDE jarg1_);
  public final static native double GaussianKDE_variance(long jarg1, GaussianKDE jarg1_);
  public final static native void GaussianKDE_cov(long jarg1, GaussianKDE jarg1_, long jarg2, DataMatrix jarg2_);
  public final static native double GaussianKDE_pdf__SWIG_0(long jarg1, GaussianKDE jarg1_, long jarg2, DataVector jarg2_);
  public final static native void GaussianKDE_pdf__SWIG_1(long jarg1, GaussianKDE jarg1_, long jarg2, DataMatrix jarg2_, long jarg3, DataVector jarg3_);
  public final static native void GaussianKDE_getConditionalizationFactor(long jarg1, GaussianKDE jarg1_, long jarg2, DataVector jarg2_);
  public final static native void GaussianKDE_setConditionalizationFactor(long jarg1, GaussianKDE jarg1_, long jarg2, DataVector jarg2_);
  public final static native void GaussianKDE_updateConditionalizationFactors(long jarg1, GaussianKDE jarg1_, long jarg2, DataVector jarg2_, long jarg3, SizeTVector jarg3_, long jarg4, DataVector jarg4_);
  public final static native void GaussianKDE_getBandwidths(long jarg1, GaussianKDE jarg1_, long jarg2, DataVector jarg2_);
  public final static native long GaussianKDE_getSamples__SWIG_0(long jarg1, GaussianKDE jarg1_);
  public final static native long GaussianKDE_getSamples__SWIG_1(long jarg1, GaussianKDE jarg1_, long jarg2);
  public final static native long GaussianKDE_getDim(long jarg1, GaussianKDE jarg1_);
  public final static native long GaussianKDE_getNsamples(long jarg1, GaussianKDE jarg1_);
  public final static native long new_LearnerSGDEConfiguration__SWIG_0();
  public final static native long new_LearnerSGDEConfiguration__SWIG_1(String jarg1);
  public final static native long LearnerSGDEConfiguration_clone(long jarg1, LearnerSGDEConfiguration jarg1_);
  public final static native void LearnerSGDEConfiguration_initConfig(long jarg1, LearnerSGDEConfiguration jarg1_);
  public final static native int LearnerSGDEConfiguration_stringToGridType(long jarg1, LearnerSGDEConfiguration jarg1_, long jarg2);
  public final static native int LearnerSGDEConfiguration_stringToRegularizationType(long jarg1, LearnerSGDEConfiguration jarg1_, long jarg2);
  public final static native int LearnerSGDEConfiguration_stringToSolverType(long jarg1, LearnerSGDEConfiguration jarg1_, long jarg2);
  public final static native void delete_LearnerSGDEConfiguration(long jarg1);
  public final static native long new_LearnerSGDE__SWIG_0(long jarg1, RegularGridConfiguration jarg1_, long jarg2, AdpativityConfiguration jarg2_, long jarg3, SLESolverConfiguration jarg3_, long jarg4, RegularizationConfiguration jarg4_, long jarg5);
  public final static native long new_LearnerSGDE__SWIG_1(long jarg1, LearnerSGDEConfiguration jarg1_);
  public final static native long new_LearnerSGDE__SWIG_2(long jarg1, LearnerSGDE jarg1_);
  public final static native void delete_LearnerSGDE(long jarg1);
  public final static native void LearnerSGDE_initialize(long jarg1, LearnerSGDE jarg1_, long jarg2, DataMatrix jarg2_);
  public final static native double LearnerSGDE_pdf__SWIG_0(long jarg1, LearnerSGDE jarg1_, long jarg2, DataVector jarg2_);
  public final static native void LearnerSGDE_pdf__SWIG_1(long jarg1, LearnerSGDE jarg1_, long jarg2, DataMatrix jarg2_, long jarg3, DataVector jarg3_);
  public final static native double LearnerSGDE_mean(long jarg1, LearnerSGDE jarg1_);
  public final static native double LearnerSGDE_variance(long jarg1, LearnerSGDE jarg1_);
  public final static native void LearnerSGDE_cov(long jarg1, LearnerSGDE jarg1_, long jarg2, DataMatrix jarg2_);
  public final static native long LearnerSGDE_getSamples__SWIG_0(long jarg1, LearnerSGDE jarg1_, long jarg2);
  public final static native long LearnerSGDE_getSamples__SWIG_1(long jarg1, LearnerSGDE jarg1_);
  public final static native long LearnerSGDE_getDim(long jarg1, LearnerSGDE jarg1_);
  public final static native long LearnerSGDE_getNsamples(long jarg1, LearnerSGDE jarg1_);
  public final static native long LearnerSGDE_getSurpluses(long jarg1, LearnerSGDE jarg1_);
  public final static native long LearnerSGDE_getGrid(long jarg1, LearnerSGDE jarg1_);
  public final static native void LearnerSGDE_train__SWIG_0(long jarg1, LearnerSGDE jarg1_, long jarg2, Grid jarg2_, long jarg3, DataVector jarg3_, long jarg4, DataMatrix jarg4_, double jarg5);
  public final static native void LearnerSGDE_train__SWIG_1(long jarg1, LearnerSGDE jarg1_);
  public final static native void LearnerSGDE_trainOnline(long jarg1, LearnerSGDE jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataMatrix jarg3_, long jarg4, DataVector jarg4_, long jarg5, DataMatrix jarg5_, long jarg6, DataVector jarg6_, long jarg7, DataVector jarg7_, long jarg8, String jarg9, String jarg10, long jarg11, double jarg12, long jarg13, long jarg14, boolean jarg15);
  public final static native void LearnerSGDE_storeResults(long jarg1, LearnerSGDE jarg1_, long jarg2, DataMatrix jarg2_);
  public final static native void LearnerSGDE_predict(long jarg1, LearnerSGDE jarg1_, long jarg2, DataMatrix jarg2_, long jarg3, DataVector jarg3_);
  public final static native double LearnerSGDE_getAccuracy__SWIG_0(long jarg1, LearnerSGDE jarg1_, long jarg2, DataMatrix jarg2_, long jarg3, DataVector jarg3_, double jarg4);
  public final static native double LearnerSGDE_getAccuracy__SWIG_1(long jarg1, LearnerSGDE jarg1_, long jarg2, DataVector jarg2_, double jarg3, long jarg4, DataVector jarg4_);
  public final static native double LearnerSGDE_getError(long jarg1, LearnerSGDE jarg1_, long jarg2, DataMatrix jarg2_, long jarg3, DataVector jarg3_, double jarg4, String jarg5);
  public final static native void LearnerSGDE_error_set(long jarg1, LearnerSGDE jarg1_, double jarg2);
  public final static native double LearnerSGDE_error_get(long jarg1, LearnerSGDE jarg1_);
  public final static native void LearnerSGDE_avgErrors_set(long jarg1, LearnerSGDE jarg1_, long jarg2, DataVector jarg2_);
  public final static native long LearnerSGDE_avgErrors_get(long jarg1, LearnerSGDE jarg1_);
  public final static native long new_RegressionLearner__SWIG_0(long jarg1, RegularGridConfiguration jarg1_, long jarg2, AdpativityConfiguration jarg2_, long jarg3, SLESolverConfiguration jarg3_, long jarg4, SLESolverConfiguration jarg4_, long jarg5, RegularizationConfiguration jarg5_, long jarg6);
  public final static native long new_RegressionLearner__SWIG_1(long jarg1, RegularGridConfiguration jarg1_, long jarg2, AdpativityConfiguration jarg2_, long jarg3, SLESolverConfiguration jarg3_, long jarg4, SLESolverConfiguration jarg4_, long jarg5, RegularizationConfiguration jarg5_);
  public final static native void RegressionLearner_train(long jarg1, RegressionLearner jarg1_, long jarg2, DataMatrix jarg2_, long jarg3, DataVector jarg3_);
  public final static native long RegressionLearner_predict(long jarg1, RegressionLearner jarg1_, long jarg2, DataMatrix jarg2_);
  public final static native long RegressionLearner_getGridSize(long jarg1, RegressionLearner jarg1_);
  public final static native long RegressionLearner_getGrid(long jarg1, RegressionLearner jarg1_);
  public final static native double RegressionLearner_getMSE(long jarg1, RegressionLearner jarg1_, long jarg2, DataMatrix jarg2_, long jarg3, DataVector jarg3_);
  public final static native long RegressionLearner_getWeights(long jarg1, RegressionLearner jarg1_);
  public final static native void RegressionLearner_setWeights(long jarg1, RegressionLearner jarg1_, long jarg2, DataVector jarg2_);
  public final static native void delete_RegressionLearner(long jarg1);
  public final static native long new_ClassificationLearner__SWIG_0(long jarg1, RegularGridConfiguration jarg1_, long jarg2, AdpativityConfiguration jarg2_, long jarg3, SLESolverConfiguration jarg3_, long jarg4, SLESolverConfiguration jarg4_, long jarg5, RegularizationConfiguration jarg5_, long jarg6);
  public final static native long new_ClassificationLearner__SWIG_1(long jarg1, RegularGridConfiguration jarg1_, long jarg2, AdpativityConfiguration jarg2_, long jarg3, SLESolverConfiguration jarg3_, long jarg4, SLESolverConfiguration jarg4_, long jarg5, RegularizationConfiguration jarg5_);
  public final static native void ClassificationLearner_train(long jarg1, ClassificationLearner jarg1_, long jarg2, DataMatrix jarg2_, long jarg3, DataVector jarg3_);
  public final static native long ClassificationLearner_predict(long jarg1, ClassificationLearner jarg1_, long jarg2, DataMatrix jarg2_);
  public final static native long ClassificationLearner_predictWithCertainty(long jarg1, ClassificationLearner jarg1_, long jarg2, DataMatrix jarg2_);
  public final static native long ClassificationLearner_getGridSize(long jarg1, ClassificationLearner jarg1_);
  public final static native double ClassificationLearner_getAccuracy(long jarg1, ClassificationLearner jarg1_, long jarg2, DataMatrix jarg2_, long jarg3, DataVector jarg3_);
  public final static native void delete_ClassificationLearner(long jarg1);
  public final static native long new_NearestNeighbors(long jarg1, long jarg2);
  public final static native long NearestNeighbors_getAllInteractions(long jarg1, NearestNeighbors jarg1_, long jarg2, double jarg3);
  public final static native void delete_NearestNeighbors(long jarg1);
  public final static native long new_LearnerSGDEOnOff__SWIG_0(long jarg1, RegularGridConfiguration jarg1_, long jarg2, AdpativityConfiguration jarg2_, long jarg3, RegularizationConfiguration jarg3_, long jarg4, DensityEstimationConfiguration jarg4_, long jarg5, Dataset jarg5_, long jarg6, Dataset jarg6_, long jarg7, Dataset jarg7_, long jarg8, DataVector jarg8_, long jarg9, boolean jarg10, double jarg11, String jarg12);
  public final static native long new_LearnerSGDEOnOff__SWIG_1(long jarg1, RegularGridConfiguration jarg1_, long jarg2, AdpativityConfiguration jarg2_, long jarg3, RegularizationConfiguration jarg3_, long jarg4, DensityEstimationConfiguration jarg4_, long jarg5, Dataset jarg5_, long jarg6, Dataset jarg6_, long jarg7, Dataset jarg7_, long jarg8, DataVector jarg8_, long jarg9, boolean jarg10, double jarg11);
  public final static native void LearnerSGDEOnOff_train__SWIG_0(long jarg1, LearnerSGDEOnOff jarg1_, long jarg2, long jarg3, String jarg4, String jarg5, long jarg6, double jarg7, long jarg8, long jarg9, boolean jarg10, long jarg11);
  public final static native void LearnerSGDEOnOff_train__SWIG_1(long jarg1, LearnerSGDEOnOff jarg1_, long jarg2, Dataset jarg2_, boolean jarg3, long jarg4);
  public final static native void LearnerSGDEOnOff_train__SWIG_2(long jarg1, LearnerSGDEOnOff jarg1_, long jarg2, Dataset jarg2_, boolean jarg3);
  public final static native void LearnerSGDEOnOff_train__SWIG_3(long jarg1, LearnerSGDEOnOff jarg1_, long jarg2, Dataset jarg2_);
  public final static native void LearnerSGDEOnOff_train__SWIG_4(long jarg1, LearnerSGDEOnOff jarg1_, long jarg2, boolean jarg3, long jarg4);
  public final static native void LearnerSGDEOnOff_train__SWIG_5(long jarg1, LearnerSGDEOnOff jarg1_, long jarg2, boolean jarg3);
  public final static native void LearnerSGDEOnOff_train__SWIG_6(long jarg1, LearnerSGDEOnOff jarg1_, long jarg2);
  public final static native double LearnerSGDEOnOff_getAccuracy(long jarg1, LearnerSGDEOnOff jarg1_);
  public final static native void LearnerSGDEOnOff_predict__SWIG_0(long jarg1, LearnerSGDEOnOff jarg1_, long jarg2, DataMatrix jarg2_, long jarg3, DataVector jarg3_);
  public final static native int LearnerSGDEOnOff_predict__SWIG_1(long jarg1, LearnerSGDEOnOff jarg1_, long jarg2, DataVector jarg2_);
  public final static native double LearnerSGDEOnOff_getError(long jarg1, LearnerSGDEOnOff jarg1_, long jarg2, Dataset jarg2_);
  public final static native void LearnerSGDEOnOff_getAvgErrors(long jarg1, LearnerSGDEOnOff jarg1_, long jarg2, DataVector jarg2_);
  public final static native void LearnerSGDEOnOff_storeResults(long jarg1, LearnerSGDEOnOff jarg1_);
  public final static native void LearnerSGDEOnOff_getDensities(long jarg1, LearnerSGDEOnOff jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_);
  public final static native void LearnerSGDEOnOff_setCrossValidationParameters(long jarg1, LearnerSGDEOnOff jarg1_, int jarg2, double jarg3, double jarg4, long jarg5, DataMatrix jarg5_, long jarg6, DataMatrix jarg6_, boolean jarg7);
  public final static native long LearnerSGDEOnOff_getNumClasses(long jarg1, LearnerSGDEOnOff jarg1_);
  public final static native long LearnerSGDEOnOff_getDensityFunctions(long jarg1, LearnerSGDEOnOff jarg1_);
  public final static native void delete_LearnerSGDEOnOff(long jarg1);
  public final static native long new_LearnerSGD(long jarg1, RegularGridConfiguration jarg1_, long jarg2, AdpativityConfiguration jarg2_, long jarg3, DataMatrix jarg3_, long jarg4, DataVector jarg4_, long jarg5, DataMatrix jarg5_, long jarg6, DataVector jarg6_, long jarg7, DataMatrix jarg7_, long jarg8, DataVector jarg8_, double jarg9, double jarg10, long jarg11, boolean jarg12);
  public final static native void delete_LearnerSGD(long jarg1);
  public final static native void LearnerSGD_initialize(long jarg1, LearnerSGD jarg1_);
  public final static native void LearnerSGD_train(long jarg1, LearnerSGD jarg1_, long jarg2, String jarg3, String jarg4, long jarg5, double jarg6, long jarg7, long jarg8);
  public final static native double LearnerSGD_getAccuracy(long jarg1, LearnerSGD jarg1_, long jarg2, DataMatrix jarg2_, long jarg3, DataVector jarg3_, double jarg4);
  public final static native void LearnerSGD_storeResults(long jarg1, LearnerSGD jarg1_, long jarg2, DataMatrix jarg2_);
  public final static native void LearnerSGD_error_set(long jarg1, LearnerSGD jarg1_, double jarg2);
  public final static native double LearnerSGD_error_get(long jarg1, LearnerSGD jarg1_);
  public final static native void LearnerSGD_avgErrors_set(long jarg1, LearnerSGD jarg1_, long jarg2, DataVector jarg2_);
  public final static native long LearnerSGD_avgErrors_get(long jarg1, LearnerSGD jarg1_);
  public final static native long new_LearnerSVM(long jarg1, RegularGridConfiguration jarg1_, long jarg2, AdpativityConfiguration jarg2_, long jarg3, DataMatrix jarg3_, long jarg4, DataVector jarg4_, long jarg5, DataMatrix jarg5_, long jarg6, DataVector jarg6_, long jarg7, DataMatrix jarg7_, long jarg8, DataVector jarg8_);
  public final static native void delete_LearnerSVM(long jarg1);
  public final static native void LearnerSVM_initialize(long jarg1, LearnerSVM jarg1_, long jarg2);
  public final static native void LearnerSVM_train(long jarg1, LearnerSVM jarg1_, long jarg2, double jarg3, double jarg4, String jarg5, String jarg6, long jarg7, double jarg8, long jarg9, long jarg10);
  public final static native void LearnerSVM_storeResults(long jarg1, LearnerSVM jarg1_, long jarg2, DataMatrix jarg2_);
  public final static native double LearnerSVM_getAccuracy__SWIG_0(long jarg1, LearnerSVM jarg1_, long jarg2, DataMatrix jarg2_, long jarg3, DataVector jarg3_, double jarg4);
  public final static native double LearnerSVM_getAccuracy__SWIG_1(long jarg1, LearnerSVM jarg1_, long jarg2, DataVector jarg2_, double jarg3, long jarg4, DataVector jarg4_);
  public final static native void LearnerSVM_predict(long jarg1, LearnerSVM jarg1_, long jarg2, DataMatrix jarg2_, long jarg3, DataVector jarg3_);
  public final static native double LearnerSVM_getError(long jarg1, LearnerSVM jarg1_, long jarg2, DataMatrix jarg2_, long jarg3, DataVector jarg3_, String jarg4);
  public final static native void LearnerSVM_error_set(long jarg1, LearnerSVM jarg1_, double jarg2);
  public final static native double LearnerSVM_error_get(long jarg1, LearnerSVM jarg1_);
  public final static native void LearnerSVM_avgErrors_set(long jarg1, LearnerSVM jarg1_, long jarg2, DataVector jarg2_);
  public final static native long LearnerSVM_avgErrors_get(long jarg1, LearnerSVM jarg1_);
  public final static native long new_PrimalDualSVM(long jarg1, long jarg2, long jarg3, boolean jarg4);
  public final static native void delete_PrimalDualSVM(long jarg1);
  public final static native double PrimalDualSVM_predictRaw__SWIG_0(long jarg1, PrimalDualSVM jarg1_, long jarg2, Grid jarg2_, long jarg3, DataVector jarg3_, long jarg4, boolean jarg5);
  public final static native double PrimalDualSVM_predictRaw__SWIG_1(long jarg1, PrimalDualSVM jarg1_, long jarg2, Grid jarg2_, long jarg3, DataVector jarg3_, long jarg4);
  public final static native int PrimalDualSVM_predict(long jarg1, PrimalDualSVM jarg1_, long jarg2, Grid jarg2_, long jarg3, DataVector jarg3_, long jarg4);
  public final static native void PrimalDualSVM_add(long jarg1, PrimalDualSVM jarg1_, long jarg2, Grid jarg2_, long jarg3, DataVector jarg3_, double jarg4, long jarg5);
  public final static native void PrimalDualSVM_multiply(long jarg1, PrimalDualSVM jarg1_, double jarg2);
  public final static native void PrimalDualSVM_svs_set(long jarg1, PrimalDualSVM jarg1_, long jarg2, DataMatrix jarg2_);
  public final static native long PrimalDualSVM_svs_get(long jarg1, PrimalDualSVM jarg1_);
  public final static native void PrimalDualSVM_alphas_set(long jarg1, PrimalDualSVM jarg1_, long jarg2, DataVector jarg2_);
  public final static native long PrimalDualSVM_alphas_get(long jarg1, PrimalDualSVM jarg1_);
  public final static native void PrimalDualSVM_norms_set(long jarg1, PrimalDualSVM jarg1_, long jarg2, DataVector jarg2_);
  public final static native long PrimalDualSVM_norms_get(long jarg1, PrimalDualSVM jarg1_);
  public final static native void PrimalDualSVM_w_set(long jarg1, PrimalDualSVM jarg1_, long jarg2, DataVector jarg2_);
  public final static native long PrimalDualSVM_w_get(long jarg1, PrimalDualSVM jarg1_);
  public final static native void PrimalDualSVM_w2_set(long jarg1, PrimalDualSVM jarg1_, long jarg2, DataVector jarg2_);
  public final static native long PrimalDualSVM_w2_get(long jarg1, PrimalDualSVM jarg1_);
  public final static native void MultiGridRefinementFunctor_setGridIndex(long jarg1, MultiGridRefinementFunctor jarg1_, long jarg2);
  public final static native long MultiGridRefinementFunctor_getNumGrids(long jarg1, MultiGridRefinementFunctor jarg1_);
  public final static native void MultiGridRefinementFunctor_preComputeEvaluations(long jarg1, MultiGridRefinementFunctor jarg1_);
  public final static native void delete_MultiGridRefinementFunctor(long jarg1);
  public final static native long new_MultiSurplusRefinementFunctor__SWIG_0(long jarg1, long jarg2, long jarg3, boolean jarg4, double jarg5);
  public final static native long new_MultiSurplusRefinementFunctor__SWIG_1(long jarg1, long jarg2, long jarg3, boolean jarg4);
  public final static native long new_MultiSurplusRefinementFunctor__SWIG_2(long jarg1, long jarg2, long jarg3);
  public final static native long new_MultiSurplusRefinementFunctor__SWIG_3(long jarg1, long jarg2);
  public final static native double MultiSurplusRefinementFunctor_operatorParentheses(long jarg1, MultiSurplusRefinementFunctor jarg1_, long jarg2, GridStorage jarg2_, long jarg3);
  public final static native double MultiSurplusRefinementFunctor_start(long jarg1, MultiSurplusRefinementFunctor jarg1_);
  public final static native long MultiSurplusRefinementFunctor_getRefinementsNum(long jarg1, MultiSurplusRefinementFunctor jarg1_);
  public final static native double MultiSurplusRefinementFunctor_getRefinementThreshold(long jarg1, MultiSurplusRefinementFunctor jarg1_);
  public final static native void delete_MultiSurplusRefinementFunctor(long jarg1);
  public final static native void MultiSurplusRefinementFunctor_setGridIndex(long jarg1, MultiSurplusRefinementFunctor jarg1_, long jarg2);
  public final static native long MultiSurplusRefinementFunctor_getNumGrids(long jarg1, MultiSurplusRefinementFunctor jarg1_);
  public final static native long new_DataBasedRefinementFunctor__SWIG_0(long jarg1, long jarg2, long jarg3, DataMatrix jarg3_, long jarg4, DataVector jarg4_, long jarg5, boolean jarg6, long jarg7, DoubleVector jarg7_, double jarg8);
  public final static native long new_DataBasedRefinementFunctor__SWIG_1(long jarg1, long jarg2, long jarg3, DataMatrix jarg3_, long jarg4, DataVector jarg4_, long jarg5, boolean jarg6, long jarg7, DoubleVector jarg7_);
  public final static native long new_DataBasedRefinementFunctor__SWIG_2(long jarg1, long jarg2, long jarg3, DataMatrix jarg3_, long jarg4, DataVector jarg4_, long jarg5, boolean jarg6);
  public final static native long new_DataBasedRefinementFunctor__SWIG_3(long jarg1, long jarg2, long jarg3, DataMatrix jarg3_, long jarg4, DataVector jarg4_, long jarg5);
  public final static native long new_DataBasedRefinementFunctor__SWIG_4(long jarg1, long jarg2, long jarg3, DataMatrix jarg3_, long jarg4, DataVector jarg4_);
  public final static native double DataBasedRefinementFunctor_operatorParentheses(long jarg1, DataBasedRefinementFunctor jarg1_, long jarg2, GridStorage jarg2_, long jarg3);
  public final static native double DataBasedRefinementFunctor_start(long jarg1, DataBasedRefinementFunctor jarg1_);
  public final static native long DataBasedRefinementFunctor_getRefinementsNum(long jarg1, DataBasedRefinementFunctor jarg1_);
  public final static native double DataBasedRefinementFunctor_getRefinementThreshold(long jarg1, DataBasedRefinementFunctor jarg1_);
  public final static native void delete_DataBasedRefinementFunctor(long jarg1);
  public final static native void DataBasedRefinementFunctor_setGridIndex(long jarg1, DataBasedRefinementFunctor jarg1_, long jarg2);
  public final static native long DataBasedRefinementFunctor_getNumGrids(long jarg1, DataBasedRefinementFunctor jarg1_);
  public final static native void DataBasedRefinementFunctor_setData(long jarg1, DataBasedRefinementFunctor jarg1_, long jarg2, DataMatrix jarg2_, long jarg3, DataVector jarg3_);
  public final static native void DataBasedRefinementFunctor_computeH(long jarg1, DataBasedRefinementFunctor jarg1_);
  public final static native long DataBasedRefinementFunctor_getHk(long jarg1, DataBasedRefinementFunctor jarg1_, long jarg2);
  public final static native long new_GridPointBasedRefinementFunctor__SWIG_0(long jarg1, long jarg2, long jarg3, boolean jarg4, boolean jarg5, double jarg6);
  public final static native long new_GridPointBasedRefinementFunctor__SWIG_1(long jarg1, long jarg2, long jarg3, boolean jarg4, boolean jarg5);
  public final static native long new_GridPointBasedRefinementFunctor__SWIG_2(long jarg1, long jarg2, long jarg3, boolean jarg4);
  public final static native long new_GridPointBasedRefinementFunctor__SWIG_3(long jarg1, long jarg2, long jarg3);
  public final static native long new_GridPointBasedRefinementFunctor__SWIG_4(long jarg1, long jarg2);
  public final static native double GridPointBasedRefinementFunctor_operatorParentheses(long jarg1, GridPointBasedRefinementFunctor jarg1_, long jarg2, GridStorage jarg2_, long jarg3);
  public final static native double GridPointBasedRefinementFunctor_start(long jarg1, GridPointBasedRefinementFunctor jarg1_);
  public final static native long GridPointBasedRefinementFunctor_getRefinementsNum(long jarg1, GridPointBasedRefinementFunctor jarg1_);
  public final static native double GridPointBasedRefinementFunctor_getRefinementThreshold(long jarg1, GridPointBasedRefinementFunctor jarg1_);
  public final static native void delete_GridPointBasedRefinementFunctor(long jarg1);
  public final static native void GridPointBasedRefinementFunctor_setGridIndex(long jarg1, GridPointBasedRefinementFunctor jarg1_, long jarg2);
  public final static native long GridPointBasedRefinementFunctor_getNumGrids(long jarg1, GridPointBasedRefinementFunctor jarg1_);
  public final static native void GridPointBasedRefinementFunctor_preComputeEvaluations(long jarg1, GridPointBasedRefinementFunctor jarg1_);
  public final static native long new_ZeroCrossingRefinementFunctor__SWIG_0(long jarg1, long jarg2, long jarg3, boolean jarg4, boolean jarg5, double jarg6);
  public final static native long new_ZeroCrossingRefinementFunctor__SWIG_1(long jarg1, long jarg2, long jarg3, boolean jarg4, boolean jarg5);
  public final static native long new_ZeroCrossingRefinementFunctor__SWIG_2(long jarg1, long jarg2, long jarg3, boolean jarg4);
  public final static native long new_ZeroCrossingRefinementFunctor__SWIG_3(long jarg1, long jarg2, long jarg3);
  public final static native long new_ZeroCrossingRefinementFunctor__SWIG_4(long jarg1, long jarg2);
  public final static native double ZeroCrossingRefinementFunctor_operatorParentheses(long jarg1, ZeroCrossingRefinementFunctor jarg1_, long jarg2, GridStorage jarg2_, long jarg3);
  public final static native double ZeroCrossingRefinementFunctor_start(long jarg1, ZeroCrossingRefinementFunctor jarg1_);
  public final static native long ZeroCrossingRefinementFunctor_getRefinementsNum(long jarg1, ZeroCrossingRefinementFunctor jarg1_);
  public final static native double ZeroCrossingRefinementFunctor_getRefinementThreshold(long jarg1, ZeroCrossingRefinementFunctor jarg1_);
  public final static native void delete_ZeroCrossingRefinementFunctor(long jarg1);
  public final static native void ZeroCrossingRefinementFunctor_setGridIndex(long jarg1, ZeroCrossingRefinementFunctor jarg1_, long jarg2);
  public final static native long ZeroCrossingRefinementFunctor_getNumGrids(long jarg1, ZeroCrossingRefinementFunctor jarg1_);
  public final static native void ZeroCrossingRefinementFunctor_preComputeEvaluations(long jarg1, ZeroCrossingRefinementFunctor jarg1_);
  public final static native long SampleProvider___assign__(long jarg1, SampleProvider jarg1_, long jarg2, SampleProvider jarg2_);
  public final static native void delete_SampleProvider(long jarg1);
  public final static native long SampleProvider_clone(long jarg1, SampleProvider jarg1_);
  public final static native long SampleProvider_getNextSamples(long jarg1, SampleProvider jarg1_, long jarg2);
  public final static native long SampleProvider_getAllSamples(long jarg1, SampleProvider jarg1_);
  public final static native long SampleProvider_getDim(long jarg1, SampleProvider jarg1_);
  public final static native long FileSampleProvider_getNumSamples(long jarg1, FileSampleProvider jarg1_);
  public final static native void FileSampleProvider_readFile(long jarg1, FileSampleProvider jarg1_, String jarg2);
  public final static native void FileSampleProvider_readString(long jarg1, FileSampleProvider jarg1_, String jarg2);
  public final static native void delete_FileSampleProvider(long jarg1);
  public final static native long new_ArffFileSampleProvider();
  public final static native long ArffFileSampleProvider_clone(long jarg1, ArffFileSampleProvider jarg1_);
  public final static native long ArffFileSampleProvider_getNextSamples(long jarg1, ArffFileSampleProvider jarg1_, long jarg2);
  public final static native long ArffFileSampleProvider_getAllSamples(long jarg1, ArffFileSampleProvider jarg1_);
  public final static native long ArffFileSampleProvider_getDim(long jarg1, ArffFileSampleProvider jarg1_);
  public final static native long ArffFileSampleProvider_getNumSamples(long jarg1, ArffFileSampleProvider jarg1_);
  public final static native void ArffFileSampleProvider_readFile(long jarg1, ArffFileSampleProvider jarg1_, String jarg2);
  public final static native void ArffFileSampleProvider_readString(long jarg1, ArffFileSampleProvider jarg1_, String jarg2);
  public final static native void delete_ArffFileSampleProvider(long jarg1);
  public final static native long FileSampleDecorator___assign__(long jarg1, FileSampleDecorator jarg1_, long jarg2, FileSampleDecorator jarg2_);
  public final static native void delete_FileSampleDecorator(long jarg1);
  public final static native long FileSampleDecorator_getNextSamples(long jarg1, FileSampleDecorator jarg1_, long jarg2);
  public final static native long FileSampleDecorator_getAllSamples(long jarg1, FileSampleDecorator jarg1_);
  public final static native long FileSampleDecorator_getDim(long jarg1, FileSampleDecorator jarg1_);
  public final static native long FileSampleDecorator_getNumSamples(long jarg1, FileSampleDecorator jarg1_);
  public final static native void FileSampleDecorator_readFile(long jarg1, FileSampleDecorator jarg1_, String jarg2);
  public final static native void FileSampleDecorator_readString(long jarg1, FileSampleDecorator jarg1_, String jarg2);
  public final static native void DataSourceConfig_filePath_set(long jarg1, DataSourceConfig jarg1_, String jarg2);
  public final static native String DataSourceConfig_filePath_get(long jarg1, DataSourceConfig jarg1_);
  public final static native void DataSourceConfig_fileType_set(long jarg1, DataSourceConfig jarg1_, int jarg2);
  public final static native int DataSourceConfig_fileType_get(long jarg1, DataSourceConfig jarg1_);
  public final static native void DataSourceConfig_isCompressed_set(long jarg1, DataSourceConfig jarg1_, boolean jarg2);
  public final static native boolean DataSourceConfig_isCompressed_get(long jarg1, DataSourceConfig jarg1_);
  public final static native void DataSourceConfig_numBatches_set(long jarg1, DataSourceConfig jarg1_, long jarg2);
  public final static native long DataSourceConfig_numBatches_get(long jarg1, DataSourceConfig jarg1_);
  public final static native void DataSourceConfig_batchSize_set(long jarg1, DataSourceConfig jarg1_, long jarg2);
  public final static native long DataSourceConfig_batchSize_get(long jarg1, DataSourceConfig jarg1_);
  public final static native long new_DataSourceConfig();
  public final static native void delete_DataSourceConfig(long jarg1);
  public final static native long new_DataSource(long jarg1, DataSourceConfig jarg1_, long jarg2, SampleProvider jarg2_);
  public final static native long DataSource_getConfig(long jarg1, DataSource jarg1_);
  public final static native long DataSource_getNextSamples(long jarg1, DataSource jarg1_);
  public final static native long DataSource_getCurrentIteration(long jarg1, DataSource jarg1_);
  public final static native void delete_DataSource(long jarg1);
  public final static native long FitterConfiguration___assign__(long jarg1, FitterConfiguration jarg1_, long jarg2, FitterConfiguration jarg2_);
  public final static native void delete_FitterConfiguration(long jarg1);
  public final static native long FitterConfiguration_clone(long jarg1, FitterConfiguration jarg1_);
  public final static native long FitterConfiguration_getConstGridConfig(long jarg1, FitterConfiguration jarg1_);
  public final static native long FitterConfiguration_getConstRefinementConfig(long jarg1, FitterConfiguration jarg1_);
  public final static native long FitterConfiguration_getConstCrossvalidationConfig(long jarg1, FitterConfiguration jarg1_);
  public final static native long FitterConfiguration_getConstDensityEstimationConfig(long jarg1, FitterConfiguration jarg1_);
  public final static native long FitterConfiguration_getConstSolverRefineConfig(long jarg1, FitterConfiguration jarg1_);
  public final static native long FitterConfiguration_getConstSolverFinalConfig(long jarg1, FitterConfiguration jarg1_);
  public final static native long FitterConfiguration_getConstRegularizationConfig(long jarg1, FitterConfiguration jarg1_);
  public final static native long FitterConfiguration_getConstMultipleEvalConfig(long jarg1, FitterConfiguration jarg1_);
  public final static native long FitterConfiguration_getGridConfig(long jarg1, FitterConfiguration jarg1_);
  public final static native long FitterConfiguration_getRefinementConfig(long jarg1, FitterConfiguration jarg1_);
  public final static native long FitterConfiguration_getCrossvalidationConfig(long jarg1, FitterConfiguration jarg1_);
  public final static native long FitterConfiguration_getDensityEstimationConfig(long jarg1, FitterConfiguration jarg1_);
  public final static native long FitterConfiguration_getSolverRefineConfig(long jarg1, FitterConfiguration jarg1_);
  public final static native long FitterConfiguration_getSolverFinalConfig(long jarg1, FitterConfiguration jarg1_);
  public final static native long FitterConfiguration_getRegularizationConfig(long jarg1, FitterConfiguration jarg1_);
  public final static native long FitterConfiguration_getMultipleEvalConfig(long jarg1, FitterConfiguration jarg1_);
  public final static native void FitterConfiguration_setupDefaults(long jarg1, FitterConfiguration jarg1_);
  public final static native void FitterConfiguration_readParams(long jarg1, FitterConfiguration jarg1_, long jarg2);
  public final static native long new_FitterConfigurationLeastSquares();
  public final static native long FitterConfigurationLeastSquares_clone(long jarg1, FitterConfigurationLeastSquares jarg1_);
  public final static native void FitterConfigurationLeastSquares_setupDefaults(long jarg1, FitterConfigurationLeastSquares jarg1_);
  public final static native void FitterConfigurationLeastSquares_readParams(long jarg1, FitterConfigurationLeastSquares jarg1_, long jarg2);
  public final static native void delete_FitterConfigurationLeastSquares(long jarg1);
  public final static native int FitterTypeParser_parse(String jarg1);
  public final static native String FitterTypeParser_toString(int jarg1);
  public final static native long new_FitterTypeParser();
  public final static native void delete_FitterTypeParser(long jarg1);
  public final static native void delete_ModelFittingBase(long jarg1);
  public final static native void ModelFittingBase_fit(long jarg1, ModelFittingBase jarg1_, long jarg2, Dataset jarg2_);
  public final static native boolean ModelFittingBase_refine(long jarg1, ModelFittingBase jarg1_);
  public final static native void ModelFittingBase_update(long jarg1, ModelFittingBase jarg1_, long jarg2, Dataset jarg2_);
  public final static native double ModelFittingBase_evaluate__SWIG_0(long jarg1, ModelFittingBase jarg1_, long jarg2, DataVector jarg2_);
  public final static native void ModelFittingBase_evaluate__SWIG_1(long jarg1, ModelFittingBase jarg1_, long jarg2, DataMatrix jarg2_, long jarg3, DataVector jarg3_);
  public final static native long ModelFittingBase_getGrid(long jarg1, ModelFittingBase jarg1_);
  public final static native long ModelFittingBase_getSurpluses(long jarg1, ModelFittingBase jarg1_);
  public final static native long ModelFittingBase_getFitterConfiguration(long jarg1, ModelFittingBase jarg1_);
  public final static native long new_ModelFittingLeastSquares(long jarg1, FitterConfigurationLeastSquares jarg1_);
  public final static native void ModelFittingLeastSquares_fit(long jarg1, ModelFittingLeastSquares jarg1_, long jarg2, Dataset jarg2_);
  public final static native boolean ModelFittingLeastSquares_refine(long jarg1, ModelFittingLeastSquares jarg1_);
  public final static native void ModelFittingLeastSquares_update(long jarg1, ModelFittingLeastSquares jarg1_, long jarg2, Dataset jarg2_);
  public final static native double ModelFittingLeastSquares_evaluate__SWIG_0(long jarg1, ModelFittingLeastSquares jarg1_, long jarg2, DataVector jarg2_);
  public final static native void ModelFittingLeastSquares_evaluate__SWIG_1(long jarg1, ModelFittingLeastSquares jarg1_, long jarg2, DataMatrix jarg2_, long jarg3, DataVector jarg3_);
  public final static native void delete_ModelFittingLeastSquares(long jarg1);
  public final static native long Metric___assign__(long jarg1, Metric jarg1_, long jarg2, Metric jarg2_);
  public final static native void delete_Metric(long jarg1);
  public final static native long Metric_clone(long jarg1, Metric jarg1_);
  public final static native double Metric_measure(long jarg1, Metric jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_);
  public final static native long MSE_clone(long jarg1, MSE jarg1_);
  public final static native double MSE_measure(long jarg1, MSE jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_);
  public final static native long new_MSE();
  public final static native void delete_MSE(long jarg1);
  public final static native long ShufflingFunctor___assign__(long jarg1, ShufflingFunctor jarg1_, long jarg2, ShufflingFunctor jarg2_);
  public final static native void delete_ShufflingFunctor(long jarg1);
  public final static native long ShufflingFunctor_clone(long jarg1, ShufflingFunctor jarg1_);
  public final static native void ShufflingFunctor_shuffle(long jarg1, ShufflingFunctor jarg1_, long jarg2, Dataset jarg2_, long jarg3, SizeTVector jarg3_);
  public final static native long ShufflingFunctor_getSeed(long jarg1, ShufflingFunctor jarg1_);
  public final static native void ShufflingFunctor_setSeed(long jarg1, ShufflingFunctor jarg1_, long jarg2);
  public final static native long SequentialShufflingFunctor_clone(long jarg1, SequentialShufflingFunctor jarg1_);
  public final static native void SequentialShufflingFunctor_shuffle(long jarg1, SequentialShufflingFunctor jarg1_, long jarg2, Dataset jarg2_, long jarg3, SizeTVector jarg3_);
  public final static native long new_SequentialShufflingFunctor();
  public final static native void delete_SequentialShufflingFunctor(long jarg1);
  public final static native long RandomShufflingFunctor_clone(long jarg1, RandomShufflingFunctor jarg1_);
  public final static native void RandomShufflingFunctor_shuffle(long jarg1, RandomShufflingFunctor jarg1_, long jarg2, Dataset jarg2_, long jarg3, SizeTVector jarg3_);
  public final static native long new_RandomShufflingFunctor();
  public final static native void delete_RandomShufflingFunctor(long jarg1);
  public final static native void CrossValidationConfiguration_folds_set(long jarg1, CrossValidationConfiguration jarg1_, long jarg2);
  public final static native long CrossValidationConfiguration_folds_get(long jarg1, CrossValidationConfiguration jarg1_);
  public final static native void CrossValidationConfiguration_randomSeed_set(long jarg1, CrossValidationConfiguration jarg1_, long jarg2);
  public final static native long CrossValidationConfiguration_randomSeed_get(long jarg1, CrossValidationConfiguration jarg1_);
  public final static native void CrossValidationConfiguration_metric_set(long jarg1, CrossValidationConfiguration jarg1_, int jarg2);
  public final static native int CrossValidationConfiguration_metric_get(long jarg1, CrossValidationConfiguration jarg1_);
  public final static native void CrossValidationConfiguration_shuffling_set(long jarg1, CrossValidationConfiguration jarg1_, int jarg2);
  public final static native int CrossValidationConfiguration_shuffling_get(long jarg1, CrossValidationConfiguration jarg1_);
  public final static native long new_CrossValidationConfiguration();
  public final static native void delete_CrossValidationConfiguration(long jarg1);
  public final static native void TestingConfiguration_testingPortion_set(long jarg1, TestingConfiguration jarg1_, double jarg2);
  public final static native double TestingConfiguration_testingPortion_get(long jarg1, TestingConfiguration jarg1_);
  public final static native void TestingConfiguration_randomSeed_set(long jarg1, TestingConfiguration jarg1_, long jarg2);
  public final static native long TestingConfiguration_randomSeed_get(long jarg1, TestingConfiguration jarg1_);
  public final static native void TestingConfiguration_metric_set(long jarg1, TestingConfiguration jarg1_, int jarg2);
  public final static native int TestingConfiguration_metric_get(long jarg1, TestingConfiguration jarg1_);
  public final static native void TestingConfiguration_shuffling_set(long jarg1, TestingConfiguration jarg1_, int jarg2);
  public final static native int TestingConfiguration_shuffling_get(long jarg1, TestingConfiguration jarg1_);
  public final static native long new_TestingConfiguration();
  public final static native void delete_TestingConfiguration(long jarg1);
  public final static native int ScorerMetricTypeParser_parse(String jarg1);
  public final static native String ScorerMetricTypeParser_toString(int jarg1);
  public final static native long new_ScorerMetricTypeParser();
  public final static native void delete_ScorerMetricTypeParser(long jarg1);
  public final static native int ScorerShufflingTypeParser_parse(String jarg1);
  public final static native String ScorerShufflingTypeParser_toString(int jarg1);
  public final static native long new_ScorerShufflingTypeParser();
  public final static native void delete_ScorerShufflingTypeParser(long jarg1);
  public final static native long Scorer___assign__(long jarg1, Scorer jarg1_, long jarg2, Scorer jarg2_);
  public final static native void delete_Scorer(long jarg1);
  public final static native long Scorer_clone(long jarg1, Scorer jarg1_);
  public final static native double Scorer_calculateScore__SWIG_0(long jarg1, Scorer jarg1_, long jarg2, ModelFittingBase jarg2_, long jarg3, Dataset jarg3_, long jarg4);
  public final static native double Scorer_calculateScore__SWIG_1(long jarg1, Scorer jarg1_, long jarg2, ModelFittingBase jarg2_, long jarg3, Dataset jarg3_);
  public final static native long new_SplittingScorer__SWIG_0(long jarg1, Metric jarg1_, long jarg2, ShufflingFunctor jarg2_, long jarg3, double jarg4);
  public final static native long new_SplittingScorer__SWIG_1(long jarg1, Metric jarg1_, long jarg2, ShufflingFunctor jarg2_, long jarg3);
  public final static native long new_SplittingScorer__SWIG_2(long jarg1, Metric jarg1_, long jarg2, ShufflingFunctor jarg2_);
  public final static native long SplittingScorer_clone(long jarg1, SplittingScorer jarg1_);
  public final static native double SplittingScorer_calculateScore__SWIG_0(long jarg1, SplittingScorer jarg1_, long jarg2, ModelFittingBase jarg2_, long jarg3, Dataset jarg3_, long jarg4);
  public final static native double SplittingScorer_calculateScore__SWIG_1(long jarg1, SplittingScorer jarg1_, long jarg2, ModelFittingBase jarg2_, long jarg3, Dataset jarg3_);
  public final static native void delete_SplittingScorer(long jarg1);
  public final static native long new_CrossValidation__SWIG_0(long jarg1, Metric jarg1_, long jarg2, ShufflingFunctor jarg2_, long jarg3, long jarg4);
  public final static native long new_CrossValidation__SWIG_1(long jarg1, Metric jarg1_, long jarg2, ShufflingFunctor jarg2_, long jarg3);
  public final static native long new_CrossValidation__SWIG_2(long jarg1, Metric jarg1_, long jarg2, ShufflingFunctor jarg2_);
  public final static native long CrossValidation_clone(long jarg1, CrossValidation jarg1_);
  public final static native double CrossValidation_calculateScore__SWIG_0(long jarg1, CrossValidation jarg1_, long jarg2, ModelFittingBase jarg2_, long jarg3, Dataset jarg3_, long jarg4);
  public final static native double CrossValidation_calculateScore__SWIG_1(long jarg1, CrossValidation jarg1_, long jarg2, ModelFittingBase jarg2_, long jarg3, Dataset jarg3_);
  public final static native void delete_CrossValidation(long jarg1);
  public final static native long new_SparseGridMiner__SWIG_0(long jarg1, DataSource jarg1_, long jarg2, ModelFittingBase jarg2_, long jarg3, Scorer jarg3_);
  public final static native long new_SparseGridMiner__SWIG_1(long jarg1, SparseGridMiner jarg1_);
  public final static native void delete_SparseGridMiner(long jarg1);
  public final static native void SparseGridMiner_learn(long jarg1, SparseGridMiner jarg1_);
  public final static native int DensityEstimationTypeParser_parse(String jarg1);
  public final static native String DensityEstimationTypeParser_toString(int jarg1);
  public final static native long new_DensityEstimationTypeParser();
  public final static native void delete_DensityEstimationTypeParser(long jarg1);
  public final static native int GridTypeParser_parse(String jarg1);
  public final static native String GridTypeParser_toString(int jarg1);
  public final static native long new_GridTypeParser();
  public final static native void delete_GridTypeParser(long jarg1);
  public final static native int MatrixDecompositionTypeParser_parse(String jarg1);
  public final static native String MatrixDecompositionTypeParser_toString(int jarg1);
  public final static native long new_MatrixDecompositionTypeParser();
  public final static native void delete_MatrixDecompositionTypeParser(long jarg1);
  public final static native int RegularizationTypeParser_parse(String jarg1);
  public final static native String RegularizationTypeParser_toString(int jarg1);
  public final static native long new_RegularizationTypeParser();
  public final static native void delete_RegularizationTypeParser(long jarg1);
  public final static native int SLESolverTypeParser_parse(String jarg1);
  public final static native String SLESolverTypeParser_toString(int jarg1);
  public final static native long new_SLESolverTypeParser();
  public final static native void delete_SLESolverTypeParser(long jarg1);
  public final static native long new_DataSourceBuilder();
  public final static native long DataSourceBuilder_withPath(long jarg1, DataSourceBuilder jarg1_, String jarg2);
  public final static native long DataSourceBuilder_withCompression(long jarg1, DataSourceBuilder jarg1_, boolean jarg2);
  public final static native long DataSourceBuilder_withFileType(long jarg1, DataSourceBuilder jarg1_, int jarg2);
  public final static native long DataSourceBuilder_inBatches(long jarg1, DataSourceBuilder jarg1_, long jarg2);
  public final static native long DataSourceBuilder_withBatchSize(long jarg1, DataSourceBuilder jarg1_, long jarg2);
  public final static native long DataSourceBuilder_assemble(long jarg1, DataSourceBuilder jarg1_);
  public final static native long DataSourceBuilder_fromConfig(long jarg1, DataSourceBuilder jarg1_, long jarg2, DataSourceConfig jarg2_);
  public final static native void delete_DataSourceBuilder(long jarg1);
  public final static native void delete_ScorerFactory(long jarg1);
  public final static native long ScorerFactory_buildScorer(long jarg1, ScorerFactory jarg1_, long jarg2);
  public final static native long new_SplittingScorerFactory();
  public final static native long SplittingScorerFactory_buildScorer(long jarg1, SplittingScorerFactory jarg1_, long jarg2);
  public final static native void delete_SplittingScorerFactory(long jarg1);
  public final static native long new_CrossValidationScorerFactory();
  public final static native long CrossValidationScorerFactory_buildScorer(long jarg1, CrossValidationScorerFactory jarg1_, long jarg2);
  public final static native void delete_CrossValidationScorerFactory(long jarg1);
  public final static native void delete_MinerFactory(long jarg1);
  public final static native long MinerFactory_buildMiner(long jarg1, MinerFactory jarg1_, String jarg2);
  public final static native long new_LeastSquaresRegressionMinerFactory();
  public final static native long LeastSquaresRegressionMinerFactory_buildMiner(long jarg1, LeastSquaresRegressionMinerFactory jarg1_, String jarg2);
  public final static native void delete_LeastSquaresRegressionMinerFactory(long jarg1);
  public final static native void delete_OperationTest(long jarg1);
  public final static native double OperationTest_test(long jarg1, OperationTest jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataMatrix jarg3_, long jarg4, DataVector jarg4_);
  public final static native double OperationTest_testMSE(long jarg1, OperationTest jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataMatrix jarg3_, long jarg4, DataVector jarg4_);
  public final static native double OperationTest_testWithCharacteristicNumber(long jarg1, OperationTest jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataMatrix jarg3_, long jarg4, DataVector jarg4_, long jarg5, DataVector jarg5_);
  public final static native void OperationTest_calculateROCcurve(long jarg1, OperationTest jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataMatrix jarg3_, long jarg4, DataVector jarg4_, long jarg5, DataVector jarg5_, long jarg6, DataMatrix jarg6_);
  public final static native int OperationRegularizationDiagonal_HKMIX_get();
  public final static native int OperationRegularizationDiagonal_H0HKLAPLACE_get();
  public final static native int OperationRegularizationDiagonal_ISOTROPIC_PENALTY_get();
  public final static native int OperationRegularizationDiagonal_ANISOTROPIC_PENALTY_get();
  public final static native void delete_OperationRegularizationDiagonal(long jarg1);
  public final static native void OperationRegularizationDiagonal_mult(long jarg1, OperationRegularizationDiagonal jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_);
  public final static native void delete_OperationRosenblattTransformation(long jarg1);
  public final static native void OperationRosenblattTransformation_doTransformation__SWIG_0(long jarg1, OperationRosenblattTransformation jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataMatrix jarg3_, long jarg4, DataMatrix jarg4_);
  public final static native void OperationRosenblattTransformation_doTransformation__SWIG_1(long jarg1, OperationRosenblattTransformation jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataMatrix jarg3_, long jarg4, DataMatrix jarg4_, long jarg5);
  public final static native void delete_OperationInverseRosenblattTransformation(long jarg1);
  public final static native void OperationInverseRosenblattTransformation_doTransformation__SWIG_0(long jarg1, OperationInverseRosenblattTransformation jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataMatrix jarg3_, long jarg4, DataMatrix jarg4_);
  public final static native void OperationInverseRosenblattTransformation_doTransformation__SWIG_1(long jarg1, OperationInverseRosenblattTransformation jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataMatrix jarg3_, long jarg4, DataMatrix jarg4_, long jarg5);
  public final static native long new_OperationRosenblattTransformationKDE(long jarg1, GaussianKDE jarg1_);
  public final static native void delete_OperationRosenblattTransformationKDE(long jarg1);
  public final static native void OperationRosenblattTransformationKDE_doTransformation(long jarg1, OperationRosenblattTransformationKDE jarg1_, long jarg2, DataMatrix jarg2_, long jarg3, DataMatrix jarg3_);
  public final static native void OperationRosenblattTransformationKDE_doShuffledTransformation(long jarg1, OperationRosenblattTransformationKDE jarg1_, long jarg2, DataMatrix jarg2_, long jarg3, DataMatrix jarg3_);
  public final static native double OperationRosenblattTransformationKDE_doTransformation1D(long jarg1, OperationRosenblattTransformationKDE jarg1_, double jarg2, long jarg3, DataVector jarg3_, double jarg4, long jarg5, DataVector jarg5_);
  public final static native long new_OperationInverseRosenblattTransformationKDE__SWIG_0(long jarg1, GaussianKDE jarg1_, double jarg2, double jarg3);
  public final static native long new_OperationInverseRosenblattTransformationKDE__SWIG_1(long jarg1, GaussianKDE jarg1_, double jarg2);
  public final static native long new_OperationInverseRosenblattTransformationKDE__SWIG_2(long jarg1, GaussianKDE jarg1_);
  public final static native void delete_OperationInverseRosenblattTransformationKDE(long jarg1);
  public final static native void OperationInverseRosenblattTransformationKDE_doTransformation(long jarg1, OperationInverseRosenblattTransformationKDE jarg1_, long jarg2, DataMatrix jarg2_, long jarg3, DataMatrix jarg3_);
  public final static native void OperationInverseRosenblattTransformationKDE_doShuffledTransformation(long jarg1, OperationInverseRosenblattTransformationKDE jarg1_, long jarg2, DataMatrix jarg2_, long jarg3, DataMatrix jarg3_);
  public final static native double OperationInverseRosenblattTransformationKDE_doTransformation1D(long jarg1, OperationInverseRosenblattTransformationKDE jarg1_, double jarg2, long jarg3, DataVector jarg3_, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, long jarg9, DataVector jarg9_);
  public final static native double OperationInverseRosenblattTransformationKDE_getMaxInversionError(long jarg1, OperationInverseRosenblattTransformationKDE jarg1_);
  public final static native long new_OperationDensityMarginalizeKDE(long jarg1, GaussianKDE jarg1_);
  public final static native void delete_OperationDensityMarginalizeKDE(long jarg1);
  public final static native void OperationDensityMarginalizeKDE_doMarginalize__SWIG_0(long jarg1, OperationDensityMarginalizeKDE jarg1_, long jarg2, long jarg3, GaussianKDE jarg3_);
  public final static native void OperationDensityMarginalizeKDE_doMarginalize__SWIG_1(long jarg1, OperationDensityMarginalizeKDE jarg1_, long jarg2, SizeTVector jarg2_, long jarg3, GaussianKDE jarg3_);
  public final static native void OperationDensityMarginalizeKDE_margToDimX(long jarg1, OperationDensityMarginalizeKDE jarg1_, long jarg2, long jarg3, GaussianKDE jarg3_);
  public final static native void OperationDensityMarginalizeKDE_margToDimXs(long jarg1, OperationDensityMarginalizeKDE jarg1_, long jarg2, SizeTVector jarg2_, long jarg3, GaussianKDE jarg3_);
  public final static native long new_OperationDensityConditionalKDE(long jarg1, GaussianKDE jarg1_);
  public final static native void delete_OperationDensityConditionalKDE(long jarg1);
  public final static native void OperationDensityConditionalKDE_doConditional__SWIG_0(long jarg1, OperationDensityConditionalKDE jarg1_, long jarg2, double jarg3, long jarg4, GaussianKDE jarg4_);
  public final static native void OperationDensityConditionalKDE_doConditional__SWIG_1(long jarg1, OperationDensityConditionalKDE jarg1_, long jarg2, SizeTVector jarg2_, long jarg3, DataVector jarg3_, long jarg4, GaussianKDE jarg4_);
  public final static native void OperationDensityConditionalKDE_condToDimX(long jarg1, OperationDensityConditionalKDE jarg1_, long jarg2, long jarg3, DataVector jarg3_, long jarg4, GaussianKDE jarg4_);
  public final static native void OperationDensityConditionalKDE_condToDimXs(long jarg1, OperationDensityConditionalKDE jarg1_, long jarg2, SizeTVector jarg2_, long jarg3, DataVector jarg3_, long jarg4, GaussianKDE jarg4_);
  public final static native void Random_seed__SWIG_0(java.math.BigInteger jarg1);
  public final static native void Random_seed__SWIG_1();
  public final static native java.math.BigInteger Random_random_uint64();
  public final static native double Random_random_double();
  public final static native long new_Random();
  public final static native void delete_Random(long jarg1);
  public final static native long new_SampleGenerator__SWIG_0(long jarg1, java.math.BigInteger jarg2);
  public final static native long new_SampleGenerator__SWIG_1(long jarg1);
  public final static native void delete_SampleGenerator(long jarg1);
  public final static native void SampleGenerator_getSample(long jarg1, SampleGenerator jarg1_, long jarg2, DataVector jarg2_);
  public final static native void SampleGenerator_getSamples(long jarg1, SampleGenerator jarg1_, long jarg2, DataMatrix jarg2_);
  public final static native long SampleGenerator_getDimensions(long jarg1, SampleGenerator jarg1_);
  public final static native void SampleGenerator_setDimensions(long jarg1, SampleGenerator jarg1_, long jarg2);
  public final static native long new_NaiveSampleGenerator__SWIG_0(long jarg1, java.math.BigInteger jarg2);
  public final static native long new_NaiveSampleGenerator__SWIG_1(long jarg1);
  public final static native void delete_NaiveSampleGenerator(long jarg1);
  public final static native void NaiveSampleGenerator_getSample(long jarg1, NaiveSampleGenerator jarg1_, long jarg2, DataVector jarg2_);
  public final static native long new_LatinHypercubeSampleGenerator__SWIG_0(long jarg1, long jarg2, java.math.BigInteger jarg3);
  public final static native long new_LatinHypercubeSampleGenerator__SWIG_1(long jarg1, long jarg2);
  public final static native void delete_LatinHypercubeSampleGenerator(long jarg1);
  public final static native void LatinHypercubeSampleGenerator_getSample(long jarg1, LatinHypercubeSampleGenerator jarg1_, long jarg2, DataVector jarg2_);
  public final static native long new_StratifiedSampleGenerator__SWIG_0(long jarg1, SizeTVector jarg1_, java.math.BigInteger jarg2);
  public final static native long new_StratifiedSampleGenerator__SWIG_1(long jarg1, SizeTVector jarg1_);
  public final static native void delete_StratifiedSampleGenerator(long jarg1);
  public final static native void StratifiedSampleGenerator_getSample(long jarg1, StratifiedSampleGenerator jarg1_, long jarg2, DataVector jarg2_);
  public final static native long new_HaltonSampleGenerator__SWIG_0(long jarg1, java.math.BigInteger jarg2);
  public final static native long new_HaltonSampleGenerator__SWIG_1(long jarg1);
  public final static native void delete_HaltonSampleGenerator(long jarg1);
  public final static native void HaltonSampleGenerator_getSample(long jarg1, HaltonSampleGenerator jarg1_, long jarg2, DataVector jarg2_);
  public final static native long createOperationQuadratureMCAdvanced__SWIG_0(long jarg1, Grid jarg1_, long jarg2, java.math.BigInteger jarg3);
  public final static native long createOperationQuadratureMCAdvanced__SWIG_1(long jarg1, Grid jarg1_, long jarg2);
  public final static native void omp_set_num_threads(int jarg1);
  public final static native boolean ARMADILLO_ENABLED_get();
  public final static native boolean EIGEN_ENABLED_get();
  public final static native boolean GMMPP_ENABLED_get();
  public final static native boolean UMFPACK_ENABLED_get();
  public final static native long OptRNG_getInstance();
  public final static native double OptRNG_getUniformRN__SWIG_0(long jarg1, OptRNG jarg1_, double jarg2, double jarg3);
  public final static native double OptRNG_getUniformRN__SWIG_1(long jarg1, OptRNG jarg1_, double jarg2);
  public final static native double OptRNG_getUniformRN__SWIG_2(long jarg1, OptRNG jarg1_);
  public final static native void OptRNG_getUniformRV__SWIG_0(long jarg1, OptRNG jarg1_, long jarg2, DataVector jarg2_, double jarg3, double jarg4);
  public final static native void OptRNG_getUniformRV__SWIG_1(long jarg1, OptRNG jarg1_, long jarg2, DataVector jarg2_, double jarg3);
  public final static native void OptRNG_getUniformRV__SWIG_2(long jarg1, OptRNG jarg1_, long jarg2, DataVector jarg2_);
  public final static native long OptRNG_getUniformIndexRN(long jarg1, OptRNG jarg1_, long jarg2);
  public final static native double OptRNG_getGaussianRN__SWIG_0(long jarg1, OptRNG jarg1_, double jarg2, double jarg3);
  public final static native double OptRNG_getGaussianRN__SWIG_1(long jarg1, OptRNG jarg1_, double jarg2);
  public final static native double OptRNG_getGaussianRN__SWIG_2(long jarg1, OptRNG jarg1_);
  public final static native void OptRNG_getGaussianRV__SWIG_0(long jarg1, OptRNG jarg1_, long jarg2, DataVector jarg2_, double jarg3, double jarg4);
  public final static native void OptRNG_getGaussianRV__SWIG_1(long jarg1, OptRNG jarg1_, long jarg2, DataVector jarg2_, double jarg3);
  public final static native void OptRNG_getGaussianRV__SWIG_2(long jarg1, OptRNG jarg1_, long jarg2, DataVector jarg2_);
  public final static native long OptRNG_getSeed(long jarg1, OptRNG jarg1_);
  public final static native void OptRNG_setSeed__SWIG_0(long jarg1, OptRNG jarg1_);
  public final static native void OptRNG_setSeed__SWIG_1(long jarg1, OptRNG jarg1_, long jarg2);
  public final static native void delete_OptRNG(long jarg1);
  public final static native long new_OptScalarFunction(long jarg1);
  public final static native void delete_OptScalarFunction(long jarg1);
  public final static native double OptScalarFunction_eval(long jarg1, OptScalarFunction jarg1_, long jarg2, DataVector jarg2_);
  public final static native long OptScalarFunction_getNumberOfParameters(long jarg1, OptScalarFunction jarg1_);
  public final static native void OptScalarFunction_clone(long jarg1, OptScalarFunction jarg1_, long jarg2);
  public final static native void OptScalarFunction_director_connect(OptScalarFunction obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void OptScalarFunction_change_ownership(OptScalarFunction obj, long cptr, boolean take_or_release);
  public final static native long new_OptScalarFunctionGradient(long jarg1);
  public final static native void delete_OptScalarFunctionGradient(long jarg1);
  public final static native double OptScalarFunctionGradient_eval(long jarg1, OptScalarFunctionGradient jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_);
  public final static native long OptScalarFunctionGradient_getNumberOfParameters(long jarg1, OptScalarFunctionGradient jarg1_);
  public final static native void OptScalarFunctionGradient_clone(long jarg1, OptScalarFunctionGradient jarg1_, long jarg2);
  public final static native void OptScalarFunctionGradient_director_connect(OptScalarFunctionGradient obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void OptScalarFunctionGradient_change_ownership(OptScalarFunctionGradient obj, long cptr, boolean take_or_release);
  public final static native long new_OptScalarFunctionHessian(long jarg1);
  public final static native void delete_OptScalarFunctionHessian(long jarg1);
  public final static native double OptScalarFunctionHessian_eval(long jarg1, OptScalarFunctionHessian jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_, long jarg4, DataMatrix jarg4_);
  public final static native long OptScalarFunctionHessian_getNumberOfParameters(long jarg1, OptScalarFunctionHessian jarg1_);
  public final static native void OptScalarFunctionHessian_clone(long jarg1, OptScalarFunctionHessian jarg1_, long jarg2);
  public final static native void OptScalarFunctionHessian_director_connect(OptScalarFunctionHessian obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void OptScalarFunctionHessian_change_ownership(OptScalarFunctionHessian obj, long cptr, boolean take_or_release);
  public final static native long new_OptInterpolantScalarFunction(long jarg1, Grid jarg1_, long jarg2, DataVector jarg2_);
  public final static native void delete_OptInterpolantScalarFunction(long jarg1);
  public final static native double OptInterpolantScalarFunction_eval(long jarg1, OptInterpolantScalarFunction jarg1_, long jarg2, DataVector jarg2_);
  public final static native void OptInterpolantScalarFunction_clone(long jarg1, OptInterpolantScalarFunction jarg1_, long jarg2);
  public final static native long OptInterpolantScalarFunction_getAlpha(long jarg1, OptInterpolantScalarFunction jarg1_);
  public final static native void OptInterpolantScalarFunction_setAlpha(long jarg1, OptInterpolantScalarFunction jarg1_, long jarg2, DataVector jarg2_);
  public final static native long new_OptInterpolantScalarFunctionGradient(long jarg1, Grid jarg1_, long jarg2, DataVector jarg2_);
  public final static native void delete_OptInterpolantScalarFunctionGradient(long jarg1);
  public final static native double OptInterpolantScalarFunctionGradient_eval(long jarg1, OptInterpolantScalarFunctionGradient jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_);
  public final static native void OptInterpolantScalarFunctionGradient_clone(long jarg1, OptInterpolantScalarFunctionGradient jarg1_, long jarg2);
  public final static native long OptInterpolantScalarFunctionGradient_getAlpha(long jarg1, OptInterpolantScalarFunctionGradient jarg1_);
  public final static native void OptInterpolantScalarFunctionGradient_setAlpha(long jarg1, OptInterpolantScalarFunctionGradient jarg1_, long jarg2, DataVector jarg2_);
  public final static native long new_OptInterpolantScalarFunctionHessian(long jarg1, Grid jarg1_, long jarg2, DataVector jarg2_);
  public final static native void delete_OptInterpolantScalarFunctionHessian(long jarg1);
  public final static native double OptInterpolantScalarFunctionHessian_eval(long jarg1, OptInterpolantScalarFunctionHessian jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_, long jarg4, DataMatrix jarg4_);
  public final static native void OptInterpolantScalarFunctionHessian_clone(long jarg1, OptInterpolantScalarFunctionHessian jarg1_, long jarg2);
  public final static native long OptInterpolantScalarFunctionHessian_getAlpha(long jarg1, OptInterpolantScalarFunctionHessian jarg1_);
  public final static native void OptInterpolantScalarFunctionHessian_setAlpha(long jarg1, OptInterpolantScalarFunctionHessian jarg1_, long jarg2, DataVector jarg2_);
  public final static native long new_OptVectorFunction(long jarg1, long jarg2);
  public final static native void delete_OptVectorFunction(long jarg1);
  public final static native void OptVectorFunction_eval(long jarg1, OptVectorFunction jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_);
  public final static native long OptVectorFunction_getNumberOfParameters(long jarg1, OptVectorFunction jarg1_);
  public final static native long OptVectorFunction_getNumberOfComponents(long jarg1, OptVectorFunction jarg1_);
  public final static native void OptVectorFunction_clone(long jarg1, OptVectorFunction jarg1_, long jarg2);
  public final static native void OptVectorFunction_director_connect(OptVectorFunction obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void OptVectorFunction_change_ownership(OptVectorFunction obj, long cptr, boolean take_or_release);
  public final static native long new_OptVectorFunctionGradient(long jarg1, long jarg2);
  public final static native void delete_OptVectorFunctionGradient(long jarg1);
  public final static native void OptVectorFunctionGradient_eval(long jarg1, OptVectorFunctionGradient jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_, long jarg4, DataMatrix jarg4_);
  public final static native long OptVectorFunctionGradient_getNumberOfParameters(long jarg1, OptVectorFunctionGradient jarg1_);
  public final static native long OptVectorFunctionGradient_getNumberOfComponents(long jarg1, OptVectorFunctionGradient jarg1_);
  public final static native void OptVectorFunctionGradient_clone(long jarg1, OptVectorFunctionGradient jarg1_, long jarg2);
  public final static native void OptVectorFunctionGradient_director_connect(OptVectorFunctionGradient obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void OptVectorFunctionGradient_change_ownership(OptVectorFunctionGradient obj, long cptr, boolean take_or_release);
  public final static native long new_OptVectorFunctionHessian(long jarg1, long jarg2);
  public final static native void delete_OptVectorFunctionHessian(long jarg1);
  public final static native void OptVectorFunctionHessian_eval(long jarg1, OptVectorFunctionHessian jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_, long jarg4, DataMatrix jarg4_, long jarg5);
  public final static native long OptVectorFunctionHessian_getNumberOfParameters(long jarg1, OptVectorFunctionHessian jarg1_);
  public final static native long OptVectorFunctionHessian_getNumberOfComponents(long jarg1, OptVectorFunctionHessian jarg1_);
  public final static native void OptVectorFunctionHessian_clone(long jarg1, OptVectorFunctionHessian jarg1_, long jarg2);
  public final static native void OptVectorFunctionHessian_director_connect(OptVectorFunctionHessian obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void OptVectorFunctionHessian_change_ownership(OptVectorFunctionHessian obj, long cptr, boolean take_or_release);
  public final static native long new_OptInterpolantVectorFunction(long jarg1, Grid jarg1_, long jarg2, DataMatrix jarg2_);
  public final static native void delete_OptInterpolantVectorFunction(long jarg1);
  public final static native void OptInterpolantVectorFunction_eval(long jarg1, OptInterpolantVectorFunction jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_);
  public final static native void OptInterpolantVectorFunction_clone(long jarg1, OptInterpolantVectorFunction jarg1_, long jarg2);
  public final static native long OptInterpolantVectorFunction_getAlpha(long jarg1, OptInterpolantVectorFunction jarg1_);
  public final static native void OptInterpolantVectorFunction_setAlpha(long jarg1, OptInterpolantVectorFunction jarg1_, long jarg2, DataMatrix jarg2_);
  public final static native long new_OptInterpolantVectorFunctionGradient(long jarg1, Grid jarg1_, long jarg2, DataMatrix jarg2_);
  public final static native void delete_OptInterpolantVectorFunctionGradient(long jarg1);
  public final static native void OptInterpolantVectorFunctionGradient_eval(long jarg1, OptInterpolantVectorFunctionGradient jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_, long jarg4, DataMatrix jarg4_);
  public final static native void OptInterpolantVectorFunctionGradient_clone(long jarg1, OptInterpolantVectorFunctionGradient jarg1_, long jarg2);
  public final static native long OptInterpolantVectorFunctionGradient_getAlpha(long jarg1, OptInterpolantVectorFunctionGradient jarg1_);
  public final static native void OptInterpolantVectorFunctionGradient_setAlpha(long jarg1, OptInterpolantVectorFunctionGradient jarg1_, long jarg2, DataMatrix jarg2_);
  public final static native long new_OptInterpolantVectorFunctionHessian(long jarg1, Grid jarg1_, long jarg2, DataMatrix jarg2_);
  public final static native void delete_OptInterpolantVectorFunctionHessian(long jarg1);
  public final static native void OptInterpolantVectorFunctionHessian_eval(long jarg1, OptInterpolantVectorFunctionHessian jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_, long jarg4, DataMatrix jarg4_, long jarg5);
  public final static native void OptInterpolantVectorFunctionHessian_clone(long jarg1, OptInterpolantVectorFunctionHessian jarg1_, long jarg2);
  public final static native long OptInterpolantVectorFunctionHessian_getAlpha(long jarg1, OptInterpolantVectorFunctionHessian jarg1_);
  public final static native void OptInterpolantVectorFunctionHessian_setAlpha(long jarg1, OptInterpolantVectorFunctionHessian jarg1_, long jarg2, DataMatrix jarg2_);
  public final static native long new_OptComponentScalarFunction__SWIG_0(long jarg1, OptScalarFunction jarg1_, long jarg2, DoubleVector jarg2_);
  public final static native long new_OptComponentScalarFunction__SWIG_1(long jarg1, OptScalarFunction jarg1_);
  public final static native long new_OptComponentScalarFunction__SWIG_2(long jarg1, OptVectorFunction jarg1_, long jarg2, long jarg3, DoubleVector jarg3_);
  public final static native long new_OptComponentScalarFunction__SWIG_3(long jarg1, OptVectorFunction jarg1_, long jarg2);
  public final static native void delete_OptComponentScalarFunction(long jarg1);
  public final static native double OptComponentScalarFunction_eval(long jarg1, OptComponentScalarFunction jarg1_, long jarg2, DataVector jarg2_);
  public final static native void OptComponentScalarFunction_clone(long jarg1, OptComponentScalarFunction jarg1_, long jarg2);
  public final static native long new_OptComponentScalarFunctionGradient__SWIG_0(long jarg1, OptScalarFunctionGradient jarg1_, long jarg2, DoubleVector jarg2_);
  public final static native long new_OptComponentScalarFunctionGradient__SWIG_1(long jarg1, OptScalarFunctionGradient jarg1_);
  public final static native long new_OptComponentScalarFunctionGradient__SWIG_2(long jarg1, OptVectorFunctionGradient jarg1_, long jarg2, long jarg3, DoubleVector jarg3_);
  public final static native long new_OptComponentScalarFunctionGradient__SWIG_3(long jarg1, OptVectorFunctionGradient jarg1_, long jarg2);
  public final static native void delete_OptComponentScalarFunctionGradient(long jarg1);
  public final static native double OptComponentScalarFunctionGradient_eval(long jarg1, OptComponentScalarFunctionGradient jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_);
  public final static native void OptComponentScalarFunctionGradient_clone(long jarg1, OptComponentScalarFunctionGradient jarg1_, long jarg2);
  public final static native long new_OptComponentScalarFunctionHessian__SWIG_0(long jarg1, OptScalarFunctionHessian jarg1_, long jarg2, DoubleVector jarg2_);
  public final static native long new_OptComponentScalarFunctionHessian__SWIG_1(long jarg1, OptScalarFunctionHessian jarg1_);
  public final static native long new_OptComponentScalarFunctionHessian__SWIG_2(long jarg1, OptVectorFunctionHessian jarg1_, long jarg2, long jarg3, DoubleVector jarg3_);
  public final static native long new_OptComponentScalarFunctionHessian__SWIG_3(long jarg1, OptVectorFunctionHessian jarg1_, long jarg2);
  public final static native void delete_OptComponentScalarFunctionHessian(long jarg1);
  public final static native double OptComponentScalarFunctionHessian_eval(long jarg1, OptComponentScalarFunctionHessian jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_, long jarg4, DataMatrix jarg4_);
  public final static native void OptComponentScalarFunctionHessian_clone(long jarg1, OptComponentScalarFunctionHessian jarg1_, long jarg2);
  public final static native long new_OptWrapperScalarFunction(long jarg1, long jarg2);
  public final static native void delete_OptWrapperScalarFunction(long jarg1);
  public final static native double OptWrapperScalarFunction_eval(long jarg1, OptWrapperScalarFunction jarg1_, long jarg2, DataVector jarg2_);
  public final static native void OptWrapperScalarFunction_clone(long jarg1, OptWrapperScalarFunction jarg1_, long jarg2);
  public final static native long new_OptWrapperScalarFunctionGradient(long jarg1, long jarg2);
  public final static native void delete_OptWrapperScalarFunctionGradient(long jarg1);
  public final static native double OptWrapperScalarFunctionGradient_eval(long jarg1, OptWrapperScalarFunctionGradient jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_);
  public final static native void OptWrapperScalarFunctionGradient_clone(long jarg1, OptWrapperScalarFunctionGradient jarg1_, long jarg2);
  public final static native long new_OptWrapperScalarFunctionHessian(long jarg1, long jarg2);
  public final static native void delete_OptWrapperScalarFunctionHessian(long jarg1);
  public final static native double OptWrapperScalarFunctionHessian_eval(long jarg1, OptWrapperScalarFunctionHessian jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_, long jarg4, DataMatrix jarg4_);
  public final static native void OptWrapperScalarFunctionHessian_clone(long jarg1, OptWrapperScalarFunctionHessian jarg1_, long jarg2);
  public final static native long new_OptWrapperVectorFunction(long jarg1, long jarg2, long jarg3);
  public final static native void delete_OptWrapperVectorFunction(long jarg1);
  public final static native void OptWrapperVectorFunction_eval(long jarg1, OptWrapperVectorFunction jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_);
  public final static native void OptWrapperVectorFunction_clone(long jarg1, OptWrapperVectorFunction jarg1_, long jarg2);
  public final static native long new_OptWrapperVectorFunctionGradient(long jarg1, long jarg2, long jarg3);
  public final static native void delete_OptWrapperVectorFunctionGradient(long jarg1);
  public final static native void OptWrapperVectorFunctionGradient_eval(long jarg1, OptWrapperVectorFunctionGradient jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_, long jarg4, DataMatrix jarg4_);
  public final static native void OptWrapperVectorFunctionGradient_clone(long jarg1, OptWrapperVectorFunctionGradient jarg1_, long jarg2);
  public final static native long new_OptWrapperVectorFunctionHessian(long jarg1, long jarg2, long jarg3);
  public final static native void delete_OptWrapperVectorFunctionHessian(long jarg1);
  public final static native void OptWrapperVectorFunctionHessian_eval(long jarg1, OptWrapperVectorFunctionHessian jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_, long jarg4, DataMatrix jarg4_, long jarg5);
  public final static native void OptWrapperVectorFunctionHessian_clone(long jarg1, OptWrapperVectorFunctionHessian jarg1_, long jarg2);
  public final static native long OptEmptyVectorFunction_getInstance();
  public final static native void delete_OptEmptyVectorFunction(long jarg1);
  public final static native long OptEmptyVectorFunctionGradient_getInstance();
  public final static native void delete_OptEmptyVectorFunctionGradient(long jarg1);
  public final static native long OptHashRefinementMultiple_getNumberOfRefinablePoints(long jarg1, OptHashRefinementMultiple jarg1_, long jarg2, GridStorage jarg2_);
  public final static native void OptHashRefinementMultiple_refineGridpoint1D(long jarg1, OptHashRefinementMultiple jarg1_, long jarg2, GridStorage jarg2_, long jarg3, GridPoint jarg3_, long jarg4);
  public final static native long new_OptHashRefinementMultiple();
  public final static native void delete_OptHashRefinementMultiple(long jarg1);
  public final static native long new_OptIterativeGridGenerator(long jarg1, OptScalarFunction jarg1_, long jarg2, Grid jarg2_, long jarg3);
  public final static native void delete_OptIterativeGridGenerator(long jarg1);
  public final static native boolean OptIterativeGridGenerator_generate(long jarg1, OptIterativeGridGenerator jarg1_);
  public final static native long OptIterativeGridGenerator_getGrid(long jarg1, OptIterativeGridGenerator jarg1_);
  public final static native long OptIterativeGridGenerator_getFunctionValues(long jarg1, OptIterativeGridGenerator jarg1_);
  public final static native void OptIterativeGridGenerator_director_connect(OptIterativeGridGenerator obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void OptIterativeGridGenerator_change_ownership(OptIterativeGridGenerator obj, long cptr, boolean take_or_release);
  public final static native double OptIterativeGridGeneratorLinearSurplus_DEFAULT_ADAPTIVITY_get();
  public final static native long OptIterativeGridGeneratorLinearSurplus_DEFAULT_INITIAL_LEVEL_get();
  public final static native long new_OptIterativeGridGeneratorLinearSurplus__SWIG_0(long jarg1, OptScalarFunction jarg1_, long jarg2, Grid jarg2_, long jarg3, double jarg4, long jarg5);
  public final static native long new_OptIterativeGridGeneratorLinearSurplus__SWIG_1(long jarg1, OptScalarFunction jarg1_, long jarg2, Grid jarg2_, long jarg3, double jarg4);
  public final static native long new_OptIterativeGridGeneratorLinearSurplus__SWIG_2(long jarg1, OptScalarFunction jarg1_, long jarg2, Grid jarg2_, long jarg3);
  public final static native void delete_OptIterativeGridGeneratorLinearSurplus(long jarg1);
  public final static native boolean OptIterativeGridGeneratorLinearSurplus_generate(long jarg1, OptIterativeGridGeneratorLinearSurplus jarg1_);
  public final static native double OptIterativeGridGeneratorLinearSurplus_getAdaptivity(long jarg1, OptIterativeGridGeneratorLinearSurplus jarg1_);
  public final static native void OptIterativeGridGeneratorLinearSurplus_setAdaptivity(long jarg1, OptIterativeGridGeneratorLinearSurplus jarg1_, double jarg2);
  public final static native long OptIterativeGridGeneratorLinearSurplus_getInitialLevel(long jarg1, OptIterativeGridGeneratorLinearSurplus jarg1_);
  public final static native void OptIterativeGridGeneratorLinearSurplus_setInitialLevel(long jarg1, OptIterativeGridGeneratorLinearSurplus jarg1_, long jarg2);
  public final static native double OptIterativeGridGeneratorRitterNovak_DEFAULT_ADAPTIVITY_get();
  public final static native long OptIterativeGridGeneratorRitterNovak_DEFAULT_INITIAL_LEVEL_get();
  public final static native long OptIterativeGridGeneratorRitterNovak_DEFAULT_MAX_LEVEL_get();
  public final static native long new_OptIterativeGridGeneratorRitterNovak__SWIG_0(long jarg1, OptScalarFunction jarg1_, long jarg2, Grid jarg2_, long jarg3, double jarg4, long jarg5, long jarg6, int jarg7);
  public final static native long new_OptIterativeGridGeneratorRitterNovak__SWIG_1(long jarg1, OptScalarFunction jarg1_, long jarg2, Grid jarg2_, long jarg3, double jarg4, long jarg5, long jarg6);
  public final static native long new_OptIterativeGridGeneratorRitterNovak__SWIG_2(long jarg1, OptScalarFunction jarg1_, long jarg2, Grid jarg2_, long jarg3, double jarg4, long jarg5);
  public final static native long new_OptIterativeGridGeneratorRitterNovak__SWIG_3(long jarg1, OptScalarFunction jarg1_, long jarg2, Grid jarg2_, long jarg3, double jarg4);
  public final static native long new_OptIterativeGridGeneratorRitterNovak__SWIG_4(long jarg1, OptScalarFunction jarg1_, long jarg2, Grid jarg2_, long jarg3);
  public final static native void delete_OptIterativeGridGeneratorRitterNovak(long jarg1);
  public final static native boolean OptIterativeGridGeneratorRitterNovak_generate(long jarg1, OptIterativeGridGeneratorRitterNovak jarg1_);
  public final static native double OptIterativeGridGeneratorRitterNovak_getAdaptivity(long jarg1, OptIterativeGridGeneratorRitterNovak jarg1_);
  public final static native void OptIterativeGridGeneratorRitterNovak_setAdaptivity(long jarg1, OptIterativeGridGeneratorRitterNovak jarg1_, double jarg2);
  public final static native long OptIterativeGridGeneratorRitterNovak_getInitialLevel(long jarg1, OptIterativeGridGeneratorRitterNovak jarg1_);
  public final static native void OptIterativeGridGeneratorRitterNovak_setInitialLevel(long jarg1, OptIterativeGridGeneratorRitterNovak jarg1_, long jarg2);
  public final static native long OptIterativeGridGeneratorRitterNovak_getMaxLevel(long jarg1, OptIterativeGridGeneratorRitterNovak jarg1_);
  public final static native void OptIterativeGridGeneratorRitterNovak_setMaxLevel(long jarg1, OptIterativeGridGeneratorRitterNovak jarg1_, long jarg2);
  public final static native int OptIterativeGridGeneratorRitterNovak_getPowMethod(long jarg1, OptIterativeGridGeneratorRitterNovak jarg1_);
  public final static native void OptIterativeGridGeneratorRitterNovak_setPowMethod(long jarg1, OptIterativeGridGeneratorRitterNovak jarg1_, int jarg2);
  public final static native double OptIterativeGridGeneratorSOO_DEFAULT_ADAPTIVITY_get();
  public final static native long new_OptIterativeGridGeneratorSOO__SWIG_0(long jarg1, OptScalarFunction jarg1_, long jarg2, Grid jarg2_, long jarg3, double jarg4);
  public final static native long new_OptIterativeGridGeneratorSOO__SWIG_1(long jarg1, OptScalarFunction jarg1_, long jarg2, Grid jarg2_, long jarg3);
  public final static native void delete_OptIterativeGridGeneratorSOO(long jarg1);
  public final static native boolean OptIterativeGridGeneratorSOO_generate(long jarg1, OptIterativeGridGeneratorSOO jarg1_);
  public final static native long OptIterativeGridGeneratorSOO_getAdaptivity(long jarg1, OptIterativeGridGeneratorSOO jarg1_);
  public final static native void OptIterativeGridGeneratorSOO_setAdaptivity__SWIG_0(long jarg1, OptIterativeGridGeneratorSOO jarg1_, double jarg2);
  public final static native void OptIterativeGridGeneratorSOO_setAdaptivity__SWIG_1(long jarg1, OptIterativeGridGeneratorSOO jarg1_, long jarg2);
  public final static native void delete_OperationMultipleHierarchisation(long jarg1);
  public final static native boolean OperationMultipleHierarchisation_doHierarchisation__SWIG_0(long jarg1, OperationMultipleHierarchisation jarg1_, long jarg2, DataVector jarg2_);
  public final static native void OperationMultipleHierarchisation_doDehierarchisation__SWIG_0(long jarg1, OperationMultipleHierarchisation jarg1_, long jarg2, DataVector jarg2_);
  public final static native boolean OperationMultipleHierarchisation_doHierarchisation__SWIG_1(long jarg1, OperationMultipleHierarchisation jarg1_, long jarg2, DataMatrix jarg2_);
  public final static native void OperationMultipleHierarchisation_doDehierarchisation__SWIG_1(long jarg1, OperationMultipleHierarchisation jarg1_, long jarg2, DataMatrix jarg2_);
  public final static native long new_OptSLE();
  public final static native void delete_OptSLE(long jarg1);
  public final static native boolean OptSLE_isMatrixEntryNonZero(long jarg1, OptSLE jarg1_, long jarg2, long jarg3);
  public final static native double OptSLE_getMatrixEntry(long jarg1, OptSLE jarg1_, long jarg2, long jarg3);
  public final static native void OptSLE_matrixVectorMultiplication(long jarg1, OptSLE jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_);
  public final static native void OptSLE_matrixVectorMultiplicationSwigExplicitOptSLE(long jarg1, OptSLE jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_);
  public final static native long OptSLE_countNNZ(long jarg1, OptSLE jarg1_);
  public final static native long OptSLE_countNNZSwigExplicitOptSLE(long jarg1, OptSLE jarg1_);
  public final static native long OptSLE_getDimension(long jarg1, OptSLE jarg1_);
  public final static native boolean OptSLE_isCloneable(long jarg1, OptSLE jarg1_);
  public final static native boolean OptSLE_isCloneableSwigExplicitOptSLE(long jarg1, OptSLE jarg1_);
  public final static native void OptSLE_director_connect(OptSLE obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void OptSLE_change_ownership(OptSLE obj, long cptr, boolean take_or_release);
  public final static native void delete_CloneableSLE(long jarg1);
  public final static native void CloneableSLE_clone(long jarg1, CloneableSLE jarg1_, long jarg2);
  public final static native boolean CloneableSLE_isCloneable(long jarg1, CloneableSLE jarg1_);
  public final static native long new_OptFullSLE(long jarg1, DataMatrix jarg1_);
  public final static native void delete_OptFullSLE(long jarg1);
  public final static native boolean OptFullSLE_isMatrixEntryNonZero(long jarg1, OptFullSLE jarg1_, long jarg2, long jarg3);
  public final static native double OptFullSLE_getMatrixEntry(long jarg1, OptFullSLE jarg1_, long jarg2, long jarg3);
  public final static native long OptFullSLE_getA(long jarg1, OptFullSLE jarg1_);
  public final static native long OptFullSLE_getDimension(long jarg1, OptFullSLE jarg1_);
  public final static native void OptFullSLE_clone(long jarg1, OptFullSLE jarg1_, long jarg2);
  public final static native long new_OptHierarchisationSLE__SWIG_0(long jarg1, Grid jarg1_);
  public final static native long new_OptHierarchisationSLE__SWIG_1(long jarg1, Grid jarg1_, long jarg2, GridStorage jarg2_);
  public final static native boolean OptHierarchisationSLE_isMatrixEntryNonZero(long jarg1, OptHierarchisationSLE jarg1_, long jarg2, long jarg3);
  public final static native double OptHierarchisationSLE_getMatrixEntry(long jarg1, OptHierarchisationSLE jarg1_, long jarg2, long jarg3);
  public final static native long OptHierarchisationSLE_getGrid(long jarg1, OptHierarchisationSLE jarg1_);
  public final static native long OptHierarchisationSLE_getGridStorage(long jarg1, OptHierarchisationSLE jarg1_);
  public final static native long OptHierarchisationSLE_getDimension(long jarg1, OptHierarchisationSLE jarg1_);
  public final static native void OptHierarchisationSLE_clone(long jarg1, OptHierarchisationSLE jarg1_, long jarg2);
  public final static native void delete_OptHierarchisationSLE(long jarg1);
  public final static native long new_OptSLESolver();
  public final static native void delete_OptSLESolver(long jarg1);
  public final static native boolean OptSLESolver_solve__SWIG_0(long jarg1, OptSLESolver jarg1_, long jarg2, OptSLE jarg2_, long jarg3, DataVector jarg3_, long jarg4, DataVector jarg4_);
  public final static native boolean OptSLESolver_solve__SWIG_1(long jarg1, OptSLESolver jarg1_, long jarg2, OptSLE jarg2_, long jarg3, DataMatrix jarg3_, long jarg4, DataMatrix jarg4_);
  public final static native boolean OptSLESolver_solveSwigExplicitOptSLESolver__SWIG_1(long jarg1, OptSLESolver jarg1_, long jarg2, OptSLE jarg2_, long jarg3, DataMatrix jarg3_, long jarg4, DataMatrix jarg4_);
  public final static native void OptSLESolver_director_connect(OptSLESolver obj, long cptr, boolean mem_own, boolean weak_global);
  public final static native void OptSLESolver_change_ownership(OptSLESolver obj, long cptr, boolean take_or_release);
  public final static native void delete_OptArmadillo(long jarg1);
  public final static native boolean OptArmadillo_solve__SWIG_0(long jarg1, OptArmadillo jarg1_, long jarg2, OptSLE jarg2_, long jarg3, DataVector jarg3_, long jarg4, DataVector jarg4_);
  public final static native boolean OptArmadillo_solve__SWIG_1(long jarg1, OptArmadillo jarg1_, long jarg2, OptSLE jarg2_, long jarg3, DataMatrix jarg3_, long jarg4, DataMatrix jarg4_);
  public final static native long new_OptArmadillo();
  public final static native long OptAutoSLESolver_MAX_DIM_FOR_FULL_get();
  public final static native long OptAutoSLESolver_MAX_DIM_FOR_GAUSSIAN_get();
  public final static native double OptAutoSLESolver_MAX_NNZ_RATIO_FOR_SPARSE_get();
  public final static native double OptAutoSLESolver_ESTIMATE_NNZ_ROWS_SAMPLE_SIZE_get();
  public final static native void delete_OptAutoSLESolver(long jarg1);
  public final static native boolean OptAutoSLESolver_solve__SWIG_0(long jarg1, OptAutoSLESolver jarg1_, long jarg2, OptSLE jarg2_, long jarg3, DataVector jarg3_, long jarg4, DataVector jarg4_);
  public final static native boolean OptAutoSLESolver_solve__SWIG_1(long jarg1, OptAutoSLESolver jarg1_, long jarg2, OptSLE jarg2_, long jarg3, DataMatrix jarg3_, long jarg4, DataMatrix jarg4_);
  public final static native long new_OptAutoSLESolver();
  public final static native long OptBiCGStab_DEFAULT_MAX_IT_COUNT_get();
  public final static native double OptBiCGStab_DEFAULT_TOLERANCE_get();
  public final static native long new_OptBiCGStab__SWIG_0();
  public final static native long new_OptBiCGStab__SWIG_1(long jarg1, double jarg2, long jarg3, DataVector jarg3_);
  public final static native void delete_OptBiCGStab(long jarg1);
  public final static native boolean OptBiCGStab_solve(long jarg1, OptBiCGStab jarg1_, long jarg2, OptSLE jarg2_, long jarg3, DataVector jarg3_, long jarg4, DataVector jarg4_);
  public final static native long OptBiCGStab_getMaxItCount(long jarg1, OptBiCGStab jarg1_);
  public final static native void OptBiCGStab_setMaxItCount(long jarg1, OptBiCGStab jarg1_, long jarg2);
  public final static native double OptBiCGStab_getTolerance(long jarg1, OptBiCGStab jarg1_);
  public final static native void OptBiCGStab_setTolerance(long jarg1, OptBiCGStab jarg1_, double jarg2);
  public final static native long OptBiCGStab_getStartingPoint(long jarg1, OptBiCGStab jarg1_);
  public final static native void OptBiCGStab_setStartingPoint(long jarg1, OptBiCGStab jarg1_, long jarg2, DataVector jarg2_);
  public final static native void delete_OptEigen(long jarg1);
  public final static native boolean OptEigen_solve__SWIG_0(long jarg1, OptEigen jarg1_, long jarg2, OptSLE jarg2_, long jarg3, DataVector jarg3_, long jarg4, DataVector jarg4_);
  public final static native boolean OptEigen_solve__SWIG_1(long jarg1, OptEigen jarg1_, long jarg2, OptSLE jarg2_, long jarg3, DataMatrix jarg3_, long jarg4, DataMatrix jarg4_);
  public final static native long new_OptEigen();
  public final static native void delete_OptGaussianElimination(long jarg1);
  public final static native boolean OptGaussianElimination_solve(long jarg1, OptGaussianElimination jarg1_, long jarg2, OptSLE jarg2_, long jarg3, DataVector jarg3_, long jarg4, DataVector jarg4_);
  public final static native long new_OptGaussianElimination();
  public final static native void delete_OptGmmpp(long jarg1);
  public final static native boolean OptGmmpp_solve(long jarg1, OptGmmpp jarg1_, long jarg2, OptSLE jarg2_, long jarg3, DataVector jarg3_, long jarg4, DataVector jarg4_);
  public final static native long new_OptGmmpp();
  public final static native void delete_OptUMFPACK(long jarg1);
  public final static native boolean OptUMFPACK_solve__SWIG_0(long jarg1, OptUMFPACK jarg1_, long jarg2, OptSLE jarg2_, long jarg3, DataVector jarg3_, long jarg4, DataVector jarg4_);
  public final static native boolean OptUMFPACK_solve__SWIG_1(long jarg1, OptUMFPACK jarg1_, long jarg2, OptSLE jarg2_, long jarg3, DataMatrix jarg3_, long jarg4, DataMatrix jarg4_);
  public final static native long new_OptUMFPACK();
  public final static native long OptUnconstrainedOptimizer_DEFAULT_N_get();
  public final static native void delete_OptUnconstrainedOptimizer(long jarg1);
  public final static native void OptUnconstrainedOptimizer_optimize(long jarg1, OptUnconstrainedOptimizer jarg1_);
  public final static native long OptUnconstrainedOptimizer_getObjectiveFunction(long jarg1, OptUnconstrainedOptimizer jarg1_);
  public final static native long OptUnconstrainedOptimizer_getN(long jarg1, OptUnconstrainedOptimizer jarg1_);
  public final static native void OptUnconstrainedOptimizer_setN(long jarg1, OptUnconstrainedOptimizer jarg1_, long jarg2);
  public final static native long OptUnconstrainedOptimizer_getStartingPoint(long jarg1, OptUnconstrainedOptimizer jarg1_);
  public final static native void OptUnconstrainedOptimizer_setStartingPoint(long jarg1, OptUnconstrainedOptimizer jarg1_, long jarg2, DataVector jarg2_);
  public final static native long OptUnconstrainedOptimizer_getOptimalPoint(long jarg1, OptUnconstrainedOptimizer jarg1_);
  public final static native double OptUnconstrainedOptimizer_getOptimalValue(long jarg1, OptUnconstrainedOptimizer jarg1_);
  public final static native long OptUnconstrainedOptimizer_getHistoryOfOptimalPoints(long jarg1, OptUnconstrainedOptimizer jarg1_);
  public final static native long OptUnconstrainedOptimizer_getHistoryOfOptimalValues(long jarg1, OptUnconstrainedOptimizer jarg1_);
  public final static native void OptUnconstrainedOptimizer_clone(long jarg1, OptUnconstrainedOptimizer jarg1_, long jarg2);
  public final static native double OptAdaptiveGradientDescent_DEFAULT_TOLERANCE_get();
  public final static native double OptAdaptiveGradientDescent_DEFAULT_STEP_SIZE_INCREASE_FACTOR_get();
  public final static native double OptAdaptiveGradientDescent_DEFAULT_STEP_SIZE_DECREASE_FACTOR_get();
  public final static native double OptAdaptiveGradientDescent_DEFAULT_LINE_SEARCH_ACCURACY_get();
  public final static native long new_OptAdaptiveGradientDescent__SWIG_0(long jarg1, OptScalarFunction jarg1_, long jarg2, OptScalarFunctionGradient jarg2_, long jarg3, double jarg4, double jarg5, double jarg6, double jarg7);
  public final static native long new_OptAdaptiveGradientDescent__SWIG_1(long jarg1, OptScalarFunction jarg1_, long jarg2, OptScalarFunctionGradient jarg2_, long jarg3, double jarg4, double jarg5, double jarg6);
  public final static native long new_OptAdaptiveGradientDescent__SWIG_2(long jarg1, OptScalarFunction jarg1_, long jarg2, OptScalarFunctionGradient jarg2_, long jarg3, double jarg4, double jarg5);
  public final static native long new_OptAdaptiveGradientDescent__SWIG_3(long jarg1, OptScalarFunction jarg1_, long jarg2, OptScalarFunctionGradient jarg2_, long jarg3, double jarg4);
  public final static native long new_OptAdaptiveGradientDescent__SWIG_4(long jarg1, OptScalarFunction jarg1_, long jarg2, OptScalarFunctionGradient jarg2_, long jarg3);
  public final static native long new_OptAdaptiveGradientDescent__SWIG_5(long jarg1, OptScalarFunction jarg1_, long jarg2, OptScalarFunctionGradient jarg2_);
  public final static native long new_OptAdaptiveGradientDescent__SWIG_6(long jarg1, OptAdaptiveGradientDescent jarg1_);
  public final static native void delete_OptAdaptiveGradientDescent(long jarg1);
  public final static native void OptAdaptiveGradientDescent_optimize(long jarg1, OptAdaptiveGradientDescent jarg1_);
  public final static native long OptAdaptiveGradientDescent_getObjectiveGradient(long jarg1, OptAdaptiveGradientDescent jarg1_);
  public final static native double OptAdaptiveGradientDescent_getTolerance(long jarg1, OptAdaptiveGradientDescent jarg1_);
  public final static native void OptAdaptiveGradientDescent_setTolerance(long jarg1, OptAdaptiveGradientDescent jarg1_, double jarg2);
  public final static native double OptAdaptiveGradientDescent_getStepSizeIncreaseFactor(long jarg1, OptAdaptiveGradientDescent jarg1_);
  public final static native void OptAdaptiveGradientDescent_setStepSizeIncreaseFactor(long jarg1, OptAdaptiveGradientDescent jarg1_, double jarg2);
  public final static native double OptAdaptiveGradientDescent_getStepSizeDecreaseFactor(long jarg1, OptAdaptiveGradientDescent jarg1_);
  public final static native void OptAdaptiveGradientDescent_setStepSizeDecreaseFactor(long jarg1, OptAdaptiveGradientDescent jarg1_, double jarg2);
  public final static native double OptAdaptiveGradientDescent_getLineSearchAccuracy(long jarg1, OptAdaptiveGradientDescent jarg1_);
  public final static native void OptAdaptiveGradientDescent_setLineSearchAccuracy(long jarg1, OptAdaptiveGradientDescent jarg1_, double jarg2);
  public final static native void OptAdaptiveGradientDescent_clone(long jarg1, OptAdaptiveGradientDescent jarg1_, long jarg2);
  public final static native double OptAdaptiveNewton_DEFAULT_TOLERANCE_get();
  public final static native double OptAdaptiveNewton_DEFAULT_STEP_SIZE_INCREASE_FACTOR_get();
  public final static native double OptAdaptiveNewton_DEFAULT_STEP_SIZE_DECREASE_FACTOR_get();
  public final static native double OptAdaptiveNewton_DEFAULT_DAMPING_INCREASE_FACTOR_get();
  public final static native double OptAdaptiveNewton_DEFAULT_DAMPING_DECREASE_FACTOR_get();
  public final static native double OptAdaptiveNewton_DEFAULT_LINE_SEARCH_ACCURACY_get();
  public final static native long new_OptAdaptiveNewton__SWIG_0(long jarg1, OptScalarFunction jarg1_, long jarg2, OptScalarFunctionHessian jarg2_, long jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, double jarg9);
  public final static native long new_OptAdaptiveNewton__SWIG_1(long jarg1, OptScalarFunction jarg1_, long jarg2, OptScalarFunctionHessian jarg2_, long jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8);
  public final static native long new_OptAdaptiveNewton__SWIG_2(long jarg1, OptScalarFunction jarg1_, long jarg2, OptScalarFunctionHessian jarg2_, long jarg3, double jarg4, double jarg5, double jarg6, double jarg7);
  public final static native long new_OptAdaptiveNewton__SWIG_3(long jarg1, OptScalarFunction jarg1_, long jarg2, OptScalarFunctionHessian jarg2_, long jarg3, double jarg4, double jarg5, double jarg6);
  public final static native long new_OptAdaptiveNewton__SWIG_4(long jarg1, OptScalarFunction jarg1_, long jarg2, OptScalarFunctionHessian jarg2_, long jarg3, double jarg4, double jarg5);
  public final static native long new_OptAdaptiveNewton__SWIG_5(long jarg1, OptScalarFunction jarg1_, long jarg2, OptScalarFunctionHessian jarg2_, long jarg3, double jarg4);
  public final static native long new_OptAdaptiveNewton__SWIG_6(long jarg1, OptScalarFunction jarg1_, long jarg2, OptScalarFunctionHessian jarg2_, long jarg3);
  public final static native long new_OptAdaptiveNewton__SWIG_7(long jarg1, OptScalarFunction jarg1_, long jarg2, OptScalarFunctionHessian jarg2_);
  public final static native long new_OptAdaptiveNewton__SWIG_8(long jarg1, OptScalarFunction jarg1_, long jarg2, OptScalarFunctionHessian jarg2_, long jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, double jarg9, long jarg10, OptSLESolver jarg10_);
  public final static native long new_OptAdaptiveNewton__SWIG_9(long jarg1, OptAdaptiveNewton jarg1_);
  public final static native void delete_OptAdaptiveNewton(long jarg1);
  public final static native void OptAdaptiveNewton_optimize(long jarg1, OptAdaptiveNewton jarg1_);
  public final static native long OptAdaptiveNewton_getObjectiveHessian(long jarg1, OptAdaptiveNewton jarg1_);
  public final static native double OptAdaptiveNewton_getTolerance(long jarg1, OptAdaptiveNewton jarg1_);
  public final static native void OptAdaptiveNewton_setTolerance(long jarg1, OptAdaptiveNewton jarg1_, double jarg2);
  public final static native double OptAdaptiveNewton_getStepSizeIncreaseFactor(long jarg1, OptAdaptiveNewton jarg1_);
  public final static native void OptAdaptiveNewton_setStepSizeIncreaseFactor(long jarg1, OptAdaptiveNewton jarg1_, double jarg2);
  public final static native double OptAdaptiveNewton_getStepSizeDecreaseFactor(long jarg1, OptAdaptiveNewton jarg1_);
  public final static native void OptAdaptiveNewton_setStepSizeDecreaseFactor(long jarg1, OptAdaptiveNewton jarg1_, double jarg2);
  public final static native double OptAdaptiveNewton_getDampingIncreaseFactor(long jarg1, OptAdaptiveNewton jarg1_);
  public final static native void OptAdaptiveNewton_setDampingIncreaseFactor(long jarg1, OptAdaptiveNewton jarg1_, double jarg2);
  public final static native double OptAdaptiveNewton_getDampingDecreaseFactor(long jarg1, OptAdaptiveNewton jarg1_);
  public final static native void OptAdaptiveNewton_setDampingDecreaseFactor(long jarg1, OptAdaptiveNewton jarg1_, double jarg2);
  public final static native double OptAdaptiveNewton_getLineSearchAccuracy(long jarg1, OptAdaptiveNewton jarg1_);
  public final static native void OptAdaptiveNewton_setLineSearchAccuracy(long jarg1, OptAdaptiveNewton jarg1_, double jarg2);
  public final static native void OptAdaptiveNewton_clone(long jarg1, OptAdaptiveNewton jarg1_, long jarg2);
  public final static native double OptBFGS_DEFAULT_TOLERANCE_get();
  public final static native double OptBFGS_DEFAULT_STEP_SIZE_INCREASE_FACTOR_get();
  public final static native double OptBFGS_DEFAULT_STEP_SIZE_DECREASE_FACTOR_get();
  public final static native double OptBFGS_DEFAULT_LINE_SEARCH_ACCURACY_get();
  public final static native long new_OptBFGS__SWIG_0(long jarg1, OptScalarFunction jarg1_, long jarg2, OptScalarFunctionGradient jarg2_, long jarg3, double jarg4, double jarg5, double jarg6, double jarg7);
  public final static native long new_OptBFGS__SWIG_1(long jarg1, OptScalarFunction jarg1_, long jarg2, OptScalarFunctionGradient jarg2_, long jarg3, double jarg4, double jarg5, double jarg6);
  public final static native long new_OptBFGS__SWIG_2(long jarg1, OptScalarFunction jarg1_, long jarg2, OptScalarFunctionGradient jarg2_, long jarg3, double jarg4, double jarg5);
  public final static native long new_OptBFGS__SWIG_3(long jarg1, OptScalarFunction jarg1_, long jarg2, OptScalarFunctionGradient jarg2_, long jarg3, double jarg4);
  public final static native long new_OptBFGS__SWIG_4(long jarg1, OptScalarFunction jarg1_, long jarg2, OptScalarFunctionGradient jarg2_, long jarg3);
  public final static native long new_OptBFGS__SWIG_5(long jarg1, OptScalarFunction jarg1_, long jarg2, OptScalarFunctionGradient jarg2_);
  public final static native long new_OptBFGS__SWIG_6(long jarg1, OptBFGS jarg1_);
  public final static native void delete_OptBFGS(long jarg1);
  public final static native void OptBFGS_optimize(long jarg1, OptBFGS jarg1_);
  public final static native long OptBFGS_getObjectiveGradient(long jarg1, OptBFGS jarg1_);
  public final static native double OptBFGS_getTolerance(long jarg1, OptBFGS jarg1_);
  public final static native void OptBFGS_setTolerance(long jarg1, OptBFGS jarg1_, double jarg2);
  public final static native double OptBFGS_getStepSizeIncreaseFactor(long jarg1, OptBFGS jarg1_);
  public final static native void OptBFGS_setStepSizeIncreaseFactor(long jarg1, OptBFGS jarg1_, double jarg2);
  public final static native double OptBFGS_getStepSizeDecreaseFactor(long jarg1, OptBFGS jarg1_);
  public final static native void OptBFGS_setStepSizeDecreaseFactor(long jarg1, OptBFGS jarg1_, double jarg2);
  public final static native double OptBFGS_getLineSearchAccuracy(long jarg1, OptBFGS jarg1_);
  public final static native void OptBFGS_setLineSearchAccuracy(long jarg1, OptBFGS jarg1_, double jarg2);
  public final static native void OptBFGS_clone(long jarg1, OptBFGS jarg1_, long jarg2);
  public final static native long OptCMAES_DEFAULT_MAX_FCN_EVAL_COUNT_get();
  public final static native long new_OptCMAES__SWIG_0(long jarg1, OptScalarFunction jarg1_, long jarg2);
  public final static native long new_OptCMAES__SWIG_1(long jarg1, OptScalarFunction jarg1_);
  public final static native long new_OptCMAES__SWIG_2(long jarg1, OptCMAES jarg1_);
  public final static native void delete_OptCMAES(long jarg1);
  public final static native void OptCMAES_optimize(long jarg1, OptCMAES jarg1_);
  public final static native void OptCMAES_clone(long jarg1, OptCMAES jarg1_, long jarg2);
  public final static native double OptDifferentialEvolution_DEFAULT_CROSSOVER_PROBABILITY_get();
  public final static native double OptDifferentialEvolution_DEFAULT_SCALING_FACTOR_get();
  public final static native long OptDifferentialEvolution_DEFAULT_IDLE_GENERATIONS_COUNT_get();
  public final static native double OptDifferentialEvolution_DEFAULT_AVG_IMPROVEMENT_THRESHOLD_get();
  public final static native double OptDifferentialEvolution_DEFAULT_MAX_DISTANCE_THRESHOLD_get();
  public final static native long new_OptDifferentialEvolution__SWIG_0(long jarg1, OptScalarFunction jarg1_, long jarg2, long jarg3, double jarg4, double jarg5, long jarg6, double jarg7, double jarg8);
  public final static native long new_OptDifferentialEvolution__SWIG_1(long jarg1, OptScalarFunction jarg1_, long jarg2, long jarg3, double jarg4, double jarg5, long jarg6, double jarg7);
  public final static native long new_OptDifferentialEvolution__SWIG_2(long jarg1, OptScalarFunction jarg1_, long jarg2, long jarg3, double jarg4, double jarg5, long jarg6);
  public final static native long new_OptDifferentialEvolution__SWIG_3(long jarg1, OptScalarFunction jarg1_, long jarg2, long jarg3, double jarg4, double jarg5);
  public final static native long new_OptDifferentialEvolution__SWIG_4(long jarg1, OptScalarFunction jarg1_, long jarg2, long jarg3, double jarg4);
  public final static native long new_OptDifferentialEvolution__SWIG_5(long jarg1, OptScalarFunction jarg1_, long jarg2, long jarg3);
  public final static native long new_OptDifferentialEvolution__SWIG_6(long jarg1, OptScalarFunction jarg1_, long jarg2);
  public final static native long new_OptDifferentialEvolution__SWIG_7(long jarg1, OptScalarFunction jarg1_);
  public final static native long new_OptDifferentialEvolution__SWIG_8(long jarg1, OptDifferentialEvolution jarg1_);
  public final static native void delete_OptDifferentialEvolution(long jarg1);
  public final static native void OptDifferentialEvolution_optimize(long jarg1, OptDifferentialEvolution jarg1_);
  public final static native long OptDifferentialEvolution_getPopulationSize(long jarg1, OptDifferentialEvolution jarg1_);
  public final static native void OptDifferentialEvolution_setPopulationSize(long jarg1, OptDifferentialEvolution jarg1_, long jarg2);
  public final static native void OptDifferentialEvolution_clone(long jarg1, OptDifferentialEvolution jarg1_, long jarg2);
  public final static native long OptGradientDescent_DEFAULT_MAX_IT_COUNT_get();
  public final static native double OptGradientDescent_DEFAULT_BETA_get();
  public final static native double OptGradientDescent_DEFAULT_GAMMA_get();
  public final static native double OptGradientDescent_DEFAULT_TOLERANCE_get();
  public final static native double OptGradientDescent_DEFAULT_EPSILON_get();
  public final static native long new_OptGradientDescent__SWIG_0(long jarg1, OptScalarFunction jarg1_, long jarg2, OptScalarFunctionGradient jarg2_, long jarg3, double jarg4, double jarg5, double jarg6, double jarg7);
  public final static native long new_OptGradientDescent__SWIG_1(long jarg1, OptScalarFunction jarg1_, long jarg2, OptScalarFunctionGradient jarg2_, long jarg3, double jarg4, double jarg5, double jarg6);
  public final static native long new_OptGradientDescent__SWIG_2(long jarg1, OptScalarFunction jarg1_, long jarg2, OptScalarFunctionGradient jarg2_, long jarg3, double jarg4, double jarg5);
  public final static native long new_OptGradientDescent__SWIG_3(long jarg1, OptScalarFunction jarg1_, long jarg2, OptScalarFunctionGradient jarg2_, long jarg3, double jarg4);
  public final static native long new_OptGradientDescent__SWIG_4(long jarg1, OptScalarFunction jarg1_, long jarg2, OptScalarFunctionGradient jarg2_, long jarg3);
  public final static native long new_OptGradientDescent__SWIG_5(long jarg1, OptScalarFunction jarg1_, long jarg2, OptScalarFunctionGradient jarg2_);
  public final static native long new_OptGradientDescent__SWIG_6(long jarg1, OptGradientDescent jarg1_);
  public final static native void delete_OptGradientDescent(long jarg1);
  public final static native void OptGradientDescent_optimize(long jarg1, OptGradientDescent jarg1_);
  public final static native long OptGradientDescent_getObjectiveGradient(long jarg1, OptGradientDescent jarg1_);
  public final static native double OptGradientDescent_getBeta(long jarg1, OptGradientDescent jarg1_);
  public final static native void OptGradientDescent_setBeta(long jarg1, OptGradientDescent jarg1_, double jarg2);
  public final static native double OptGradientDescent_getGamma(long jarg1, OptGradientDescent jarg1_);
  public final static native void OptGradientDescent_setGamma(long jarg1, OptGradientDescent jarg1_, double jarg2);
  public final static native double OptGradientDescent_getTolerance(long jarg1, OptGradientDescent jarg1_);
  public final static native void OptGradientDescent_setTolerance(long jarg1, OptGradientDescent jarg1_, double jarg2);
  public final static native double OptGradientDescent_getEpsilon(long jarg1, OptGradientDescent jarg1_);
  public final static native void OptGradientDescent_setEpsilon(long jarg1, OptGradientDescent jarg1_, double jarg2);
  public final static native void OptGradientDescent_clone(long jarg1, OptGradientDescent jarg1_, long jarg2);
  public final static native long OptMultiStart_DEFAULT_MAX_FCN_EVAL_COUNT_get();
  public final static native long new_OptMultiStart__SWIG_0(long jarg1, OptScalarFunction jarg1_, long jarg2, long jarg3);
  public final static native long new_OptMultiStart__SWIG_1(long jarg1, OptScalarFunction jarg1_, long jarg2);
  public final static native long new_OptMultiStart__SWIG_2(long jarg1, OptScalarFunction jarg1_);
  public final static native long new_OptMultiStart__SWIG_3(long jarg1, OptUnconstrainedOptimizer jarg1_, long jarg2, long jarg3);
  public final static native long new_OptMultiStart__SWIG_4(long jarg1, OptUnconstrainedOptimizer jarg1_, long jarg2);
  public final static native long new_OptMultiStart__SWIG_5(long jarg1, OptUnconstrainedOptimizer jarg1_);
  public final static native long new_OptMultiStart__SWIG_6(long jarg1, OptMultiStart jarg1_);
  public final static native void delete_OptMultiStart(long jarg1);
  public final static native void OptMultiStart_optimize(long jarg1, OptMultiStart jarg1_);
  public final static native long OptMultiStart_getPopulationSize(long jarg1, OptMultiStart jarg1_);
  public final static native void OptMultiStart_setPopulationSize(long jarg1, OptMultiStart jarg1_, long jarg2);
  public final static native long OptMultiStart_getHistoryOfInnerIterations(long jarg1, OptMultiStart jarg1_);
  public final static native void OptMultiStart_clone(long jarg1, OptMultiStart jarg1_, long jarg2);
  public final static native double OptNelderMead_DEFAULT_ALPHA_get();
  public final static native double OptNelderMead_DEFAULT_BETA_get();
  public final static native double OptNelderMead_DEFAULT_GAMMA_get();
  public final static native double OptNelderMead_DEFAULT_DELTA_get();
  public final static native long OptNelderMead_DEFAULT_MAX_FCN_EVAL_COUNT_get();
  public final static native double OptNelderMead_STARTING_SIMPLEX_EDGE_LENGTH_get();
  public final static native long new_OptNelderMead__SWIG_0(long jarg1, OptScalarFunction jarg1_, long jarg2, double jarg3, double jarg4, double jarg5, double jarg6);
  public final static native long new_OptNelderMead__SWIG_1(long jarg1, OptScalarFunction jarg1_, long jarg2, double jarg3, double jarg4, double jarg5);
  public final static native long new_OptNelderMead__SWIG_2(long jarg1, OptScalarFunction jarg1_, long jarg2, double jarg3, double jarg4);
  public final static native long new_OptNelderMead__SWIG_3(long jarg1, OptScalarFunction jarg1_, long jarg2, double jarg3);
  public final static native long new_OptNelderMead__SWIG_4(long jarg1, OptScalarFunction jarg1_, long jarg2);
  public final static native long new_OptNelderMead__SWIG_5(long jarg1, OptScalarFunction jarg1_);
  public final static native long new_OptNelderMead__SWIG_6(long jarg1, OptNelderMead jarg1_);
  public final static native void delete_OptNelderMead(long jarg1);
  public final static native void OptNelderMead_optimize(long jarg1, OptNelderMead jarg1_);
  public final static native double OptNelderMead_getAlpha(long jarg1, OptNelderMead jarg1_);
  public final static native void OptNelderMead_setAlpha(long jarg1, OptNelderMead jarg1_, double jarg2);
  public final static native double OptNelderMead_getBeta(long jarg1, OptNelderMead jarg1_);
  public final static native void OptNelderMead_setBeta(long jarg1, OptNelderMead jarg1_, double jarg2);
  public final static native double OptNelderMead_getGamma(long jarg1, OptNelderMead jarg1_);
  public final static native void OptNelderMead_setGamma(long jarg1, OptNelderMead jarg1_, double jarg2);
  public final static native double OptNelderMead_getDelta(long jarg1, OptNelderMead jarg1_);
  public final static native void OptNelderMead_setDelta(long jarg1, OptNelderMead jarg1_, double jarg2);
  public final static native void OptNelderMead_clone(long jarg1, OptNelderMead jarg1_, long jarg2);
  public final static native double OptNewton_DEFAULT_BETA_get();
  public final static native double OptNewton_DEFAULT_GAMMA_get();
  public final static native double OptNewton_DEFAULT_TOLERANCE_get();
  public final static native double OptNewton_DEFAULT_EPSILON_get();
  public final static native double OptNewton_DEFAULT_ALPHA1_get();
  public final static native double OptNewton_DEFAULT_ALPHA2_get();
  public final static native double OptNewton_DEFAULT_P_get();
  public final static native long new_OptNewton__SWIG_0(long jarg1, OptScalarFunction jarg1_, long jarg2, OptScalarFunctionHessian jarg2_, long jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, double jarg9, double jarg10);
  public final static native long new_OptNewton__SWIG_1(long jarg1, OptScalarFunction jarg1_, long jarg2, OptScalarFunctionHessian jarg2_, long jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, double jarg9);
  public final static native long new_OptNewton__SWIG_2(long jarg1, OptScalarFunction jarg1_, long jarg2, OptScalarFunctionHessian jarg2_, long jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8);
  public final static native long new_OptNewton__SWIG_3(long jarg1, OptScalarFunction jarg1_, long jarg2, OptScalarFunctionHessian jarg2_, long jarg3, double jarg4, double jarg5, double jarg6, double jarg7);
  public final static native long new_OptNewton__SWIG_4(long jarg1, OptScalarFunction jarg1_, long jarg2, OptScalarFunctionHessian jarg2_, long jarg3, double jarg4, double jarg5, double jarg6);
  public final static native long new_OptNewton__SWIG_5(long jarg1, OptScalarFunction jarg1_, long jarg2, OptScalarFunctionHessian jarg2_, long jarg3, double jarg4, double jarg5);
  public final static native long new_OptNewton__SWIG_6(long jarg1, OptScalarFunction jarg1_, long jarg2, OptScalarFunctionHessian jarg2_, long jarg3, double jarg4);
  public final static native long new_OptNewton__SWIG_7(long jarg1, OptScalarFunction jarg1_, long jarg2, OptScalarFunctionHessian jarg2_, long jarg3);
  public final static native long new_OptNewton__SWIG_8(long jarg1, OptScalarFunction jarg1_, long jarg2, OptScalarFunctionHessian jarg2_);
  public final static native long new_OptNewton__SWIG_9(long jarg1, OptScalarFunction jarg1_, long jarg2, OptScalarFunctionHessian jarg2_, long jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8, double jarg9, double jarg10, long jarg11, OptSLESolver jarg11_);
  public final static native long new_OptNewton__SWIG_10(long jarg1, OptNewton jarg1_);
  public final static native void delete_OptNewton(long jarg1);
  public final static native void OptNewton_optimize(long jarg1, OptNewton jarg1_);
  public final static native long OptNewton_getObjectiveHessian(long jarg1, OptNewton jarg1_);
  public final static native double OptNewton_getBeta(long jarg1, OptNewton jarg1_);
  public final static native void OptNewton_setBeta(long jarg1, OptNewton jarg1_, double jarg2);
  public final static native double OptNewton_getGamma(long jarg1, OptNewton jarg1_);
  public final static native void OptNewton_setGamma(long jarg1, OptNewton jarg1_, double jarg2);
  public final static native double OptNewton_getTolerance(long jarg1, OptNewton jarg1_);
  public final static native void OptNewton_setTolerance(long jarg1, OptNewton jarg1_, double jarg2);
  public final static native double OptNewton_getEpsilon(long jarg1, OptNewton jarg1_);
  public final static native void OptNewton_setEpsilon(long jarg1, OptNewton jarg1_, double jarg2);
  public final static native double OptNewton_getAlpha1(long jarg1, OptNewton jarg1_);
  public final static native void OptNewton_setAlpha1(long jarg1, OptNewton jarg1_, double jarg2);
  public final static native double OptNewton_getAlpha2(long jarg1, OptNewton jarg1_);
  public final static native void OptNewton_setAlpha2(long jarg1, OptNewton jarg1_, double jarg2);
  public final static native double OptNewton_getP(long jarg1, OptNewton jarg1_);
  public final static native void OptNewton_setP(long jarg1, OptNewton jarg1_, double jarg2);
  public final static native void OptNewton_clone(long jarg1, OptNewton jarg1_, long jarg2);
  public final static native double OptNLCG_DEFAULT_BETA_get();
  public final static native double OptNLCG_DEFAULT_GAMMA_get();
  public final static native double OptNLCG_DEFAULT_TOLERANCE_get();
  public final static native double OptNLCG_DEFAULT_EPSILON_get();
  public final static native double OptNLCG_DEFAULT_RESTART_THRESHOLD_get();
  public final static native long new_OptNLCG__SWIG_0(long jarg1, OptScalarFunction jarg1_, long jarg2, OptScalarFunctionGradient jarg2_, long jarg3, double jarg4, double jarg5, double jarg6, double jarg7, double jarg8);
  public final static native long new_OptNLCG__SWIG_1(long jarg1, OptScalarFunction jarg1_, long jarg2, OptScalarFunctionGradient jarg2_, long jarg3, double jarg4, double jarg5, double jarg6, double jarg7);
  public final static native long new_OptNLCG__SWIG_2(long jarg1, OptScalarFunction jarg1_, long jarg2, OptScalarFunctionGradient jarg2_, long jarg3, double jarg4, double jarg5, double jarg6);
  public final static native long new_OptNLCG__SWIG_3(long jarg1, OptScalarFunction jarg1_, long jarg2, OptScalarFunctionGradient jarg2_, long jarg3, double jarg4, double jarg5);
  public final static native long new_OptNLCG__SWIG_4(long jarg1, OptScalarFunction jarg1_, long jarg2, OptScalarFunctionGradient jarg2_, long jarg3, double jarg4);
  public final static native long new_OptNLCG__SWIG_5(long jarg1, OptScalarFunction jarg1_, long jarg2, OptScalarFunctionGradient jarg2_, long jarg3);
  public final static native long new_OptNLCG__SWIG_6(long jarg1, OptScalarFunction jarg1_, long jarg2, OptScalarFunctionGradient jarg2_);
  public final static native long new_OptNLCG__SWIG_7(long jarg1, OptNLCG jarg1_);
  public final static native void delete_OptNLCG(long jarg1);
  public final static native void OptNLCG_optimize(long jarg1, OptNLCG jarg1_);
  public final static native long OptNLCG_getObjectiveGradient(long jarg1, OptNLCG jarg1_);
  public final static native double OptNLCG_getBeta(long jarg1, OptNLCG jarg1_);
  public final static native void OptNLCG_setBeta(long jarg1, OptNLCG jarg1_, double jarg2);
  public final static native double OptNLCG_getGamma(long jarg1, OptNLCG jarg1_);
  public final static native void OptNLCG_setGamma(long jarg1, OptNLCG jarg1_, double jarg2);
  public final static native double OptNLCG_getTolerance(long jarg1, OptNLCG jarg1_);
  public final static native void OptNLCG_setTolerance(long jarg1, OptNLCG jarg1_, double jarg2);
  public final static native double OptNLCG_getEpsilon(long jarg1, OptNLCG jarg1_);
  public final static native void OptNLCG_setEpsilon(long jarg1, OptNLCG jarg1_, double jarg2);
  public final static native double OptNLCG_getRestartThreshold(long jarg1, OptNLCG jarg1_);
  public final static native void OptNLCG_setRestartThreshold(long jarg1, OptNLCG jarg1_, double jarg2);
  public final static native void OptNLCG_clone(long jarg1, OptNLCG jarg1_, long jarg2);
  public final static native double OptRprop_DEFAULT_TOLERANCE_get();
  public final static native double OptRprop_DEFAULT_INITIAL_STEP_SIZE_get();
  public final static native double OptRprop_DEFAULT_STEP_SIZE_INCREASE_FACTOR_get();
  public final static native double OptRprop_DEFAULT_STEP_SIZE_DECREASE_FACTOR_get();
  public final static native long new_OptRprop__SWIG_0(long jarg1, OptScalarFunction jarg1_, long jarg2, OptScalarFunctionGradient jarg2_, long jarg3, double jarg4, double jarg5, double jarg6, double jarg7);
  public final static native long new_OptRprop__SWIG_1(long jarg1, OptScalarFunction jarg1_, long jarg2, OptScalarFunctionGradient jarg2_, long jarg3, double jarg4, double jarg5, double jarg6);
  public final static native long new_OptRprop__SWIG_2(long jarg1, OptScalarFunction jarg1_, long jarg2, OptScalarFunctionGradient jarg2_, long jarg3, double jarg4, double jarg5);
  public final static native long new_OptRprop__SWIG_3(long jarg1, OptScalarFunction jarg1_, long jarg2, OptScalarFunctionGradient jarg2_, long jarg3, double jarg4);
  public final static native long new_OptRprop__SWIG_4(long jarg1, OptScalarFunction jarg1_, long jarg2, OptScalarFunctionGradient jarg2_, long jarg3);
  public final static native long new_OptRprop__SWIG_5(long jarg1, OptScalarFunction jarg1_, long jarg2, OptScalarFunctionGradient jarg2_);
  public final static native long new_OptRprop__SWIG_6(long jarg1, OptRprop jarg1_);
  public final static native void delete_OptRprop(long jarg1);
  public final static native void OptRprop_optimize(long jarg1, OptRprop jarg1_);
  public final static native long OptRprop_getObjectiveGradient(long jarg1, OptRprop jarg1_);
  public final static native double OptRprop_getTolerance(long jarg1, OptRprop jarg1_);
  public final static native void OptRprop_setTolerance(long jarg1, OptRprop jarg1_, double jarg2);
  public final static native double OptRprop_getInitialStepSize(long jarg1, OptRprop jarg1_);
  public final static native void OptRprop_setInitialStepSize(long jarg1, OptRprop jarg1_, double jarg2);
  public final static native double OptRprop_getStepSizeIncreaseFactor(long jarg1, OptRprop jarg1_);
  public final static native void OptRprop_setStepSizeIncreaseFactor(long jarg1, OptRprop jarg1_, double jarg2);
  public final static native double OptRprop_getStepSizeDecreaseFactor(long jarg1, OptRprop jarg1_);
  public final static native void OptRprop_setStepSizeDecreaseFactor(long jarg1, OptRprop jarg1_, double jarg2);
  public final static native void OptRprop_clone(long jarg1, OptRprop jarg1_, long jarg2);
  public final static native long OptLeastSquaresOptimizer_DEFAULT_N_get();
  public final static native void delete_OptLeastSquaresOptimizer(long jarg1);
  public final static native void OptLeastSquaresOptimizer_optimize(long jarg1, OptLeastSquaresOptimizer jarg1_);
  public final static native long OptLeastSquaresOptimizer_getPhiFunction(long jarg1, OptLeastSquaresOptimizer jarg1_);
  public final static native long OptLeastSquaresOptimizer_getN(long jarg1, OptLeastSquaresOptimizer jarg1_);
  public final static native void OptLeastSquaresOptimizer_setN(long jarg1, OptLeastSquaresOptimizer jarg1_, long jarg2);
  public final static native long OptLeastSquaresOptimizer_getStartingPoint(long jarg1, OptLeastSquaresOptimizer jarg1_);
  public final static native void OptLeastSquaresOptimizer_setStartingPoint(long jarg1, OptLeastSquaresOptimizer jarg1_, long jarg2, DataVector jarg2_);
  public final static native long OptLeastSquaresOptimizer_getOptimalPoint(long jarg1, OptLeastSquaresOptimizer jarg1_);
  public final static native double OptLeastSquaresOptimizer_getOptimalValue(long jarg1, OptLeastSquaresOptimizer jarg1_);
  public final static native long OptLeastSquaresOptimizer_getHistoryOfOptimalPoints(long jarg1, OptLeastSquaresOptimizer jarg1_);
  public final static native long OptLeastSquaresOptimizer_getHistoryOfOptimalValues(long jarg1, OptLeastSquaresOptimizer jarg1_);
  public final static native void OptLeastSquaresOptimizer_clone(long jarg1, OptLeastSquaresOptimizer jarg1_, long jarg2);
  public final static native double OptLevenbergMarquardt_DEFAULT_TOLERANCE_get();
  public final static native double OptLevenbergMarquardt_DEFAULT_INITIAL_DAMPING_get();
  public final static native double OptLevenbergMarquardt_DEFAULT_ACCEPTANCE_THRESHOLD_get();
  public final static native double OptLevenbergMarquardt_DEFAULT_EFFECTIVENESS_THRESHOLD_get();
  public final static native long new_OptLevenbergMarquardt__SWIG_0(long jarg1, OptVectorFunction jarg1_, long jarg2, OptVectorFunctionGradient jarg2_, long jarg3, double jarg4, double jarg5, double jarg6, double jarg7);
  public final static native long new_OptLevenbergMarquardt__SWIG_1(long jarg1, OptVectorFunction jarg1_, long jarg2, OptVectorFunctionGradient jarg2_, long jarg3, double jarg4, double jarg5, double jarg6);
  public final static native long new_OptLevenbergMarquardt__SWIG_2(long jarg1, OptVectorFunction jarg1_, long jarg2, OptVectorFunctionGradient jarg2_, long jarg3, double jarg4, double jarg5);
  public final static native long new_OptLevenbergMarquardt__SWIG_3(long jarg1, OptVectorFunction jarg1_, long jarg2, OptVectorFunctionGradient jarg2_, long jarg3, double jarg4);
  public final static native long new_OptLevenbergMarquardt__SWIG_4(long jarg1, OptVectorFunction jarg1_, long jarg2, OptVectorFunctionGradient jarg2_, long jarg3);
  public final static native long new_OptLevenbergMarquardt__SWIG_5(long jarg1, OptVectorFunction jarg1_, long jarg2, OptVectorFunctionGradient jarg2_);
  public final static native long new_OptLevenbergMarquardt__SWIG_6(long jarg1, OptVectorFunction jarg1_, long jarg2, OptVectorFunctionGradient jarg2_, long jarg3, double jarg4, double jarg5, double jarg6, double jarg7, long jarg8, OptSLESolver jarg8_);
  public final static native long new_OptLevenbergMarquardt__SWIG_7(long jarg1, OptLevenbergMarquardt jarg1_);
  public final static native void delete_OptLevenbergMarquardt(long jarg1);
  public final static native void OptLevenbergMarquardt_optimize(long jarg1, OptLevenbergMarquardt jarg1_);
  public final static native long OptLevenbergMarquardt_getPhiGradient(long jarg1, OptLevenbergMarquardt jarg1_);
  public final static native double OptLevenbergMarquardt_getTolerance(long jarg1, OptLevenbergMarquardt jarg1_);
  public final static native void OptLevenbergMarquardt_setTolerance(long jarg1, OptLevenbergMarquardt jarg1_, double jarg2);
  public final static native double OptLevenbergMarquardt_getInitialDamping(long jarg1, OptLevenbergMarquardt jarg1_);
  public final static native void OptLevenbergMarquardt_setInitialDamping(long jarg1, OptLevenbergMarquardt jarg1_, double jarg2);
  public final static native double OptLevenbergMarquardt_getAcceptanceThreshold(long jarg1, OptLevenbergMarquardt jarg1_);
  public final static native void OptLevenbergMarquardt_setAcceptanceThreshold(long jarg1, OptLevenbergMarquardt jarg1_, double jarg2);
  public final static native double OptLevenbergMarquardt_getEffectivenessThreshold(long jarg1, OptLevenbergMarquardt jarg1_);
  public final static native void OptLevenbergMarquardt_setEffectivenessThreshold(long jarg1, OptLevenbergMarquardt jarg1_, double jarg2);
  public final static native void OptLevenbergMarquardt_clone(long jarg1, OptLevenbergMarquardt jarg1_, long jarg2);
  public final static native void delete_OptConstrainedOptimizer(long jarg1);
  public final static native long OptConstrainedOptimizer_getInequalityConstraintFunction(long jarg1, OptConstrainedOptimizer jarg1_);
  public final static native long OptConstrainedOptimizer_getEqualityConstraintFunction(long jarg1, OptConstrainedOptimizer jarg1_);
  public final static native double OptAugmentedLagrangian_DEFAULT_X_TOLERANCE_get();
  public final static native double OptAugmentedLagrangian_DEFAULT_CONSTRAINT_TOLERANCE_get();
  public final static native double OptAugmentedLagrangian_DEFAULT_PENALTY_START_VALUE_get();
  public final static native double OptAugmentedLagrangian_DEFAULT_PENALTY_INCREASE_FACTOR_get();
  public final static native long new_OptAugmentedLagrangian__SWIG_0(long jarg1, OptScalarFunction jarg1_, long jarg2, OptScalarFunctionGradient jarg2_, long jarg3, OptVectorFunction jarg3_, long jarg4, OptVectorFunctionGradient jarg4_, long jarg5, OptVectorFunction jarg5_, long jarg6, OptVectorFunctionGradient jarg6_, long jarg7, double jarg8, double jarg9, double jarg10, double jarg11);
  public final static native long new_OptAugmentedLagrangian__SWIG_1(long jarg1, OptScalarFunction jarg1_, long jarg2, OptScalarFunctionGradient jarg2_, long jarg3, OptVectorFunction jarg3_, long jarg4, OptVectorFunctionGradient jarg4_, long jarg5, OptVectorFunction jarg5_, long jarg6, OptVectorFunctionGradient jarg6_, long jarg7, double jarg8, double jarg9, double jarg10);
  public final static native long new_OptAugmentedLagrangian__SWIG_2(long jarg1, OptScalarFunction jarg1_, long jarg2, OptScalarFunctionGradient jarg2_, long jarg3, OptVectorFunction jarg3_, long jarg4, OptVectorFunctionGradient jarg4_, long jarg5, OptVectorFunction jarg5_, long jarg6, OptVectorFunctionGradient jarg6_, long jarg7, double jarg8, double jarg9);
  public final static native long new_OptAugmentedLagrangian__SWIG_3(long jarg1, OptScalarFunction jarg1_, long jarg2, OptScalarFunctionGradient jarg2_, long jarg3, OptVectorFunction jarg3_, long jarg4, OptVectorFunctionGradient jarg4_, long jarg5, OptVectorFunction jarg5_, long jarg6, OptVectorFunctionGradient jarg6_, long jarg7, double jarg8);
  public final static native long new_OptAugmentedLagrangian__SWIG_4(long jarg1, OptScalarFunction jarg1_, long jarg2, OptScalarFunctionGradient jarg2_, long jarg3, OptVectorFunction jarg3_, long jarg4, OptVectorFunctionGradient jarg4_, long jarg5, OptVectorFunction jarg5_, long jarg6, OptVectorFunctionGradient jarg6_, long jarg7);
  public final static native long new_OptAugmentedLagrangian__SWIG_5(long jarg1, OptScalarFunction jarg1_, long jarg2, OptScalarFunctionGradient jarg2_, long jarg3, OptVectorFunction jarg3_, long jarg4, OptVectorFunctionGradient jarg4_, long jarg5, OptVectorFunction jarg5_, long jarg6, OptVectorFunctionGradient jarg6_);
  public final static native long new_OptAugmentedLagrangian__SWIG_6(long jarg1, OptAugmentedLagrangian jarg1_);
  public final static native void delete_OptAugmentedLagrangian(long jarg1);
  public final static native void OptAugmentedLagrangian_optimize(long jarg1, OptAugmentedLagrangian jarg1_);
  public final static native long OptAugmentedLagrangian_findFeasiblePoint(long jarg1, OptAugmentedLagrangian jarg1_);
  public final static native long OptAugmentedLagrangian_getObjectiveGradient(long jarg1, OptAugmentedLagrangian jarg1_);
  public final static native long OptAugmentedLagrangian_getInequalityConstraintGradient(long jarg1, OptAugmentedLagrangian jarg1_);
  public final static native long OptAugmentedLagrangian_getEqualityConstraintGradient(long jarg1, OptAugmentedLagrangian jarg1_);
  public final static native double OptAugmentedLagrangian_getXTolerance(long jarg1, OptAugmentedLagrangian jarg1_);
  public final static native void OptAugmentedLagrangian_setXTolerance(long jarg1, OptAugmentedLagrangian jarg1_, double jarg2);
  public final static native double OptAugmentedLagrangian_getConstraintTolerance(long jarg1, OptAugmentedLagrangian jarg1_);
  public final static native void OptAugmentedLagrangian_setConstraintTolerance(long jarg1, OptAugmentedLagrangian jarg1_, double jarg2);
  public final static native double OptAugmentedLagrangian_getPenaltyStartValue(long jarg1, OptAugmentedLagrangian jarg1_);
  public final static native void OptAugmentedLagrangian_setPenaltyStartValue(long jarg1, OptAugmentedLagrangian jarg1_, double jarg2);
  public final static native double OptAugmentedLagrangian_getPenaltyIncreaseFactor(long jarg1, OptAugmentedLagrangian jarg1_);
  public final static native void OptAugmentedLagrangian_setPenaltyIncreaseFactor(long jarg1, OptAugmentedLagrangian jarg1_, double jarg2);
  public final static native long OptAugmentedLagrangian_getHistoryOfInnerIterationPoints(long jarg1, OptAugmentedLagrangian jarg1_);
  public final static native long OptAugmentedLagrangian_getHistoryOfInnerIterationNumbers(long jarg1, OptAugmentedLagrangian jarg1_);
  public final static native void OptAugmentedLagrangian_clone(long jarg1, OptAugmentedLagrangian jarg1_, long jarg2);
  public final static native double OptLogBarrier_DEFAULT_TOLERANCE_get();
  public final static native double OptLogBarrier_DEFAULT_BARRIER_START_VALUE_get();
  public final static native double OptLogBarrier_DEFAULT_BARRIER_DECREASE_FACTOR_get();
  public final static native long new_OptLogBarrier__SWIG_0(long jarg1, OptScalarFunction jarg1_, long jarg2, OptScalarFunctionGradient jarg2_, long jarg3, OptVectorFunction jarg3_, long jarg4, OptVectorFunctionGradient jarg4_, long jarg5, double jarg6, double jarg7, double jarg8);
  public final static native long new_OptLogBarrier__SWIG_1(long jarg1, OptScalarFunction jarg1_, long jarg2, OptScalarFunctionGradient jarg2_, long jarg3, OptVectorFunction jarg3_, long jarg4, OptVectorFunctionGradient jarg4_, long jarg5, double jarg6, double jarg7);
  public final static native long new_OptLogBarrier__SWIG_2(long jarg1, OptScalarFunction jarg1_, long jarg2, OptScalarFunctionGradient jarg2_, long jarg3, OptVectorFunction jarg3_, long jarg4, OptVectorFunctionGradient jarg4_, long jarg5, double jarg6);
  public final static native long new_OptLogBarrier__SWIG_3(long jarg1, OptScalarFunction jarg1_, long jarg2, OptScalarFunctionGradient jarg2_, long jarg3, OptVectorFunction jarg3_, long jarg4, OptVectorFunctionGradient jarg4_, long jarg5);
  public final static native long new_OptLogBarrier__SWIG_4(long jarg1, OptScalarFunction jarg1_, long jarg2, OptScalarFunctionGradient jarg2_, long jarg3, OptVectorFunction jarg3_, long jarg4, OptVectorFunctionGradient jarg4_);
  public final static native long new_OptLogBarrier__SWIG_5(long jarg1, OptLogBarrier jarg1_);
  public final static native void delete_OptLogBarrier(long jarg1);
  public final static native void OptLogBarrier_optimize(long jarg1, OptLogBarrier jarg1_);
  public final static native long OptLogBarrier_getObjectiveGradient(long jarg1, OptLogBarrier jarg1_);
  public final static native long OptLogBarrier_getInequalityConstraintGradient(long jarg1, OptLogBarrier jarg1_);
  public final static native double OptLogBarrier_getTolerance(long jarg1, OptLogBarrier jarg1_);
  public final static native void OptLogBarrier_setTolerance(long jarg1, OptLogBarrier jarg1_, double jarg2);
  public final static native double OptLogBarrier_getBarrierStartValue(long jarg1, OptLogBarrier jarg1_);
  public final static native void OptLogBarrier_setBarrierStartValue(long jarg1, OptLogBarrier jarg1_, double jarg2);
  public final static native double OptLogBarrier_getBarrierDecreaseFactor(long jarg1, OptLogBarrier jarg1_);
  public final static native void OptLogBarrier_setBarrierDecreaseFactor(long jarg1, OptLogBarrier jarg1_, double jarg2);
  public final static native long OptLogBarrier_getHistoryOfInnerIterationPoints(long jarg1, OptLogBarrier jarg1_);
  public final static native long OptLogBarrier_getHistoryOfInnerIterationNumbers(long jarg1, OptLogBarrier jarg1_);
  public final static native void OptLogBarrier_clone(long jarg1, OptLogBarrier jarg1_, long jarg2);
  public final static native double OptSquaredPenalty_DEFAULT_X_TOLERANCE_get();
  public final static native double OptSquaredPenalty_DEFAULT_CONSTRAINT_TOLERANCE_get();
  public final static native double OptSquaredPenalty_DEFAULT_PENALTY_START_VALUE_get();
  public final static native double OptSquaredPenalty_DEFAULT_PENALTY_INCREASE_FACTOR_get();
  public final static native long new_OptSquaredPenalty__SWIG_0(long jarg1, OptScalarFunction jarg1_, long jarg2, OptScalarFunctionGradient jarg2_, long jarg3, OptVectorFunction jarg3_, long jarg4, OptVectorFunctionGradient jarg4_, long jarg5, OptVectorFunction jarg5_, long jarg6, OptVectorFunctionGradient jarg6_, long jarg7, double jarg8, double jarg9, double jarg10, double jarg11);
  public final static native long new_OptSquaredPenalty__SWIG_1(long jarg1, OptScalarFunction jarg1_, long jarg2, OptScalarFunctionGradient jarg2_, long jarg3, OptVectorFunction jarg3_, long jarg4, OptVectorFunctionGradient jarg4_, long jarg5, OptVectorFunction jarg5_, long jarg6, OptVectorFunctionGradient jarg6_, long jarg7, double jarg8, double jarg9, double jarg10);
  public final static native long new_OptSquaredPenalty__SWIG_2(long jarg1, OptScalarFunction jarg1_, long jarg2, OptScalarFunctionGradient jarg2_, long jarg3, OptVectorFunction jarg3_, long jarg4, OptVectorFunctionGradient jarg4_, long jarg5, OptVectorFunction jarg5_, long jarg6, OptVectorFunctionGradient jarg6_, long jarg7, double jarg8, double jarg9);
  public final static native long new_OptSquaredPenalty__SWIG_3(long jarg1, OptScalarFunction jarg1_, long jarg2, OptScalarFunctionGradient jarg2_, long jarg3, OptVectorFunction jarg3_, long jarg4, OptVectorFunctionGradient jarg4_, long jarg5, OptVectorFunction jarg5_, long jarg6, OptVectorFunctionGradient jarg6_, long jarg7, double jarg8);
  public final static native long new_OptSquaredPenalty__SWIG_4(long jarg1, OptScalarFunction jarg1_, long jarg2, OptScalarFunctionGradient jarg2_, long jarg3, OptVectorFunction jarg3_, long jarg4, OptVectorFunctionGradient jarg4_, long jarg5, OptVectorFunction jarg5_, long jarg6, OptVectorFunctionGradient jarg6_, long jarg7);
  public final static native long new_OptSquaredPenalty__SWIG_5(long jarg1, OptScalarFunction jarg1_, long jarg2, OptScalarFunctionGradient jarg2_, long jarg3, OptVectorFunction jarg3_, long jarg4, OptVectorFunctionGradient jarg4_, long jarg5, OptVectorFunction jarg5_, long jarg6, OptVectorFunctionGradient jarg6_);
  public final static native long new_OptSquaredPenalty__SWIG_6(long jarg1, OptSquaredPenalty jarg1_);
  public final static native void delete_OptSquaredPenalty(long jarg1);
  public final static native void OptSquaredPenalty_optimize(long jarg1, OptSquaredPenalty jarg1_);
  public final static native long OptSquaredPenalty_getObjectiveGradient(long jarg1, OptSquaredPenalty jarg1_);
  public final static native long OptSquaredPenalty_getInequalityConstraintGradient(long jarg1, OptSquaredPenalty jarg1_);
  public final static native long OptSquaredPenalty_getEqualityConstraintGradient(long jarg1, OptSquaredPenalty jarg1_);
  public final static native double OptSquaredPenalty_getXTolerance(long jarg1, OptSquaredPenalty jarg1_);
  public final static native void OptSquaredPenalty_setXTolerance(long jarg1, OptSquaredPenalty jarg1_, double jarg2);
  public final static native double OptSquaredPenalty_getConstraintTolerance(long jarg1, OptSquaredPenalty jarg1_);
  public final static native void OptSquaredPenalty_setConstraintTolerance(long jarg1, OptSquaredPenalty jarg1_, double jarg2);
  public final static native double OptSquaredPenalty_getPenaltyStartValue(long jarg1, OptSquaredPenalty jarg1_);
  public final static native void OptSquaredPenalty_setPenaltyStartValue(long jarg1, OptSquaredPenalty jarg1_, double jarg2);
  public final static native double OptSquaredPenalty_getPenaltyIncreaseFactor(long jarg1, OptSquaredPenalty jarg1_);
  public final static native void OptSquaredPenalty_setPenaltyIncreaseFactor(long jarg1, OptSquaredPenalty jarg1_, double jarg2);
  public final static native long OptSquaredPenalty_getHistoryOfInnerIterationPoints(long jarg1, OptSquaredPenalty jarg1_);
  public final static native long OptSquaredPenalty_getHistoryOfInnerIterationNumbers(long jarg1, OptSquaredPenalty jarg1_);
  public final static native void OptSquaredPenalty_clone(long jarg1, OptSquaredPenalty jarg1_, long jarg2);
  public final static native void delete_OptTestScalarFunction(long jarg1);
  public final static native double OptTestScalarFunction_eval(long jarg1, OptTestScalarFunction jarg1_, long jarg2, DataVector jarg2_);
  public final static native double OptTestScalarFunction_evalUndisplaced(long jarg1, OptTestScalarFunction jarg1_, long jarg2, DataVector jarg2_);
  public final static native long OptTestScalarFunction_getDisplacement(long jarg1, OptTestScalarFunction jarg1_);
  public final static native void OptTestScalarFunction_setDisplacement(long jarg1, OptTestScalarFunction jarg1_, long jarg2, DataVector jarg2_);
  public final static native void delete_OptTestVectorFunction(long jarg1);
  public final static native void OptTestVectorFunction_eval(long jarg1, OptTestVectorFunction jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_);
  public final static native void OptTestVectorFunction_evalUndisplaced(long jarg1, OptTestVectorFunction jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_);
  public final static native long OptTestVectorFunction_getDisplacement(long jarg1, OptTestVectorFunction jarg1_);
  public final static native void OptTestVectorFunction_setDisplacement(long jarg1, OptTestVectorFunction jarg1_, long jarg2, DataVector jarg2_);
  public final static native double OptUnconstrainedTestProblem_DEFAULT_STANDARD_DEVIATION_get();
  public final static native void delete_OptUnconstrainedTestProblem(long jarg1);
  public final static native long OptUnconstrainedTestProblem_getObjectiveFunction(long jarg1, OptUnconstrainedTestProblem jarg1_);
  public final static native double OptUnconstrainedTestProblem_getOptimalPoint(long jarg1, OptUnconstrainedTestProblem jarg1_, long jarg2, DataVector jarg2_);
  public final static native double OptUnconstrainedTestProblem_getOptimalPointUndisplaced(long jarg1, OptUnconstrainedTestProblem jarg1_, long jarg2, DataVector jarg2_);
  public final static native void OptUnconstrainedTestProblem_generateDisplacement__SWIG_0(long jarg1, OptUnconstrainedTestProblem jarg1_);
  public final static native void OptUnconstrainedTestProblem_generateDisplacement__SWIG_1(long jarg1, OptUnconstrainedTestProblem jarg1_, double jarg2);
  public final static native long OptUnconstrainedTestProblem_getDisplacement(long jarg1, OptUnconstrainedTestProblem jarg1_);
  public final static native void OptUnconstrainedTestProblem_setDisplacement(long jarg1, OptUnconstrainedTestProblem jarg1_, long jarg2, DataVector jarg2_);
  public final static native long new_AbsoluteValueObjective(long jarg1);
  public final static native void delete_AbsoluteValueObjective(long jarg1);
  public final static native double AbsoluteValueObjective_evalUndisplaced(long jarg1, AbsoluteValueObjective jarg1_, long jarg2, DataVector jarg2_);
  public final static native void AbsoluteValueObjective_clone(long jarg1, AbsoluteValueObjective jarg1_, long jarg2);
  public final static native long new_OptAbsoluteValueObjective(long jarg1);
  public final static native void delete_OptAbsoluteValueObjective(long jarg1);
  public final static native long OptAbsoluteValueObjective_getObjectiveFunction(long jarg1, OptAbsoluteValueObjective jarg1_);
  public final static native double OptAbsoluteValueObjective_getOptimalPointUndisplaced(long jarg1, OptAbsoluteValueObjective jarg1_, long jarg2, DataVector jarg2_);
  public final static native long new_OptAckleyObjective(long jarg1);
  public final static native void delete_OptAckleyObjective(long jarg1);
  public final static native double OptAckleyObjective_evalUndisplaced(long jarg1, OptAckleyObjective jarg1_, long jarg2, DataVector jarg2_);
  public final static native void OptAckleyObjective_clone(long jarg1, OptAckleyObjective jarg1_, long jarg2);
  public final static native long new_OptAckley(long jarg1);
  public final static native void delete_OptAckley(long jarg1);
  public final static native long OptAckley_getObjectiveFunction(long jarg1, OptAckley jarg1_);
  public final static native double OptAckley_getOptimalPointUndisplaced(long jarg1, OptAckley jarg1_, long jarg2, DataVector jarg2_);
  public final static native long new_OptBealeObjective();
  public final static native void delete_OptBealeObjective(long jarg1);
  public final static native double OptBealeObjective_evalUndisplaced(long jarg1, OptBealeObjective jarg1_, long jarg2, DataVector jarg2_);
  public final static native void OptBealeObjective_clone(long jarg1, OptBealeObjective jarg1_, long jarg2);
  public final static native long new_OptBeale();
  public final static native void delete_OptBeale(long jarg1);
  public final static native long OptBeale_getObjectiveFunction(long jarg1, OptBeale jarg1_);
  public final static native double OptBeale_getOptimalPointUndisplaced(long jarg1, OptBeale jarg1_, long jarg2, DataVector jarg2_);
  public final static native long new_OptBraninObjective();
  public final static native void delete_OptBraninObjective(long jarg1);
  public final static native double OptBraninObjective_evalUndisplaced(long jarg1, OptBraninObjective jarg1_, long jarg2, DataVector jarg2_);
  public final static native void OptBraninObjective_clone(long jarg1, OptBraninObjective jarg1_, long jarg2);
  public final static native long new_OptBranin();
  public final static native void delete_OptBranin(long jarg1);
  public final static native long OptBranin_getObjectiveFunction(long jarg1, OptBranin jarg1_);
  public final static native double OptBranin_getOptimalPointUndisplaced(long jarg1, OptBranin jarg1_, long jarg2, DataVector jarg2_);
  public final static native long new_OptBubbleWrapObjective(long jarg1);
  public final static native void delete_OptBubbleWrapObjective(long jarg1);
  public final static native double OptBubbleWrapObjective_evalUndisplaced(long jarg1, OptBubbleWrapObjective jarg1_, long jarg2, DataVector jarg2_);
  public final static native void OptBubbleWrapObjective_clone(long jarg1, OptBubbleWrapObjective jarg1_, long jarg2);
  public final static native long new_OptBubbleWrap(long jarg1);
  public final static native void delete_OptBubbleWrap(long jarg1);
  public final static native long OptBubbleWrap_getObjectiveFunction(long jarg1, OptBubbleWrap jarg1_);
  public final static native double OptBubbleWrap_getOptimalPointUndisplaced(long jarg1, OptBubbleWrap jarg1_, long jarg2, DataVector jarg2_);
  public final static native long new_OptEasomYangObjective(long jarg1);
  public final static native void delete_OptEasomYangObjective(long jarg1);
  public final static native double OptEasomYangObjective_evalUndisplaced(long jarg1, OptEasomYangObjective jarg1_, long jarg2, DataVector jarg2_);
  public final static native void OptEasomYangObjective_clone(long jarg1, OptEasomYangObjective jarg1_, long jarg2);
  public final static native long new_OptEasomYang(long jarg1);
  public final static native void delete_OptEasomYang(long jarg1);
  public final static native long OptEasomYang_getObjectiveFunction(long jarg1, OptEasomYang jarg1_);
  public final static native double OptEasomYang_getOptimalPointUndisplaced(long jarg1, OptEasomYang jarg1_, long jarg2, DataVector jarg2_);
  public final static native long new_OptEggholderObjective();
  public final static native void delete_OptEggholderObjective(long jarg1);
  public final static native double OptEggholderObjective_evalUndisplaced(long jarg1, OptEggholderObjective jarg1_, long jarg2, DataVector jarg2_);
  public final static native void OptEggholderObjective_clone(long jarg1, OptEggholderObjective jarg1_, long jarg2);
  public final static native long new_OptEggholder();
  public final static native void delete_OptEggholder(long jarg1);
  public final static native long OptEggholder_getObjectiveFunction(long jarg1, OptEggholder jarg1_);
  public final static native double OptEggholder_getOptimalPointUndisplaced(long jarg1, OptEggholder jarg1_, long jarg2, DataVector jarg2_);
  public final static native long new_OptGoldsteinPriceObjective();
  public final static native void delete_OptGoldsteinPriceObjective(long jarg1);
  public final static native double OptGoldsteinPriceObjective_evalUndisplaced(long jarg1, OptGoldsteinPriceObjective jarg1_, long jarg2, DataVector jarg2_);
  public final static native void OptGoldsteinPriceObjective_clone(long jarg1, OptGoldsteinPriceObjective jarg1_, long jarg2);
  public final static native long new_OptGoldsteinPrice();
  public final static native void delete_OptGoldsteinPrice(long jarg1);
  public final static native long OptGoldsteinPrice_getObjectiveFunction(long jarg1, OptGoldsteinPrice jarg1_);
  public final static native double OptGoldsteinPrice_getOptimalPointUndisplaced(long jarg1, OptGoldsteinPrice jarg1_, long jarg2, DataVector jarg2_);
  public final static native long new_OptGriewankObjective(long jarg1);
  public final static native void delete_OptGriewankObjective(long jarg1);
  public final static native double OptGriewankObjective_evalUndisplaced(long jarg1, OptGriewankObjective jarg1_, long jarg2, DataVector jarg2_);
  public final static native void OptGriewankObjective_clone(long jarg1, OptGriewankObjective jarg1_, long jarg2);
  public final static native long new_OptGriewank(long jarg1);
  public final static native void delete_OptGriewank(long jarg1);
  public final static native long OptGriewank_getObjectiveFunction(long jarg1, OptGriewank jarg1_);
  public final static native double OptGriewank_getOptimalPointUndisplaced(long jarg1, OptGriewank jarg1_, long jarg2, DataVector jarg2_);
  public final static native long new_OptHartman3Objective();
  public final static native void delete_OptHartman3Objective(long jarg1);
  public final static native double OptHartman3Objective_evalUndisplaced(long jarg1, OptHartman3Objective jarg1_, long jarg2, DataVector jarg2_);
  public final static native void OptHartman3Objective_clone(long jarg1, OptHartman3Objective jarg1_, long jarg2);
  public final static native long new_OptHartman3();
  public final static native void delete_OptHartman3(long jarg1);
  public final static native long OptHartman3_getObjectiveFunction(long jarg1, OptHartman3 jarg1_);
  public final static native double OptHartman3_getOptimalPointUndisplaced(long jarg1, OptHartman3 jarg1_, long jarg2, DataVector jarg2_);
  public final static native long new_OptHartman6Objective();
  public final static native void delete_OptHartman6Objective(long jarg1);
  public final static native double OptHartman6Objective_evalUndisplaced(long jarg1, OptHartman6Objective jarg1_, long jarg2, DataVector jarg2_);
  public final static native void OptHartman6Objective_clone(long jarg1, OptHartman6Objective jarg1_, long jarg2);
  public final static native long new_OptHartman6();
  public final static native void delete_OptHartman6(long jarg1);
  public final static native long OptHartman6_getObjectiveFunction(long jarg1, OptHartman6 jarg1_);
  public final static native double OptHartman6_getOptimalPointUndisplaced(long jarg1, OptHartman6 jarg1_, long jarg2, DataVector jarg2_);
  public final static native long new_OptHimmelblauObjective();
  public final static native void delete_OptHimmelblauObjective(long jarg1);
  public final static native double OptHimmelblauObjective_evalUndisplaced(long jarg1, OptHimmelblauObjective jarg1_, long jarg2, DataVector jarg2_);
  public final static native void OptHimmelblauObjective_clone(long jarg1, OptHimmelblauObjective jarg1_, long jarg2);
  public final static native long new_OptHimmelblau();
  public final static native void delete_OptHimmelblau(long jarg1);
  public final static native long OptHimmelblau_getObjectiveFunction(long jarg1, OptHimmelblau jarg1_);
  public final static native double OptHimmelblau_getOptimalPointUndisplaced(long jarg1, OptHimmelblau jarg1_, long jarg2, DataVector jarg2_);
  public final static native long new_OptHoelderTableObjective();
  public final static native void delete_OptHoelderTableObjective(long jarg1);
  public final static native double OptHoelderTableObjective_evalUndisplaced(long jarg1, OptHoelderTableObjective jarg1_, long jarg2, DataVector jarg2_);
  public final static native void OptHoelderTableObjective_clone(long jarg1, OptHoelderTableObjective jarg1_, long jarg2);
  public final static native long new_OptHoelderTable();
  public final static native void delete_OptHoelderTable(long jarg1);
  public final static native long OptHoelderTable_getObjectiveFunction(long jarg1, OptHoelderTable jarg1_);
  public final static native double OptHoelderTable_getOptimalPointUndisplaced(long jarg1, OptHoelderTable jarg1_, long jarg2, DataVector jarg2_);
  public final static native long new_OptIncreasingPowerObjective(long jarg1);
  public final static native void delete_OptIncreasingPowerObjective(long jarg1);
  public final static native double OptIncreasingPowerObjective_evalUndisplaced(long jarg1, OptIncreasingPowerObjective jarg1_, long jarg2, DataVector jarg2_);
  public final static native void OptIncreasingPowerObjective_clone(long jarg1, OptIncreasingPowerObjective jarg1_, long jarg2);
  public final static native long new_OptIncreasingPower(long jarg1);
  public final static native void delete_OptIncreasingPower(long jarg1);
  public final static native long OptIncreasingPower_getObjectiveFunction(long jarg1, OptIncreasingPower jarg1_);
  public final static native double OptIncreasingPower_getOptimalPointUndisplaced(long jarg1, OptIncreasingPower jarg1_, long jarg2, DataVector jarg2_);
  public final static native long new_OptMichalewiczObjective();
  public final static native void delete_OptMichalewiczObjective(long jarg1);
  public final static native double OptMichalewiczObjective_evalUndisplaced(long jarg1, OptMichalewiczObjective jarg1_, long jarg2, DataVector jarg2_);
  public final static native void OptMichalewiczObjective_clone(long jarg1, OptMichalewiczObjective jarg1_, long jarg2);
  public final static native long new_OptMichalewicz();
  public final static native void delete_OptMichalewicz(long jarg1);
  public final static native long OptMichalewicz_getObjectiveFunction(long jarg1, OptMichalewicz jarg1_);
  public final static native double OptMichalewicz_getOptimalPointUndisplaced(long jarg1, OptMichalewicz jarg1_, long jarg2, DataVector jarg2_);
  public final static native long new_OptMladineoObjective();
  public final static native void delete_OptMladineoObjective(long jarg1);
  public final static native double OptMladineoObjective_evalUndisplaced(long jarg1, OptMladineoObjective jarg1_, long jarg2, DataVector jarg2_);
  public final static native void OptMladineoObjective_clone(long jarg1, OptMladineoObjective jarg1_, long jarg2);
  public final static native long new_OptMladineo();
  public final static native void delete_OptMladineo(long jarg1);
  public final static native long OptMladineo_getObjectiveFunction(long jarg1, OptMladineo jarg1_);
  public final static native double OptMladineo_getOptimalPointUndisplaced(long jarg1, OptMladineo jarg1_, long jarg2, DataVector jarg2_);
  public final static native long new_OptPermObjective(long jarg1);
  public final static native void delete_OptPermObjective(long jarg1);
  public final static native double OptPermObjective_evalUndisplaced(long jarg1, OptPermObjective jarg1_, long jarg2, DataVector jarg2_);
  public final static native void OptPermObjective_clone(long jarg1, OptPermObjective jarg1_, long jarg2);
  public final static native long new_OptPerm(long jarg1);
  public final static native void delete_OptPerm(long jarg1);
  public final static native long OptPerm_getObjectiveFunction(long jarg1, OptPerm jarg1_);
  public final static native double OptPerm_getOptimalPointUndisplaced(long jarg1, OptPerm jarg1_, long jarg2, DataVector jarg2_);
  public final static native long new_OptRastriginObjective(long jarg1);
  public final static native void delete_OptRastriginObjective(long jarg1);
  public final static native double OptRastriginObjective_evalUndisplaced(long jarg1, OptRastriginObjective jarg1_, long jarg2, DataVector jarg2_);
  public final static native void OptRastriginObjective_clone(long jarg1, OptRastriginObjective jarg1_, long jarg2);
  public final static native long new_OptRastrigin(long jarg1);
  public final static native void delete_OptRastrigin(long jarg1);
  public final static native long OptRastrigin_getObjectiveFunction(long jarg1, OptRastrigin jarg1_);
  public final static native double OptRastrigin_getOptimalPointUndisplaced(long jarg1, OptRastrigin jarg1_, long jarg2, DataVector jarg2_);
  public final static native long new_OptRosenbrockObjective(long jarg1);
  public final static native void delete_OptRosenbrockObjective(long jarg1);
  public final static native double OptRosenbrockObjective_evalUndisplaced(long jarg1, OptRosenbrockObjective jarg1_, long jarg2, DataVector jarg2_);
  public final static native void OptRosenbrockObjective_clone(long jarg1, OptRosenbrockObjective jarg1_, long jarg2);
  public final static native long new_OptRosenbrock(long jarg1);
  public final static native void delete_OptRosenbrock(long jarg1);
  public final static native long OptRosenbrock_getObjectiveFunction(long jarg1, OptRosenbrock jarg1_);
  public final static native double OptRosenbrock_getOptimalPointUndisplaced(long jarg1, OptRosenbrock jarg1_, long jarg2, DataVector jarg2_);
  public final static native long new_OptSHCBObjective();
  public final static native void delete_OptSHCBObjective(long jarg1);
  public final static native double OptSHCBObjective_evalUndisplaced(long jarg1, OptSHCBObjective jarg1_, long jarg2, DataVector jarg2_);
  public final static native void OptSHCBObjective_clone(long jarg1, OptSHCBObjective jarg1_, long jarg2);
  public final static native long new_OptSHCB();
  public final static native void delete_OptSHCB(long jarg1);
  public final static native long OptSHCB_getObjectiveFunction(long jarg1, OptSHCB jarg1_);
  public final static native double OptSHCB_getOptimalPointUndisplaced(long jarg1, OptSHCB jarg1_, long jarg2, DataVector jarg2_);
  public final static native long new_OptSchwefelObjective(long jarg1);
  public final static native void delete_OptSchwefelObjective(long jarg1);
  public final static native double OptSchwefelObjective_evalUndisplaced(long jarg1, OptSchwefelObjective jarg1_, long jarg2, DataVector jarg2_);
  public final static native void OptSchwefelObjective_clone(long jarg1, OptSchwefelObjective jarg1_, long jarg2);
  public final static native long new_OptSchwefel(long jarg1);
  public final static native void delete_OptSchwefel(long jarg1);
  public final static native long OptSchwefel_getObjectiveFunction(long jarg1, OptSchwefel jarg1_);
  public final static native double OptSchwefel_getOptimalPointUndisplaced(long jarg1, OptSchwefel jarg1_, long jarg2, DataVector jarg2_);
  public final static native long new_OptSphereObjective(long jarg1);
  public final static native void delete_OptSphereObjective(long jarg1);
  public final static native double OptSphereObjective_evalUndisplaced(long jarg1, OptSphereObjective jarg1_, long jarg2, DataVector jarg2_);
  public final static native void OptSphereObjective_clone(long jarg1, OptSphereObjective jarg1_, long jarg2);
  public final static native long new_OptSphere(long jarg1);
  public final static native void delete_OptSphere(long jarg1);
  public final static native long OptSphere_getObjectiveFunction(long jarg1, OptSphere jarg1_);
  public final static native double OptSphere_getOptimalPointUndisplaced(long jarg1, OptSphere jarg1_, long jarg2, DataVector jarg2_);
  public final static native long new_OptTremblingParabolaObjective(long jarg1, long jarg2);
  public final static native void delete_OptTremblingParabolaObjective(long jarg1);
  public final static native double OptTremblingParabolaObjective_evalUndisplaced(long jarg1, OptTremblingParabolaObjective jarg1_, long jarg2, DataVector jarg2_);
  public final static native void OptTremblingParabolaObjective_clone(long jarg1, OptTremblingParabolaObjective jarg1_, long jarg2);
  public final static native long new_OptTremblingParabola(long jarg1, long jarg2);
  public final static native void delete_OptTremblingParabola(long jarg1);
  public final static native long OptTremblingParabola_getObjectiveFunction(long jarg1, OptTremblingParabola jarg1_);
  public final static native double OptTremblingParabola_getOptimalPointUndisplaced(long jarg1, OptTremblingParabola jarg1_, long jarg2, DataVector jarg2_);
  public final static native double OptConstrainedTestProblem_DEFAULT_STANDARD_DEVIATION_get();
  public final static native void delete_OptConstrainedTestProblem(long jarg1);
  public final static native long OptConstrainedTestProblem_getObjectiveFunction(long jarg1, OptConstrainedTestProblem jarg1_);
  public final static native long OptConstrainedTestProblem_getInequalityConstraintFunction(long jarg1, OptConstrainedTestProblem jarg1_);
  public final static native long OptConstrainedTestProblem_getEqualityConstraintFunction(long jarg1, OptConstrainedTestProblem jarg1_);
  public final static native double OptConstrainedTestProblem_getOptimalPoint(long jarg1, OptConstrainedTestProblem jarg1_, long jarg2, DataVector jarg2_);
  public final static native double OptConstrainedTestProblem_getOptimalPointUndisplaced(long jarg1, OptConstrainedTestProblem jarg1_, long jarg2, DataVector jarg2_);
  public final static native void OptConstrainedTestProblem_generateDisplacement__SWIG_0(long jarg1, OptConstrainedTestProblem jarg1_);
  public final static native void OptConstrainedTestProblem_generateDisplacement__SWIG_1(long jarg1, OptConstrainedTestProblem jarg1_, double jarg2);
  public final static native long OptConstrainedTestProblem_getDisplacement(long jarg1, OptConstrainedTestProblem jarg1_);
  public final static native void OptConstrainedTestProblem_setDisplacement(long jarg1, OptConstrainedTestProblem jarg1_, long jarg2, DataVector jarg2_);
  public final static native long new_OptFloudasObjective();
  public final static native void delete_OptFloudasObjective(long jarg1);
  public final static native double OptFloudasObjective_evalUndisplaced(long jarg1, OptFloudasObjective jarg1_, long jarg2, DataVector jarg2_);
  public final static native void OptFloudasObjective_clone(long jarg1, OptFloudasObjective jarg1_, long jarg2);
  public final static native long new_OptFloudasInequalityConstraint();
  public final static native void delete_OptFloudasInequalityConstraint(long jarg1);
  public final static native void OptFloudasInequalityConstraint_evalUndisplaced(long jarg1, OptFloudasInequalityConstraint jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_);
  public final static native void OptFloudasInequalityConstraint_clone(long jarg1, OptFloudasInequalityConstraint jarg1_, long jarg2);
  public final static native long new_OptFloudasEqualityConstraint();
  public final static native void delete_OptFloudasEqualityConstraint(long jarg1);
  public final static native void OptFloudasEqualityConstraint_evalUndisplaced(long jarg1, OptFloudasEqualityConstraint jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_);
  public final static native void OptFloudasEqualityConstraint_clone(long jarg1, OptFloudasEqualityConstraint jarg1_, long jarg2);
  public final static native long new_OptFloudas();
  public final static native void delete_OptFloudas(long jarg1);
  public final static native long OptFloudas_getObjectiveFunction(long jarg1, OptFloudas jarg1_);
  public final static native long OptFloudas_getInequalityConstraintFunction(long jarg1, OptFloudas jarg1_);
  public final static native long OptFloudas_getEqualityConstraintFunction(long jarg1, OptFloudas jarg1_);
  public final static native double OptFloudas_getOptimalPointUndisplaced(long jarg1, OptFloudas jarg1_, long jarg2, DataVector jarg2_);
  public final static native long new_OptG03Objective(long jarg1);
  public final static native void delete_OptG03Objective(long jarg1);
  public final static native double OptG03Objective_evalUndisplaced(long jarg1, OptG03Objective jarg1_, long jarg2, DataVector jarg2_);
  public final static native void OptG03Objective_clone(long jarg1, OptG03Objective jarg1_, long jarg2);
  public final static native long new_OptG03InequalityConstraint(long jarg1);
  public final static native void delete_OptG03InequalityConstraint(long jarg1);
  public final static native void OptG03InequalityConstraint_evalUndisplaced(long jarg1, OptG03InequalityConstraint jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_);
  public final static native void OptG03InequalityConstraint_clone(long jarg1, OptG03InequalityConstraint jarg1_, long jarg2);
  public final static native long new_OptG03EqualityConstraint(long jarg1);
  public final static native void delete_OptG03EqualityConstraint(long jarg1);
  public final static native void OptG03EqualityConstraint_evalUndisplaced(long jarg1, OptG03EqualityConstraint jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_);
  public final static native void OptG03EqualityConstraint_clone(long jarg1, OptG03EqualityConstraint jarg1_, long jarg2);
  public final static native long new_OptG03(long jarg1);
  public final static native void delete_OptG03(long jarg1);
  public final static native long OptG03_getObjectiveFunction(long jarg1, OptG03 jarg1_);
  public final static native long OptG03_getInequalityConstraintFunction(long jarg1, OptG03 jarg1_);
  public final static native long OptG03_getEqualityConstraintFunction(long jarg1, OptG03 jarg1_);
  public final static native double OptG03_getOptimalPointUndisplaced(long jarg1, OptG03 jarg1_, long jarg2, DataVector jarg2_);
  public final static native long new_OptG04Objective();
  public final static native void delete_OptG04Objective(long jarg1);
  public final static native double OptG04Objective_evalUndisplaced(long jarg1, OptG04Objective jarg1_, long jarg2, DataVector jarg2_);
  public final static native void OptG04Objective_clone(long jarg1, OptG04Objective jarg1_, long jarg2);
  public final static native long new_OptG04InequalityConstraint();
  public final static native void delete_OptG04InequalityConstraint(long jarg1);
  public final static native void OptG04InequalityConstraint_evalUndisplaced(long jarg1, OptG04InequalityConstraint jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_);
  public final static native void OptG04InequalityConstraint_clone(long jarg1, OptG04InequalityConstraint jarg1_, long jarg2);
  public final static native long new_OptG04EqualityConstraint();
  public final static native void delete_OptG04EqualityConstraint(long jarg1);
  public final static native void OptG04EqualityConstraint_evalUndisplaced(long jarg1, OptG04EqualityConstraint jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_);
  public final static native void OptG04EqualityConstraint_clone(long jarg1, OptG04EqualityConstraint jarg1_, long jarg2);
  public final static native long new_OptG04();
  public final static native void delete_OptG04(long jarg1);
  public final static native long OptG04_getObjectiveFunction(long jarg1, OptG04 jarg1_);
  public final static native long OptG04_getInequalityConstraintFunction(long jarg1, OptG04 jarg1_);
  public final static native long OptG04_getEqualityConstraintFunction(long jarg1, OptG04 jarg1_);
  public final static native double OptG04_getOptimalPointUndisplaced(long jarg1, OptG04 jarg1_, long jarg2, DataVector jarg2_);
  public final static native long new_OptG05Objective();
  public final static native void delete_OptG05Objective(long jarg1);
  public final static native double OptG05Objective_evalUndisplaced(long jarg1, OptG05Objective jarg1_, long jarg2, DataVector jarg2_);
  public final static native void OptG05Objective_clone(long jarg1, OptG05Objective jarg1_, long jarg2);
  public final static native long new_OptG05InequalityConstraint();
  public final static native void delete_OptG05InequalityConstraint(long jarg1);
  public final static native void OptG05InequalityConstraint_evalUndisplaced(long jarg1, OptG05InequalityConstraint jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_);
  public final static native void OptG05InequalityConstraint_clone(long jarg1, OptG05InequalityConstraint jarg1_, long jarg2);
  public final static native long new_OptG05EqualityConstraint();
  public final static native void delete_OptG05EqualityConstraint(long jarg1);
  public final static native void OptG05EqualityConstraint_evalUndisplaced(long jarg1, OptG05EqualityConstraint jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_);
  public final static native void OptG05EqualityConstraint_clone(long jarg1, OptG05EqualityConstraint jarg1_, long jarg2);
  public final static native long new_OptG05();
  public final static native void delete_OptG05(long jarg1);
  public final static native long OptG05_getObjectiveFunction(long jarg1, OptG05 jarg1_);
  public final static native long OptG05_getInequalityConstraintFunction(long jarg1, OptG05 jarg1_);
  public final static native long OptG05_getEqualityConstraintFunction(long jarg1, OptG05 jarg1_);
  public final static native double OptG05_getOptimalPointUndisplaced(long jarg1, OptG05 jarg1_, long jarg2, DataVector jarg2_);
  public final static native long new_OptG06Objective();
  public final static native void delete_OptG06Objective(long jarg1);
  public final static native double OptG06Objective_evalUndisplaced(long jarg1, OptG06Objective jarg1_, long jarg2, DataVector jarg2_);
  public final static native void OptG06Objective_clone(long jarg1, OptG06Objective jarg1_, long jarg2);
  public final static native long new_OptG06InequalityConstraint();
  public final static native void delete_OptG06InequalityConstraint(long jarg1);
  public final static native void OptG06InequalityConstraint_evalUndisplaced(long jarg1, OptG06InequalityConstraint jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_);
  public final static native void OptG06InequalityConstraint_clone(long jarg1, OptG06InequalityConstraint jarg1_, long jarg2);
  public final static native long new_OptG06EqualityConstraint();
  public final static native void delete_OptG06EqualityConstraint(long jarg1);
  public final static native void OptG06EqualityConstraint_evalUndisplaced(long jarg1, OptG06EqualityConstraint jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_);
  public final static native void OptG06EqualityConstraint_clone(long jarg1, OptG06EqualityConstraint jarg1_, long jarg2);
  public final static native long new_OptG06();
  public final static native void delete_OptG06(long jarg1);
  public final static native long OptG06_getObjectiveFunction(long jarg1, OptG06 jarg1_);
  public final static native long OptG06_getInequalityConstraintFunction(long jarg1, OptG06 jarg1_);
  public final static native long OptG06_getEqualityConstraintFunction(long jarg1, OptG06 jarg1_);
  public final static native double OptG06_getOptimalPointUndisplaced(long jarg1, OptG06 jarg1_, long jarg2, DataVector jarg2_);
  public final static native long new_OptG08Objective();
  public final static native void delete_OptG08Objective(long jarg1);
  public final static native double OptG08Objective_evalUndisplaced(long jarg1, OptG08Objective jarg1_, long jarg2, DataVector jarg2_);
  public final static native void OptG08Objective_clone(long jarg1, OptG08Objective jarg1_, long jarg2);
  public final static native long new_OptG08InequalityConstraint();
  public final static native void delete_OptG08InequalityConstraint(long jarg1);
  public final static native void OptG08InequalityConstraint_evalUndisplaced(long jarg1, OptG08InequalityConstraint jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_);
  public final static native void OptG08InequalityConstraint_clone(long jarg1, OptG08InequalityConstraint jarg1_, long jarg2);
  public final static native long new_OptG08EqualityConstraint();
  public final static native void delete_OptG08EqualityConstraint(long jarg1);
  public final static native void OptG08EqualityConstraint_evalUndisplaced(long jarg1, OptG08EqualityConstraint jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_);
  public final static native void OptG08EqualityConstraint_clone(long jarg1, OptG08EqualityConstraint jarg1_, long jarg2);
  public final static native long new_OptG08();
  public final static native void delete_OptG08(long jarg1);
  public final static native long OptG08_getObjectiveFunction(long jarg1, OptG08 jarg1_);
  public final static native long OptG08_getInequalityConstraintFunction(long jarg1, OptG08 jarg1_);
  public final static native long OptG08_getEqualityConstraintFunction(long jarg1, OptG08 jarg1_);
  public final static native double OptG08_getOptimalPointUndisplaced(long jarg1, OptG08 jarg1_, long jarg2, DataVector jarg2_);
  public final static native long new_OptG09Objective();
  public final static native void delete_OptG09Objective(long jarg1);
  public final static native double OptG09Objective_evalUndisplaced(long jarg1, OptG09Objective jarg1_, long jarg2, DataVector jarg2_);
  public final static native void OptG09Objective_clone(long jarg1, OptG09Objective jarg1_, long jarg2);
  public final static native long new_OptG09InequalityConstraint();
  public final static native void delete_OptG09InequalityConstraint(long jarg1);
  public final static native void OptG09InequalityConstraint_evalUndisplaced(long jarg1, OptG09InequalityConstraint jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_);
  public final static native void OptG09InequalityConstraint_clone(long jarg1, OptG09InequalityConstraint jarg1_, long jarg2);
  public final static native long new_OptG09EqualityConstraint();
  public final static native void delete_OptG09EqualityConstraint(long jarg1);
  public final static native void OptG09EqualityConstraint_evalUndisplaced(long jarg1, OptG09EqualityConstraint jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_);
  public final static native void OptG09EqualityConstraint_clone(long jarg1, OptG09EqualityConstraint jarg1_, long jarg2);
  public final static native long new_OptG09();
  public final static native void delete_OptG09(long jarg1);
  public final static native long OptG09_getObjectiveFunction(long jarg1, OptG09 jarg1_);
  public final static native long OptG09_getInequalityConstraintFunction(long jarg1, OptG09 jarg1_);
  public final static native long OptG09_getEqualityConstraintFunction(long jarg1, OptG09 jarg1_);
  public final static native double OptG09_getOptimalPointUndisplaced(long jarg1, OptG09 jarg1_, long jarg2, DataVector jarg2_);
  public final static native long new_OptG10Objective();
  public final static native void delete_OptG10Objective(long jarg1);
  public final static native double OptG10Objective_evalUndisplaced(long jarg1, OptG10Objective jarg1_, long jarg2, DataVector jarg2_);
  public final static native void OptG10Objective_clone(long jarg1, OptG10Objective jarg1_, long jarg2);
  public final static native long new_OptG10InequalityConstraint();
  public final static native void delete_OptG10InequalityConstraint(long jarg1);
  public final static native void OptG10InequalityConstraint_evalUndisplaced(long jarg1, OptG10InequalityConstraint jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_);
  public final static native void OptG10InequalityConstraint_clone(long jarg1, OptG10InequalityConstraint jarg1_, long jarg2);
  public final static native long new_OptG10EqualityConstraint();
  public final static native void delete_OptG10EqualityConstraint(long jarg1);
  public final static native void OptG10EqualityConstraint_evalUndisplaced(long jarg1, OptG10EqualityConstraint jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_);
  public final static native void OptG10EqualityConstraint_clone(long jarg1, OptG10EqualityConstraint jarg1_, long jarg2);
  public final static native long new_OptG10();
  public final static native void delete_OptG10(long jarg1);
  public final static native long OptG10_getObjectiveFunction(long jarg1, OptG10 jarg1_);
  public final static native long OptG10_getInequalityConstraintFunction(long jarg1, OptG10 jarg1_);
  public final static native long OptG10_getEqualityConstraintFunction(long jarg1, OptG10 jarg1_);
  public final static native double OptG10_getOptimalPointUndisplaced(long jarg1, OptG10 jarg1_, long jarg2, DataVector jarg2_);
  public final static native long new_OptG11Objective();
  public final static native void delete_OptG11Objective(long jarg1);
  public final static native double OptG11Objective_evalUndisplaced(long jarg1, OptG11Objective jarg1_, long jarg2, DataVector jarg2_);
  public final static native void OptG11Objective_clone(long jarg1, OptG11Objective jarg1_, long jarg2);
  public final static native long new_OptG11InequalityConstraint();
  public final static native void delete_OptG11InequalityConstraint(long jarg1);
  public final static native void OptG11InequalityConstraint_evalUndisplaced(long jarg1, OptG11InequalityConstraint jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_);
  public final static native void OptG11InequalityConstraint_clone(long jarg1, OptG11InequalityConstraint jarg1_, long jarg2);
  public final static native long new_OptG11EqualityConstraint();
  public final static native void delete_OptG11EqualityConstraint(long jarg1);
  public final static native void OptG11EqualityConstraint_evalUndisplaced(long jarg1, OptG11EqualityConstraint jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_);
  public final static native void OptG11EqualityConstraint_clone(long jarg1, OptG11EqualityConstraint jarg1_, long jarg2);
  public final static native long new_OptG11();
  public final static native void delete_OptG11(long jarg1);
  public final static native long OptG11_getObjectiveFunction(long jarg1, OptG11 jarg1_);
  public final static native long OptG11_getInequalityConstraintFunction(long jarg1, OptG11 jarg1_);
  public final static native long OptG11_getEqualityConstraintFunction(long jarg1, OptG11 jarg1_);
  public final static native double OptG11_getOptimalPointUndisplaced(long jarg1, OptG11 jarg1_, long jarg2, DataVector jarg2_);
  public final static native long new_OptG12Objective();
  public final static native void delete_OptG12Objective(long jarg1);
  public final static native double OptG12Objective_evalUndisplaced(long jarg1, OptG12Objective jarg1_, long jarg2, DataVector jarg2_);
  public final static native void OptG12Objective_clone(long jarg1, OptG12Objective jarg1_, long jarg2);
  public final static native long new_OptG12InequalityConstraint();
  public final static native void delete_OptG12InequalityConstraint(long jarg1);
  public final static native void OptG12InequalityConstraint_evalUndisplaced(long jarg1, OptG12InequalityConstraint jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_);
  public final static native void OptG12InequalityConstraint_clone(long jarg1, OptG12InequalityConstraint jarg1_, long jarg2);
  public final static native long new_OptG12EqualityConstraint();
  public final static native void delete_OptG12EqualityConstraint(long jarg1);
  public final static native void OptG12EqualityConstraint_evalUndisplaced(long jarg1, OptG12EqualityConstraint jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_);
  public final static native void OptG12EqualityConstraint_clone(long jarg1, OptG12EqualityConstraint jarg1_, long jarg2);
  public final static native long new_OptG12();
  public final static native void delete_OptG12(long jarg1);
  public final static native long OptG12_getObjectiveFunction(long jarg1, OptG12 jarg1_);
  public final static native long OptG12_getInequalityConstraintFunction(long jarg1, OptG12 jarg1_);
  public final static native long OptG12_getEqualityConstraintFunction(long jarg1, OptG12 jarg1_);
  public final static native double OptG12_getOptimalPointUndisplaced(long jarg1, OptG12 jarg1_, long jarg2, DataVector jarg2_);
  public final static native long new_OptG13Objective();
  public final static native void delete_OptG13Objective(long jarg1);
  public final static native double OptG13Objective_evalUndisplaced(long jarg1, OptG13Objective jarg1_, long jarg2, DataVector jarg2_);
  public final static native void OptG13Objective_clone(long jarg1, OptG13Objective jarg1_, long jarg2);
  public final static native long new_OptG13InequalityConstraint();
  public final static native void delete_OptG13InequalityConstraint(long jarg1);
  public final static native void OptG13InequalityConstraint_evalUndisplaced(long jarg1, OptG13InequalityConstraint jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_);
  public final static native void OptG13InequalityConstraint_clone(long jarg1, OptG13InequalityConstraint jarg1_, long jarg2);
  public final static native long new_OptG13EqualityConstraint();
  public final static native void delete_OptG13EqualityConstraint(long jarg1);
  public final static native void OptG13EqualityConstraint_evalUndisplaced(long jarg1, OptG13EqualityConstraint jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_);
  public final static native void OptG13EqualityConstraint_clone(long jarg1, OptG13EqualityConstraint jarg1_, long jarg2);
  public final static native long new_OptG13();
  public final static native void delete_OptG13(long jarg1);
  public final static native long OptG13_getObjectiveFunction(long jarg1, OptG13 jarg1_);
  public final static native long OptG13_getInequalityConstraintFunction(long jarg1, OptG13 jarg1_);
  public final static native long OptG13_getEqualityConstraintFunction(long jarg1, OptG13 jarg1_);
  public final static native double OptG13_getOptimalPointUndisplaced(long jarg1, OptG13 jarg1_, long jarg2, DataVector jarg2_);
  public final static native long new_OptSimionescuObjective();
  public final static native void delete_OptSimionescuObjective(long jarg1);
  public final static native double OptSimionescuObjective_evalUndisplaced(long jarg1, OptSimionescuObjective jarg1_, long jarg2, DataVector jarg2_);
  public final static native void OptSimionescuObjective_clone(long jarg1, OptSimionescuObjective jarg1_, long jarg2);
  public final static native long new_OptSimionescuInequalityConstraint();
  public final static native void delete_OptSimionescuInequalityConstraint(long jarg1);
  public final static native void OptSimionescuInequalityConstraint_evalUndisplaced(long jarg1, OptSimionescuInequalityConstraint jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_);
  public final static native void OptSimionescuInequalityConstraint_clone(long jarg1, OptSimionescuInequalityConstraint jarg1_, long jarg2);
  public final static native long new_OptSimionescuEqualityConstraint();
  public final static native void delete_OptSimionescuEqualityConstraint(long jarg1);
  public final static native void OptSimionescuEqualityConstraint_evalUndisplaced(long jarg1, OptSimionescuEqualityConstraint jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_);
  public final static native void OptSimionescuEqualityConstraint_clone(long jarg1, OptSimionescuEqualityConstraint jarg1_, long jarg2);
  public final static native long new_OptSimionescu();
  public final static native void delete_OptSimionescu(long jarg1);
  public final static native long OptSimionescu_getObjectiveFunction(long jarg1, OptSimionescu jarg1_);
  public final static native long OptSimionescu_getInequalityConstraintFunction(long jarg1, OptSimionescu jarg1_);
  public final static native long OptSimionescu_getEqualityConstraintFunction(long jarg1, OptSimionescu jarg1_);
  public final static native double OptSimionescu_getOptimalPointUndisplaced(long jarg1, OptSimionescu jarg1_, long jarg2, DataVector jarg2_);
  public final static native long new_OptSolandObjective();
  public final static native void delete_OptSolandObjective(long jarg1);
  public final static native double OptSolandObjective_evalUndisplaced(long jarg1, OptSolandObjective jarg1_, long jarg2, DataVector jarg2_);
  public final static native void OptSolandObjective_clone(long jarg1, OptSolandObjective jarg1_, long jarg2);
  public final static native long new_OptSolandInequalityConstraint();
  public final static native void delete_OptSolandInequalityConstraint(long jarg1);
  public final static native void OptSolandInequalityConstraint_evalUndisplaced(long jarg1, OptSolandInequalityConstraint jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_);
  public final static native void OptSolandInequalityConstraint_clone(long jarg1, OptSolandInequalityConstraint jarg1_, long jarg2);
  public final static native long new_OptSolandEqualityConstraint();
  public final static native void delete_OptSolandEqualityConstraint(long jarg1);
  public final static native void OptSolandEqualityConstraint_evalUndisplaced(long jarg1, OptSolandEqualityConstraint jarg1_, long jarg2, DataVector jarg2_, long jarg3, DataVector jarg3_);
  public final static native void OptSolandEqualityConstraint_clone(long jarg1, OptSolandEqualityConstraint jarg1_, long jarg2);
  public final static native long new_OptSoland();
  public final static native void delete_OptSoland(long jarg1);
  public final static native long OptSoland_getObjectiveFunction(long jarg1, OptSoland jarg1_);
  public final static native long OptSoland_getInequalityConstraintFunction(long jarg1, OptSoland jarg1_);
  public final static native long OptSoland_getEqualityConstraintFunction(long jarg1, OptSoland jarg1_);
  public final static native double OptSoland_getOptimalPointUndisplaced(long jarg1, OptSoland jarg1_, long jarg2, DataVector jarg2_);
  public final static native void OptFileIOWriteGrid__SWIG_0(String jarg1, long jarg2, GridStorage jarg2_);
  public final static native void OptFileIOWriteGrid__SWIG_1(String jarg1, long jarg2, GridStorage jarg2_, long jarg3, DataVector jarg3_);
  public final static native void OptFileIOReadGrid__SWIG_0(String jarg1, long jarg2, GridStorage jarg2_);
  public final static native void OptFileIOReadGrid__SWIG_1(String jarg1, long jarg2, GridStorage jarg2_, long jarg3, DataVector jarg3_);
  public final static native void OptFileIOWriteMatrix__SWIG_0(String jarg1, long jarg2, DataMatrix jarg2_);
  public final static native void OptFileIOReadMatrix__SWIG_0(String jarg1, long jarg2, DataMatrix jarg2_);
  public final static native void OptFileIOWriteVector__SWIG_0(String jarg1, long jarg2, DataVector jarg2_);
  public final static native void OptFileIOReadVector__SWIG_0(String jarg1, long jarg2, DataVector jarg2_);
  public final static native void OptMathSchurDecomposition(long jarg1, DataMatrix jarg1_, long jarg2, DataMatrix jarg2_);
  public final static native void OptMathQRDecomposition(long jarg1, DataMatrix jarg1_, long jarg2, DataMatrix jarg2_);
  public final static native void OptMathHessenbergForm(long jarg1, DataMatrix jarg1_, long jarg2, DataMatrix jarg2_);
  public final static native void OptMathHouseholderTransformation(long jarg1, DataMatrix jarg1_, long jarg2, long jarg3, long jarg4, DataMatrix jarg4_);
  public final static native void OptMutexType_lock(long jarg1, OptMutexType jarg1_);
  public final static native void OptMutexType_unlock(long jarg1, OptMutexType jarg1_);
  public final static native long new_OptMutexType();
  public final static native void delete_OptMutexType(long jarg1);
  public final static native long optOperatorInsertion__SWIG_1(long jarg1, long jarg2, DataVector jarg2_);
  public final static native long optOperatorInsertion__SWIG_2(long jarg1, long jarg2, GridPoint jarg2_);
  public final static native int OptPrinter_DEFAULT_VERBOSITY_get();
  public final static native long OptPrinter_getInstance();
  public final static native void OptPrinter_printStatusBegin(long jarg1, OptPrinter jarg1_, String jarg2);
  public final static native void OptPrinter_printStatusUpdate(long jarg1, OptPrinter jarg1_, String jarg2);
  public final static native void OptPrinter_printStatusNewLine(long jarg1, OptPrinter jarg1_);
  public final static native void OptPrinter_printStatusIdentation(long jarg1, OptPrinter jarg1_);
  public final static native void OptPrinter_printStatusEnd__SWIG_0(long jarg1, OptPrinter jarg1_, String jarg2);
  public final static native void OptPrinter_printStatusEnd__SWIG_1(long jarg1, OptPrinter jarg1_);
  public final static native void OptPrinter_enableStatusPrinting(long jarg1, OptPrinter jarg1_);
  public final static native void OptPrinter_disableStatusPrinting(long jarg1, OptPrinter jarg1_);
  public final static native boolean OptPrinter_isStatusPrintingEnabled(long jarg1, OptPrinter jarg1_);
  public final static native int OptPrinter_getVerbosity(long jarg1, OptPrinter jarg1_);
  public final static native void OptPrinter_setVerbosity(long jarg1, OptPrinter jarg1_, int jarg2);
  public final static native double OptPrinter_getLastDurationSecs(long jarg1, OptPrinter jarg1_);
  public final static native long OptPrinter_getMutex(long jarg1, OptPrinter jarg1_);
  public final static native long OptPrinter_getStream(long jarg1, OptPrinter jarg1_);
  public final static native void OptPrinter_setStream(long jarg1, OptPrinter jarg1_, long jarg2);
  public final static native long OptPrinter_getLineLengthLimit(long jarg1, OptPrinter jarg1_);
  public final static native void OptPrinter_setLineLengthLimit(long jarg1, OptPrinter jarg1_, long jarg2);
  public final static native void OptPrinter_printIterativeGridGenerator(long jarg1, OptPrinter jarg1_, long jarg2, OptIterativeGridGenerator jarg2_);
  public final static native void OptPrinter_printSLE(long jarg1, OptPrinter jarg1_, long jarg2, OptSLE jarg2_);
  public final static native void delete_OptPrinter(long jarg1);
  public final static native long createOperationMultipleHierarchisation(long jarg1, Grid jarg1_);
  public final static native void OptFileIOWriteMatrix__SWIG_2(String jarg1, long jarg2, DoubleVector jarg2_, long jarg3, long jarg4);
  public final static native void OptFileIOReadMatrix__SWIG_2(String jarg1, long jarg2, DoubleVector jarg2_, long jarg3, long jarg4);
  public final static native void OptFileIOWriteVector__SWIG_2(String jarg1, long jarg2, DoubleVector jarg2_);
  public final static native void OptFileIOReadVector__SWIG_2(String jarg1, long jarg2, DoubleVector jarg2_);
  public final static native long DataVector_SWIGUpcast(long jarg1);
  public final static native long DataMatrix_SWIGUpcast(long jarg1);
  public final static native long Stretching_SWIGUpcast(long jarg1);
  public final static native long SurplusRefinementFunctor_SWIGUpcast(long jarg1);
  public final static native long OperationQuadratureMC_SWIGUpcast(long jarg1);
  public final static native long RefinementDecorator_SWIGUpcast(long jarg1);
  public final static native long HashRefinement_SWIGUpcast(long jarg1);
  public final static native long HashRefinementBoundaries_SWIGUpcast(long jarg1);
  public final static native long PredictiveRefinementIndicator_SWIGUpcast(long jarg1);
  public final static native long PredictiveRefinement_refinement_key_SWIGUpcast(long jarg1);
  public final static native long PredictiveRefinement_SWIGUpcast(long jarg1);
  public final static native long ForwardSelectorRefinementIndicator_SWIGUpcast(long jarg1);
  public final static native long ForwardSelectorRefinement_refinement_key_SWIGUpcast(long jarg1);
  public final static native long ForwardSelectorRefinement_SWIGUpcast(long jarg1);
  public final static native long ImpurityRefinementIndicator_SWIGUpcast(long jarg1);
  public final static native long ImpurityRefinement_refinement_key_SWIGUpcast(long jarg1);
  public final static native long ImpurityRefinement_SWIGUpcast(long jarg1);
  public final static native long StandardGridGenerator_SWIGUpcast(long jarg1);
  public final static native long L0BoundaryGridGenerator_SWIGUpcast(long jarg1);
  public final static native long PrewaveletGridGenerator_SWIGUpcast(long jarg1);
  public final static native long PeriodicGridGenerator_SWIGUpcast(long jarg1);
  public final static native long StretchedBoundaryGridGenerator_SWIGUpcast(long jarg1);
  public final static native long BoundaryGridGenerator_SWIGUpcast(long jarg1);
  public final static native long SquareRootGridGenerator_SWIGUpcast(long jarg1);
  public final static native long SurplusVolumeRefinementFunctor_SWIGUpcast(long jarg1);
  public final static native long SurplusCoarseningFunctor_SWIGUpcast(long jarg1);
  public final static native long GridPrinterForStretching_SWIGUpcast(long jarg1);
  public final static native long GaussLegendreQuadRule1D_SWIGUpcast(long jarg1);
  public final static native long GaussHermiteQuadRule1D_SWIGUpcast(long jarg1);
  public final static native long OperationEvalPeriodic_SWIGUpcast(long jarg1);
  public final static native long OperationMultipleEvalPeriodic_SWIGUpcast(long jarg1);
  public final static native long SLinearBase_SWIGUpcast(long jarg1);
  public final static native long SLinearBoundaryBase_SWIGUpcast(long jarg1);
  public final static native long SLinearClenshawCurtisBase_SWIGUpcast(long jarg1);
  public final static native long SLinearStretchedBase_SWIGUpcast(long jarg1);
  public final static native long SLinearStretchedBoundaryBase_SWIGUpcast(long jarg1);
  public final static native long SLinearModifiedBase_SWIGUpcast(long jarg1);
  public final static native long SPolyBase_SWIGUpcast(long jarg1);
  public final static native long SWaveletBase_SWIGUpcast(long jarg1);
  public final static native long SWaveletBoundaryBase_SWIGUpcast(long jarg1);
  public final static native long SWaveletModifiedBase_SWIGUpcast(long jarg1);
  public final static native long SBsplineBase_SWIGUpcast(long jarg1);
  public final static native long SBsplineBoundaryBase_SWIGUpcast(long jarg1);
  public final static native long SBsplineClenshawCurtisBase_SWIGUpcast(long jarg1);
  public final static native long SBsplineModifiedBase_SWIGUpcast(long jarg1);
  public final static native long SBsplineModifiedClenshawCurtisBase_SWIGUpcast(long jarg1);
  public final static native long SFundamentalSplineBase_SWIGUpcast(long jarg1);
  public final static native long SFundamentalSplineModifiedBase_SWIGUpcast(long jarg1);
  public final static native long SPrewaveletBase_SWIGUpcast(long jarg1);
  public final static native long OperationParabolicPDESolverSystem_SWIGUpcast(long jarg1);
  public final static native long OperationParabolicPDESolverSystemDirichlet_SWIGUpcast(long jarg1);
  public final static native long HeatEquationParabolicPDESolverSystem_SWIGUpcast(long jarg1);
  public final static native long ParabolicPDESolver_SWIGUpcast(long jarg1);
  public final static native long HeatEquationSolver_SWIGUpcast(long jarg1);
  public final static native long HeatEquationSolverWithStretching_SWIGUpcast(long jarg1);
  public final static native long EllipticPDESolver_SWIGUpcast(long jarg1);
  public final static native long PoissonEquationSolver_SWIGUpcast(long jarg1);
  public final static native long OperationParabolicPDESolverSystemFreeBoundaries_SWIGUpcast(long jarg1);
  public final static native long OperationMatrixLTwoDotExplicitPeriodic_SWIGUpcast(long jarg1);
  public final static native long OperationMatrixLTwoDotPeriodic_SWIGUpcast(long jarg1);
  public final static native long SLESolver_SWIGUpcast(long jarg1);
  public final static native long ODESolver_SWIGUpcast(long jarg1);
  public final static native long ConjugateGradients_SWIGUpcast(long jarg1);
  public final static native long BiCGStab_SWIGUpcast(long jarg1);
  public final static native long Euler_SWIGUpcast(long jarg1);
  public final static native long CrankNicolson_SWIGUpcast(long jarg1);
  public final static native long DensitySystemMatrix_SWIGUpcast(long jarg1);
  public final static native long DBMatDecompMatrixSolver_SWIGUpcast(long jarg1);
  public final static native long DBMatDMSChol_SWIGUpcast(long jarg1);
  public final static native long DBMatDMSDenseIChol_SWIGUpcast(long jarg1);
  public final static native long DBMatOfflineGE_SWIGUpcast(long jarg1);
  public final static native long DBMatOfflineChol_SWIGUpcast(long jarg1);
  public final static native long DBMatOfflineDenseIChol_SWIGUpcast(long jarg1);
  public final static native long DBMatOnlineDE_SWIGUpcast(long jarg1);
  public final static native long DBMatOnlineDEChol_SWIGUpcast(long jarg1);
  public final static native long GaussianKDE_SWIGUpcast(long jarg1);
  public final static native long LearnerSGDE_SWIGUpcast(long jarg1);
  public final static native long MultiGridRefinementFunctor_SWIGUpcast(long jarg1);
  public final static native long MultiSurplusRefinementFunctor_SWIGUpcast(long jarg1);
  public final static native long DataBasedRefinementFunctor_SWIGUpcast(long jarg1);
  public final static native long GridPointBasedRefinementFunctor_SWIGUpcast(long jarg1);
  public final static native long ZeroCrossingRefinementFunctor_SWIGUpcast(long jarg1);
  public final static native long FileSampleProvider_SWIGUpcast(long jarg1);
  public final static native long ArffFileSampleProvider_SWIGUpcast(long jarg1);
  public final static native long FileSampleDecorator_SWIGUpcast(long jarg1);
  public final static native long FitterConfigurationLeastSquares_SWIGUpcast(long jarg1);
  public final static native long ModelFittingLeastSquares_SWIGUpcast(long jarg1);
  public final static native long MSE_SWIGUpcast(long jarg1);
  public final static native long SequentialShufflingFunctor_SWIGUpcast(long jarg1);
  public final static native long RandomShufflingFunctor_SWIGUpcast(long jarg1);
  public final static native long SplittingScorer_SWIGUpcast(long jarg1);
  public final static native long CrossValidation_SWIGUpcast(long jarg1);
  public final static native long SplittingScorerFactory_SWIGUpcast(long jarg1);
  public final static native long CrossValidationScorerFactory_SWIGUpcast(long jarg1);
  public final static native long LeastSquaresRegressionMinerFactory_SWIGUpcast(long jarg1);
  public final static native long OperationRegularizationDiagonal_SWIGUpcast(long jarg1);
  public final static native long NaiveSampleGenerator_SWIGUpcast(long jarg1);
  public final static native long LatinHypercubeSampleGenerator_SWIGUpcast(long jarg1);
  public final static native long StratifiedSampleGenerator_SWIGUpcast(long jarg1);
  public final static native long HaltonSampleGenerator_SWIGUpcast(long jarg1);
  public final static native long OptInterpolantScalarFunction_SWIGUpcast(long jarg1);
  public final static native long OptInterpolantScalarFunctionGradient_SWIGUpcast(long jarg1);
  public final static native long OptInterpolantScalarFunctionHessian_SWIGUpcast(long jarg1);
  public final static native long OptInterpolantVectorFunction_SWIGUpcast(long jarg1);
  public final static native long OptInterpolantVectorFunctionGradient_SWIGUpcast(long jarg1);
  public final static native long OptInterpolantVectorFunctionHessian_SWIGUpcast(long jarg1);
  public final static native long OptComponentScalarFunction_SWIGUpcast(long jarg1);
  public final static native long OptComponentScalarFunctionGradient_SWIGUpcast(long jarg1);
  public final static native long OptComponentScalarFunctionHessian_SWIGUpcast(long jarg1);
  public final static native long OptWrapperScalarFunction_SWIGUpcast(long jarg1);
  public final static native long OptWrapperScalarFunctionGradient_SWIGUpcast(long jarg1);
  public final static native long OptWrapperScalarFunctionHessian_SWIGUpcast(long jarg1);
  public final static native long OptWrapperVectorFunction_SWIGUpcast(long jarg1);
  public final static native long OptWrapperVectorFunctionGradient_SWIGUpcast(long jarg1);
  public final static native long OptWrapperVectorFunctionHessian_SWIGUpcast(long jarg1);
  public final static native long OptHashRefinementMultiple_SWIGUpcast(long jarg1);
  public final static native long OptIterativeGridGeneratorLinearSurplus_SWIGUpcast(long jarg1);
  public final static native long OptIterativeGridGeneratorRitterNovak_SWIGUpcast(long jarg1);
  public final static native long OptIterativeGridGeneratorSOO_SWIGUpcast(long jarg1);
  public final static native long CloneableSLE_SWIGUpcast(long jarg1);
  public final static native long OptFullSLE_SWIGUpcast(long jarg1);
  public final static native long OptHierarchisationSLE_SWIGUpcast(long jarg1);
  public final static native long OptArmadillo_SWIGUpcast(long jarg1);
  public final static native long OptAutoSLESolver_SWIGUpcast(long jarg1);
  public final static native long OptBiCGStab_SWIGUpcast(long jarg1);
  public final static native long OptEigen_SWIGUpcast(long jarg1);
  public final static native long OptGaussianElimination_SWIGUpcast(long jarg1);
  public final static native long OptGmmpp_SWIGUpcast(long jarg1);
  public final static native long OptUMFPACK_SWIGUpcast(long jarg1);
  public final static native long OptAdaptiveGradientDescent_SWIGUpcast(long jarg1);
  public final static native long OptAdaptiveNewton_SWIGUpcast(long jarg1);
  public final static native long OptBFGS_SWIGUpcast(long jarg1);
  public final static native long OptCMAES_SWIGUpcast(long jarg1);
  public final static native long OptDifferentialEvolution_SWIGUpcast(long jarg1);
  public final static native long OptGradientDescent_SWIGUpcast(long jarg1);
  public final static native long OptMultiStart_SWIGUpcast(long jarg1);
  public final static native long OptNelderMead_SWIGUpcast(long jarg1);
  public final static native long OptNewton_SWIGUpcast(long jarg1);
  public final static native long OptNLCG_SWIGUpcast(long jarg1);
  public final static native long OptRprop_SWIGUpcast(long jarg1);
  public final static native long OptLevenbergMarquardt_SWIGUpcast(long jarg1);
  public final static native long OptConstrainedOptimizer_SWIGUpcast(long jarg1);
  public final static native long OptAugmentedLagrangian_SWIGUpcast(long jarg1);
  public final static native long OptLogBarrier_SWIGUpcast(long jarg1);
  public final static native long OptSquaredPenalty_SWIGUpcast(long jarg1);
  public final static native long OptTestScalarFunction_SWIGUpcast(long jarg1);
  public final static native long OptTestVectorFunction_SWIGUpcast(long jarg1);
  public final static native long AbsoluteValueObjective_SWIGUpcast(long jarg1);
  public final static native long OptAbsoluteValueObjective_SWIGUpcast(long jarg1);
  public final static native long OptAckleyObjective_SWIGUpcast(long jarg1);
  public final static native long OptAckley_SWIGUpcast(long jarg1);
  public final static native long OptBealeObjective_SWIGUpcast(long jarg1);
  public final static native long OptBeale_SWIGUpcast(long jarg1);
  public final static native long OptBraninObjective_SWIGUpcast(long jarg1);
  public final static native long OptBranin_SWIGUpcast(long jarg1);
  public final static native long OptBubbleWrapObjective_SWIGUpcast(long jarg1);
  public final static native long OptBubbleWrap_SWIGUpcast(long jarg1);
  public final static native long OptEasomYangObjective_SWIGUpcast(long jarg1);
  public final static native long OptEasomYang_SWIGUpcast(long jarg1);
  public final static native long OptEggholderObjective_SWIGUpcast(long jarg1);
  public final static native long OptEggholder_SWIGUpcast(long jarg1);
  public final static native long OptGoldsteinPriceObjective_SWIGUpcast(long jarg1);
  public final static native long OptGoldsteinPrice_SWIGUpcast(long jarg1);
  public final static native long OptGriewankObjective_SWIGUpcast(long jarg1);
  public final static native long OptGriewank_SWIGUpcast(long jarg1);
  public final static native long OptHartman3Objective_SWIGUpcast(long jarg1);
  public final static native long OptHartman3_SWIGUpcast(long jarg1);
  public final static native long OptHartman6Objective_SWIGUpcast(long jarg1);
  public final static native long OptHartman6_SWIGUpcast(long jarg1);
  public final static native long OptHimmelblauObjective_SWIGUpcast(long jarg1);
  public final static native long OptHimmelblau_SWIGUpcast(long jarg1);
  public final static native long OptHoelderTableObjective_SWIGUpcast(long jarg1);
  public final static native long OptHoelderTable_SWIGUpcast(long jarg1);
  public final static native long OptIncreasingPowerObjective_SWIGUpcast(long jarg1);
  public final static native long OptIncreasingPower_SWIGUpcast(long jarg1);
  public final static native long OptMichalewiczObjective_SWIGUpcast(long jarg1);
  public final static native long OptMichalewicz_SWIGUpcast(long jarg1);
  public final static native long OptMladineoObjective_SWIGUpcast(long jarg1);
  public final static native long OptMladineo_SWIGUpcast(long jarg1);
  public final static native long OptPermObjective_SWIGUpcast(long jarg1);
  public final static native long OptPerm_SWIGUpcast(long jarg1);
  public final static native long OptRastriginObjective_SWIGUpcast(long jarg1);
  public final static native long OptRastrigin_SWIGUpcast(long jarg1);
  public final static native long OptRosenbrockObjective_SWIGUpcast(long jarg1);
  public final static native long OptRosenbrock_SWIGUpcast(long jarg1);
  public final static native long OptSHCBObjective_SWIGUpcast(long jarg1);
  public final static native long OptSHCB_SWIGUpcast(long jarg1);
  public final static native long OptSchwefelObjective_SWIGUpcast(long jarg1);
  public final static native long OptSchwefel_SWIGUpcast(long jarg1);
  public final static native long OptSphereObjective_SWIGUpcast(long jarg1);
  public final static native long OptSphere_SWIGUpcast(long jarg1);
  public final static native long OptTremblingParabolaObjective_SWIGUpcast(long jarg1);
  public final static native long OptTremblingParabola_SWIGUpcast(long jarg1);
  public final static native long OptFloudasObjective_SWIGUpcast(long jarg1);
  public final static native long OptFloudasInequalityConstraint_SWIGUpcast(long jarg1);
  public final static native long OptFloudasEqualityConstraint_SWIGUpcast(long jarg1);
  public final static native long OptFloudas_SWIGUpcast(long jarg1);
  public final static native long OptG03Objective_SWIGUpcast(long jarg1);
  public final static native long OptG03InequalityConstraint_SWIGUpcast(long jarg1);
  public final static native long OptG03EqualityConstraint_SWIGUpcast(long jarg1);
  public final static native long OptG03_SWIGUpcast(long jarg1);
  public final static native long OptG04Objective_SWIGUpcast(long jarg1);
  public final static native long OptG04InequalityConstraint_SWIGUpcast(long jarg1);
  public final static native long OptG04EqualityConstraint_SWIGUpcast(long jarg1);
  public final static native long OptG04_SWIGUpcast(long jarg1);
  public final static native long OptG05Objective_SWIGUpcast(long jarg1);
  public final static native long OptG05InequalityConstraint_SWIGUpcast(long jarg1);
  public final static native long OptG05EqualityConstraint_SWIGUpcast(long jarg1);
  public final static native long OptG05_SWIGUpcast(long jarg1);
  public final static native long OptG06Objective_SWIGUpcast(long jarg1);
  public final static native long OptG06InequalityConstraint_SWIGUpcast(long jarg1);
  public final static native long OptG06EqualityConstraint_SWIGUpcast(long jarg1);
  public final static native long OptG06_SWIGUpcast(long jarg1);
  public final static native long OptG08Objective_SWIGUpcast(long jarg1);
  public final static native long OptG08InequalityConstraint_SWIGUpcast(long jarg1);
  public final static native long OptG08EqualityConstraint_SWIGUpcast(long jarg1);
  public final static native long OptG08_SWIGUpcast(long jarg1);
  public final static native long OptG09Objective_SWIGUpcast(long jarg1);
  public final static native long OptG09InequalityConstraint_SWIGUpcast(long jarg1);
  public final static native long OptG09EqualityConstraint_SWIGUpcast(long jarg1);
  public final static native long OptG09_SWIGUpcast(long jarg1);
  public final static native long OptG10Objective_SWIGUpcast(long jarg1);
  public final static native long OptG10InequalityConstraint_SWIGUpcast(long jarg1);
  public final static native long OptG10EqualityConstraint_SWIGUpcast(long jarg1);
  public final static native long OptG10_SWIGUpcast(long jarg1);
  public final static native long OptG11Objective_SWIGUpcast(long jarg1);
  public final static native long OptG11InequalityConstraint_SWIGUpcast(long jarg1);
  public final static native long OptG11EqualityConstraint_SWIGUpcast(long jarg1);
  public final static native long OptG11_SWIGUpcast(long jarg1);
  public final static native long OptG12Objective_SWIGUpcast(long jarg1);
  public final static native long OptG12InequalityConstraint_SWIGUpcast(long jarg1);
  public final static native long OptG12EqualityConstraint_SWIGUpcast(long jarg1);
  public final static native long OptG12_SWIGUpcast(long jarg1);
  public final static native long OptG13Objective_SWIGUpcast(long jarg1);
  public final static native long OptG13InequalityConstraint_SWIGUpcast(long jarg1);
  public final static native long OptG13EqualityConstraint_SWIGUpcast(long jarg1);
  public final static native long OptG13_SWIGUpcast(long jarg1);
  public final static native long OptSimionescuObjective_SWIGUpcast(long jarg1);
  public final static native long OptSimionescuInequalityConstraint_SWIGUpcast(long jarg1);
  public final static native long OptSimionescuEqualityConstraint_SWIGUpcast(long jarg1);
  public final static native long OptSimionescu_SWIGUpcast(long jarg1);
  public final static native long OptSolandObjective_SWIGUpcast(long jarg1);
  public final static native long OptSolandInequalityConstraint_SWIGUpcast(long jarg1);
  public final static native long OptSolandEqualityConstraint_SWIGUpcast(long jarg1);
  public final static native long OptSoland_SWIGUpcast(long jarg1);

  public static void SwigDirector_ConjugateGradients_solve__SWIG_0(ConjugateGradients jself, long SystemMatrix, long alpha, long b, boolean reuse, boolean verbose, double max_threshold) {
    jself.solve(new OperationMatrix(SystemMatrix, false), new DataVector(alpha, false), new DataVector(b, false), reuse, verbose, max_threshold);
  }
  public static void SwigDirector_ConjugateGradients_solve__SWIG_1(ConjugateGradients jself, long SystemMatrix, long alpha, long b, boolean reuse, boolean verbose) {
    jself.solve(new OperationMatrix(SystemMatrix, false), new DataVector(alpha, false), new DataVector(b, false), reuse, verbose);
  }
  public static void SwigDirector_ConjugateGradients_solve__SWIG_2(ConjugateGradients jself, long SystemMatrix, long alpha, long b, boolean reuse) {
    jself.solve(new OperationMatrix(SystemMatrix, false), new DataVector(alpha, false), new DataVector(b, false), reuse);
  }
  public static void SwigDirector_ConjugateGradients_solve__SWIG_3(ConjugateGradients jself, long SystemMatrix, long alpha, long b) {
    jself.solve(new OperationMatrix(SystemMatrix, false), new DataVector(alpha, false), new DataVector(b, false));
  }
  public static void SwigDirector_ConjugateGradients_starting(ConjugateGradients jself) {
    jself.starting();
  }
  public static void SwigDirector_ConjugateGradients_calcStarting(ConjugateGradients jself) {
    jself.calcStarting();
  }
  public static void SwigDirector_ConjugateGradients_iterationComplete(ConjugateGradients jself) {
    jself.iterationComplete();
  }
  public static void SwigDirector_ConjugateGradients_complete(ConjugateGradients jself) {
    jself.complete();
  }
  public static double SwigDirector_OptScalarFunction_eval(OptScalarFunction jself, long x) {
    return jself.eval(new DataVector(x, false));
  }
  public static void SwigDirector_OptScalarFunction_clone(OptScalarFunction jself, long clone) {
    jself.clone(new SWIGTYPE_p_std__unique_ptrT_sgpp__optimization__ScalarFunction_t(clone, false));
  }
  public static double SwigDirector_OptScalarFunctionGradient_eval(OptScalarFunctionGradient jself, long x, long gradient) {
    return jself.eval(new DataVector(x, false), new DataVector(gradient, false));
  }
  public static void SwigDirector_OptScalarFunctionGradient_clone(OptScalarFunctionGradient jself, long clone) {
    jself.clone(new SWIGTYPE_p_std__unique_ptrT_sgpp__optimization__ScalarFunctionGradient_t(clone, false));
  }
  public static double SwigDirector_OptScalarFunctionHessian_eval(OptScalarFunctionHessian jself, long x, long gradient, long hessian) {
    return jself.eval(new DataVector(x, false), new DataVector(gradient, false), new DataMatrix(hessian, false));
  }
  public static void SwigDirector_OptScalarFunctionHessian_clone(OptScalarFunctionHessian jself, long clone) {
    jself.clone(new SWIGTYPE_p_std__unique_ptrT_sgpp__optimization__ScalarFunctionHessian_t(clone, false));
  }
  public static void SwigDirector_OptVectorFunction_eval(OptVectorFunction jself, long x, long value) {
    jself.eval(new DataVector(x, false), new DataVector(value, false));
  }
  public static void SwigDirector_OptVectorFunction_clone(OptVectorFunction jself, long clone) {
    jself.clone(new SWIGTYPE_p_std__unique_ptrT_sgpp__optimization__VectorFunction_t(clone, false));
  }
  public static void SwigDirector_OptVectorFunctionGradient_eval(OptVectorFunctionGradient jself, long x, long value, long gradient) {
    jself.eval(new DataVector(x, false), new DataVector(value, false), new DataMatrix(gradient, false));
  }
  public static void SwigDirector_OptVectorFunctionGradient_clone(OptVectorFunctionGradient jself, long clone) {
    jself.clone(new SWIGTYPE_p_std__unique_ptrT_sgpp__optimization__VectorFunctionGradient_t(clone, false));
  }
  public static void SwigDirector_OptVectorFunctionHessian_eval(OptVectorFunctionHessian jself, long x, long value, long gradient, long hessian) {
    jself.eval(new DataVector(x, false), new DataVector(value, false), new DataMatrix(gradient, false), new SWIGTYPE_p_std__vectorT_sgpp__base__DataMatrix_t(hessian, false));
  }
  public static void SwigDirector_OptVectorFunctionHessian_clone(OptVectorFunctionHessian jself, long clone) {
    jself.clone(new SWIGTYPE_p_std__unique_ptrT_sgpp__optimization__VectorFunctionHessian_t(clone, false));
  }
  public static boolean SwigDirector_OptIterativeGridGenerator_generate(OptIterativeGridGenerator jself) {
    return jself.generate();
  }
  public static boolean SwigDirector_OptSLE_isMatrixEntryNonZero(OptSLE jself, long i, long j) {
    return jself.isMatrixEntryNonZero(i, j);
  }
  public static double SwigDirector_OptSLE_getMatrixEntry(OptSLE jself, long i, long j) {
    return jself.getMatrixEntry(i, j);
  }
  public static void SwigDirector_OptSLE_matrixVectorMultiplication(OptSLE jself, long x, long y) {
    jself.matrixVectorMultiplication(new DataVector(x, false), new DataVector(y, false));
  }
  public static long SwigDirector_OptSLE_countNNZ(OptSLE jself) {
    return jself.countNNZ();
  }
  public static long SwigDirector_OptSLE_getDimension(OptSLE jself) {
    return jself.getDimension();
  }
  public static boolean SwigDirector_OptSLE_isCloneable(OptSLE jself) {
    return jself.isCloneable();
  }
  public static boolean SwigDirector_OptSLESolver_solve__SWIG_0(OptSLESolver jself, long system, long b, long x) {
    return jself.solve(new OptSLE(system, false), new DataVector(b, false), new DataVector(x, false));
  }
  public static boolean SwigDirector_OptSLESolver_solve__SWIG_1(OptSLESolver jself, long system, long B, long X) {
    return jself.solve(new OptSLE(system, false), new DataMatrix(B, false), new DataMatrix(X, false));
  }

  private final static native void swig_module_init();
  static {
    swig_module_init();
  }
}
