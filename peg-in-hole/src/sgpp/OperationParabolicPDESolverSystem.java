/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package sgpp;

public class OperationParabolicPDESolverSystem extends OperationMatrix {
  private transient long swigCPtr;

  protected OperationParabolicPDESolverSystem(long cPtr, boolean cMemoryOwn) {
    super(jsgppJNI.OperationParabolicPDESolverSystem_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(OperationParabolicPDESolverSystem obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        jsgppJNI.delete_OperationParabolicPDESolverSystem(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public void mult(DataVector alpha, DataVector result) {
    jsgppJNI.OperationParabolicPDESolverSystem_mult(swigCPtr, this, DataVector.getCPtr(alpha), alpha, DataVector.getCPtr(result), result);
  }

  public DataVector generateRHS() {
    long cPtr = jsgppJNI.OperationParabolicPDESolverSystem_generateRHS(swigCPtr, this);
    return (cPtr == 0) ? null : new DataVector(cPtr, false);
  }

  public void finishTimestep() {
    jsgppJNI.OperationParabolicPDESolverSystem_finishTimestep(swigCPtr, this);
  }

  public void coarsenAndRefine(boolean isLastTimestep) {
    jsgppJNI.OperationParabolicPDESolverSystem_coarsenAndRefine__SWIG_0(swigCPtr, this, isLastTimestep);
  }

  public void coarsenAndRefine() {
    jsgppJNI.OperationParabolicPDESolverSystem_coarsenAndRefine__SWIG_1(swigCPtr, this);
  }

  public void startTimestep() {
    jsgppJNI.OperationParabolicPDESolverSystem_startTimestep(swigCPtr, this);
  }

  public Grid getGrid() {
    long cPtr = jsgppJNI.OperationParabolicPDESolverSystem_getGrid(swigCPtr, this);
    return (cPtr == 0) ? null : new Grid(cPtr, false);
  }

  public DataVector getGridCoefficientsForCG() {
    long cPtr = jsgppJNI.OperationParabolicPDESolverSystem_getGridCoefficientsForCG(swigCPtr, this);
    return (cPtr == 0) ? null : new DataVector(cPtr, false);
  }

  public DataVector getGridCoefficients() {
    long cPtr = jsgppJNI.OperationParabolicPDESolverSystem_getGridCoefficients(swigCPtr, this);
    return (cPtr == 0) ? null : new DataVector(cPtr, false);
  }

  public void setODESolver(String ode) {
    jsgppJNI.OperationParabolicPDESolverSystem_setODESolver(swigCPtr, this, ode);
  }

  public String getODESolver() {
    return jsgppJNI.OperationParabolicPDESolverSystem_getODESolver(swigCPtr, this);
  }

  public long getSumGridPointsComplete() {
    return jsgppJNI.OperationParabolicPDESolverSystem_getSumGridPointsComplete(swigCPtr, this);
  }

  public long getSumGridPointsInner() {
    return jsgppJNI.OperationParabolicPDESolverSystem_getSumGridPointsInner(swigCPtr, this);
  }

  public void setTimestepSize(double newTimestepSize) {
    jsgppJNI.OperationParabolicPDESolverSystem_setTimestepSize(swigCPtr, this, newTimestepSize);
  }

  public void abortTimestep() {
    jsgppJNI.OperationParabolicPDESolverSystem_abortTimestep(swigCPtr, this);
  }

  public void saveAlpha() {
    jsgppJNI.OperationParabolicPDESolverSystem_saveAlpha(swigCPtr, this);
  }

  public void getGridCoefficientsForSC(DataVector Values) {
    jsgppJNI.OperationParabolicPDESolverSystem_getGridCoefficientsForSC(swigCPtr, this, DataVector.getCPtr(Values), Values);
  }

  public GridStorage getGridStorage() {
    long cPtr = jsgppJNI.OperationParabolicPDESolverSystem_getGridStorage(swigCPtr, this);
    return (cPtr == 0) ? null : new GridStorage(cPtr, false);
  }

  public GridStorage getOldGridStorage() {
    long cPtr = jsgppJNI.OperationParabolicPDESolverSystem_getOldGridStorage(swigCPtr, this);
    return (cPtr == 0) ? null : new GridStorage(cPtr, false);
  }

  public GridStorage getSecondGridStorage() {
    long cPtr = jsgppJNI.OperationParabolicPDESolverSystem_getSecondGridStorage(swigCPtr, this);
    return (cPtr == 0) ? null : new GridStorage(cPtr, false);
  }

}
