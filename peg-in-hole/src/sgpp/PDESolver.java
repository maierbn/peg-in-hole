/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package sgpp;

public class PDESolver {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected PDESolver(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(PDESolver obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        jsgppJNI.delete_PDESolver(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void constructGrid(BoundingBox myBoundingBox, long level) {
    jsgppJNI.PDESolver_constructGrid(swigCPtr, this, BoundingBox.getCPtr(myBoundingBox), myBoundingBox, level);
  }

  public void setGrid(String serializedGrid) {
    jsgppJNI.PDESolver_setGrid(swigCPtr, this, serializedGrid);
  }

  public String getGrid() {
    return jsgppJNI.PDESolver_getGrid(swigCPtr, this);
  }

  public void deleteGrid() {
    jsgppJNI.PDESolver_deleteGrid(swigCPtr, this);
  }

  public void refineInitialGridSurplus(DataVector alpha, int numRefinePoints, double dThreshold) {
    jsgppJNI.PDESolver_refineInitialGridSurplus(swigCPtr, this, DataVector.getCPtr(alpha), alpha, numRefinePoints, dThreshold);
  }

  public void refineInitialGridSurplusToMaxLevel(DataVector alpha, double dThreshold, long maxLevel) {
    jsgppJNI.PDESolver_refineInitialGridSurplusToMaxLevel(swigCPtr, this, DataVector.getCPtr(alpha), alpha, dThreshold, maxLevel);
  }

  public void refineInitialGridSurplusSubDomain(DataVector alpha, int numRefinePoints, double dThreshold, DoubleVector norm_mu, DoubleVector norm_sigma) {
    jsgppJNI.PDESolver_refineInitialGridSurplusSubDomain(swigCPtr, this, DataVector.getCPtr(alpha), alpha, numRefinePoints, dThreshold, DoubleVector.getCPtr(norm_mu), norm_mu, DoubleVector.getCPtr(norm_sigma), norm_sigma);
  }

  public void refineInitialGridSurplusToMaxLevelSubDomain(DataVector alpha, double dThreshold, long maxLevel, DoubleVector norm_mu, DoubleVector norm_sigma) {
    jsgppJNI.PDESolver_refineInitialGridSurplusToMaxLevelSubDomain(swigCPtr, this, DataVector.getCPtr(alpha), alpha, dThreshold, maxLevel, DoubleVector.getCPtr(norm_mu), norm_mu, DoubleVector.getCPtr(norm_sigma), norm_sigma);
  }

  public void coarsenInitialGridSurplus(DataVector alpha, double dThreshold) {
    jsgppJNI.PDESolver_coarsenInitialGridSurplus(swigCPtr, this, DataVector.getCPtr(alpha), alpha, dThreshold);
  }

  public double evaluatePoint(DataVector evalPoint, DataVector alpha) {
    return jsgppJNI.PDESolver_evaluatePoint(swigCPtr, this, DataVector.getCPtr(evalPoint), evalPoint, DataVector.getCPtr(alpha), alpha);
  }

  public void evaluateCuboid(DataVector alpha, DataVector FunctionValues, DataMatrix EvaluationPoints) {
    jsgppJNI.PDESolver_evaluateCuboid(swigCPtr, this, DataVector.getCPtr(alpha), alpha, DataVector.getCPtr(FunctionValues), FunctionValues, DataMatrix.getCPtr(EvaluationPoints), EvaluationPoints);
  }

  public void printLevelIndexGrid(String tfilename) {
    jsgppJNI.PDESolver_printLevelIndexGrid(swigCPtr, this, tfilename);
  }

  public void printGrid(DataVector alpha, long PointesPerDimension, String tfilename) {
    jsgppJNI.PDESolver_printGrid(swigCPtr, this, DataVector.getCPtr(alpha), alpha, PointesPerDimension, tfilename);
  }

  public void printGridDomain(DataVector alpha, long PointesPerDimension, BoundingBox GridArea, String tfilename) {
    jsgppJNI.PDESolver_printGridDomain(swigCPtr, this, DataVector.getCPtr(alpha), alpha, PointesPerDimension, BoundingBox.getCPtr(GridArea), GridArea, tfilename);
  }

  public void printSparseGrid(DataVector alpha, String tfilename, boolean bSurplus) {
    jsgppJNI.PDESolver_printSparseGrid(swigCPtr, this, DataVector.getCPtr(alpha), alpha, tfilename, bSurplus);
  }

  public void printSparseGridExpTransform(DataVector alpha, String tfilename, boolean bSurplus) {
    jsgppJNI.PDESolver_printSparseGridExpTransform(swigCPtr, this, DataVector.getCPtr(alpha), alpha, tfilename, bSurplus);
  }

  public long getNumberGridPoints() {
    return jsgppJNI.PDESolver_getNumberGridPoints(swigCPtr, this);
  }

  public long getNumberInnerGridPoints() {
    return jsgppJNI.PDESolver_getNumberInnerGridPoints(swigCPtr, this);
  }

  public long getNumberDimensions() {
    return jsgppJNI.PDESolver_getNumberDimensions(swigCPtr, this);
  }

}
