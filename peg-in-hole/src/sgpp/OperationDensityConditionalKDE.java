/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package sgpp;

public class OperationDensityConditionalKDE {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected OperationDensityConditionalKDE(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(OperationDensityConditionalKDE obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        jsgppJNI.delete_OperationDensityConditionalKDE(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public OperationDensityConditionalKDE(GaussianKDE kde) {
    this(jsgppJNI.new_OperationDensityConditionalKDE(GaussianKDE.getCPtr(kde), kde), true);
  }

  public void doConditional(long mdim, double xbar, GaussianKDE conditionalizedKDE) {
    jsgppJNI.OperationDensityConditionalKDE_doConditional__SWIG_0(swigCPtr, this, mdim, xbar, GaussianKDE.getCPtr(conditionalizedKDE), conditionalizedKDE);
  }

  public void doConditional(SizeTVector mdims, DataVector xbar, GaussianKDE conditionalizedKDE) {
    jsgppJNI.OperationDensityConditionalKDE_doConditional__SWIG_1(swigCPtr, this, SizeTVector.getCPtr(mdims), mdims, DataVector.getCPtr(xbar), xbar, GaussianKDE.getCPtr(conditionalizedKDE), conditionalizedKDE);
  }

  public void condToDimX(long mdim, DataVector xbar, GaussianKDE conditionalizedKDE) {
    jsgppJNI.OperationDensityConditionalKDE_condToDimX(swigCPtr, this, mdim, DataVector.getCPtr(xbar), xbar, GaussianKDE.getCPtr(conditionalizedKDE), conditionalizedKDE);
  }

  public void condToDimXs(SizeTVector mdims, DataVector xbar, GaussianKDE conditionalizedKDE) {
    jsgppJNI.OperationDensityConditionalKDE_condToDimXs(swigCPtr, this, SizeTVector.getCPtr(mdims), mdims, DataVector.getCPtr(xbar), xbar, GaussianKDE.getCPtr(conditionalizedKDE), conditionalizedKDE);
  }

}
