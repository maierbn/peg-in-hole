/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package sgpp;

public class OptIterativeGridGeneratorRitterNovak extends OptIterativeGridGenerator {
  private transient long swigCPtr;

  protected OptIterativeGridGeneratorRitterNovak(long cPtr, boolean cMemoryOwn) {
    super(jsgppJNI.OptIterativeGridGeneratorRitterNovak_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(OptIterativeGridGeneratorRitterNovak obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        jsgppJNI.delete_OptIterativeGridGeneratorRitterNovak(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public OptIterativeGridGeneratorRitterNovak(OptScalarFunction f, Grid grid, long N, double adaptivity, long initialLevel, long maxLevel, OptIterativeGridGeneratorRitterNovak.PowMethod powMethod) {
    this(jsgppJNI.new_OptIterativeGridGeneratorRitterNovak__SWIG_0(OptScalarFunction.getCPtr(f), f, Grid.getCPtr(grid), grid, N, adaptivity, initialLevel, maxLevel, powMethod.swigValue()), true);
  }

  public OptIterativeGridGeneratorRitterNovak(OptScalarFunction f, Grid grid, long N, double adaptivity, long initialLevel, long maxLevel) {
    this(jsgppJNI.new_OptIterativeGridGeneratorRitterNovak__SWIG_1(OptScalarFunction.getCPtr(f), f, Grid.getCPtr(grid), grid, N, adaptivity, initialLevel, maxLevel), true);
  }

  public OptIterativeGridGeneratorRitterNovak(OptScalarFunction f, Grid grid, long N, double adaptivity, long initialLevel) {
    this(jsgppJNI.new_OptIterativeGridGeneratorRitterNovak__SWIG_2(OptScalarFunction.getCPtr(f), f, Grid.getCPtr(grid), grid, N, adaptivity, initialLevel), true);
  }

  public OptIterativeGridGeneratorRitterNovak(OptScalarFunction f, Grid grid, long N, double adaptivity) {
    this(jsgppJNI.new_OptIterativeGridGeneratorRitterNovak__SWIG_3(OptScalarFunction.getCPtr(f), f, Grid.getCPtr(grid), grid, N, adaptivity), true);
  }

  public OptIterativeGridGeneratorRitterNovak(OptScalarFunction f, Grid grid, long N) {
    this(jsgppJNI.new_OptIterativeGridGeneratorRitterNovak__SWIG_4(OptScalarFunction.getCPtr(f), f, Grid.getCPtr(grid), grid, N), true);
  }

  public boolean generate() {
    return jsgppJNI.OptIterativeGridGeneratorRitterNovak_generate(swigCPtr, this);
  }

  public double getAdaptivity() {
    return jsgppJNI.OptIterativeGridGeneratorRitterNovak_getAdaptivity(swigCPtr, this);
  }

  public void setAdaptivity(double adaptivity) {
    jsgppJNI.OptIterativeGridGeneratorRitterNovak_setAdaptivity(swigCPtr, this, adaptivity);
  }

  public long getInitialLevel() {
    return jsgppJNI.OptIterativeGridGeneratorRitterNovak_getInitialLevel(swigCPtr, this);
  }

  public void setInitialLevel(long initialLevel) {
    jsgppJNI.OptIterativeGridGeneratorRitterNovak_setInitialLevel(swigCPtr, this, initialLevel);
  }

  public long getMaxLevel() {
    return jsgppJNI.OptIterativeGridGeneratorRitterNovak_getMaxLevel(swigCPtr, this);
  }

  public void setMaxLevel(long maxLevel) {
    jsgppJNI.OptIterativeGridGeneratorRitterNovak_setMaxLevel(swigCPtr, this, maxLevel);
  }

  public OptIterativeGridGeneratorRitterNovak.PowMethod getPowMethod() {
    return OptIterativeGridGeneratorRitterNovak.PowMethod.swigToEnum(jsgppJNI.OptIterativeGridGeneratorRitterNovak_getPowMethod(swigCPtr, this));
  }

  public void setPowMethod(OptIterativeGridGeneratorRitterNovak.PowMethod powMethod) {
    jsgppJNI.OptIterativeGridGeneratorRitterNovak_setPowMethod(swigCPtr, this, powMethod.swigValue());
  }

  public final static double DEFAULT_ADAPTIVITY = jsgppJNI.OptIterativeGridGeneratorRitterNovak_DEFAULT_ADAPTIVITY_get();
  public final static long DEFAULT_INITIAL_LEVEL = jsgppJNI.OptIterativeGridGeneratorRitterNovak_DEFAULT_INITIAL_LEVEL_get();
  public final static long DEFAULT_MAX_LEVEL = jsgppJNI.OptIterativeGridGeneratorRitterNovak_DEFAULT_MAX_LEVEL_get();
  public final static class PowMethod {
    public final static OptIterativeGridGeneratorRitterNovak.PowMethod STD_POW = new OptIterativeGridGeneratorRitterNovak.PowMethod("STD_POW");
    public final static OptIterativeGridGeneratorRitterNovak.PowMethod FAST_POW = new OptIterativeGridGeneratorRitterNovak.PowMethod("FAST_POW");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static PowMethod swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + PowMethod.class + " with value " + swigValue);
    }

    private PowMethod(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private PowMethod(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private PowMethod(String swigName, PowMethod swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static PowMethod[] swigValues = { STD_POW, FAST_POW };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

}
