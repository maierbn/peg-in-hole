/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package sgpp;

public class HashGridIterator {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected HashGridIterator(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(HashGridIterator obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        jsgppJNI.delete_HashGridIterator(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public HashGridIterator(GridStorage storage) {
    this(jsgppJNI.new_HashGridIterator__SWIG_0(GridStorage.getCPtr(storage), storage), true);
  }

  public HashGridIterator(HashGridIterator copy) {
    this(jsgppJNI.new_HashGridIterator__SWIG_1(HashGridIterator.getCPtr(copy), copy), true);
  }

  public void resetToLevelZero() {
    jsgppJNI.HashGridIterator_resetToLevelZero(swigCPtr, this);
  }

  public void resetToLeftLevelZero(long dim) {
    jsgppJNI.HashGridIterator_resetToLeftLevelZero(swigCPtr, this, dim);
  }

  public void resetToRightLevelZero(long dim) {
    jsgppJNI.HashGridIterator_resetToRightLevelZero(swigCPtr, this, dim);
  }

  public void resetToLevelOne(long d) {
    jsgppJNI.HashGridIterator_resetToLevelOne(swigCPtr, this, d);
  }

  public void leftChild(long dim) {
    jsgppJNI.HashGridIterator_leftChild(swigCPtr, this, dim);
  }

  public void rightChild(long dim) {
    jsgppJNI.HashGridIterator_rightChild(swigCPtr, this, dim);
  }

  public void up(long d) {
    jsgppJNI.HashGridIterator_up(swigCPtr, this, d);
  }

  public void stepLeft(long d) {
    jsgppJNI.HashGridIterator_stepLeft(swigCPtr, this, d);
  }

  public void stepRight(long d) {
    jsgppJNI.HashGridIterator_stepRight(swigCPtr, this, d);
  }

  public boolean isInnerPoint() {
    return jsgppJNI.HashGridIterator_isInnerPoint(swigCPtr, this);
  }

  public boolean hint() {
    return jsgppJNI.HashGridIterator_hint(swigCPtr, this);
  }

  public boolean hintLeft(long d) {
    return jsgppJNI.HashGridIterator_hintLeft(swigCPtr, this, d);
  }

  public boolean hintRight(long d) {
    return jsgppJNI.HashGridIterator_hintRight(swigCPtr, this, d);
  }

  public void get(long d, SWIGTYPE_p_unsigned_int l, SWIGTYPE_p_unsigned_int i) {
    jsgppJNI.HashGridIterator_get(swigCPtr, this, d, SWIGTYPE_p_unsigned_int.getCPtr(l), SWIGTYPE_p_unsigned_int.getCPtr(i));
  }

  public void set(long d, long l, long i) {
    jsgppJNI.HashGridIterator_set__SWIG_0(swigCPtr, this, d, l, i);
  }

  public void set(GridPoint point) {
    jsgppJNI.HashGridIterator_set__SWIG_1(swigCPtr, this, GridPoint.getCPtr(point), point);
  }

  public void push(long d, long l, long i) {
    jsgppJNI.HashGridIterator_push(swigCPtr, this, d, l, i);
  }

  public long seq() {
    return jsgppJNI.HashGridIterator_seq(swigCPtr, this);
  }

  public long getGridDepth(long dim) {
    return jsgppJNI.HashGridIterator_getGridDepth(swigCPtr, this, dim);
  }

  public String toString() {
    return jsgppJNI.HashGridIterator_toString(swigCPtr, this);
  }

}
