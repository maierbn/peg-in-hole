/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package sgpp;

public class OptConstrainedTestProblem {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected OptConstrainedTestProblem(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(OptConstrainedTestProblem obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        jsgppJNI.delete_OptConstrainedTestProblem(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public OptTestScalarFunction getObjectiveFunction() {
    return new OptTestScalarFunction(jsgppJNI.OptConstrainedTestProblem_getObjectiveFunction(swigCPtr, this), false);
  }

  public OptTestVectorFunction getInequalityConstraintFunction() {
    return new OptTestVectorFunction(jsgppJNI.OptConstrainedTestProblem_getInequalityConstraintFunction(swigCPtr, this), false);
  }

  public OptTestVectorFunction getEqualityConstraintFunction() {
    return new OptTestVectorFunction(jsgppJNI.OptConstrainedTestProblem_getEqualityConstraintFunction(swigCPtr, this), false);
  }

  public double getOptimalPoint(DataVector x) {
    return jsgppJNI.OptConstrainedTestProblem_getOptimalPoint(swigCPtr, this, DataVector.getCPtr(x), x);
  }

  public double getOptimalPointUndisplaced(DataVector x) {
    return jsgppJNI.OptConstrainedTestProblem_getOptimalPointUndisplaced(swigCPtr, this, DataVector.getCPtr(x), x);
  }

  public void generateDisplacement() {
    jsgppJNI.OptConstrainedTestProblem_generateDisplacement__SWIG_0(swigCPtr, this);
  }

  public void generateDisplacement(double stdDev) {
    jsgppJNI.OptConstrainedTestProblem_generateDisplacement__SWIG_1(swigCPtr, this, stdDev);
  }

  public DataVector getDisplacement() {
    return new DataVector(jsgppJNI.OptConstrainedTestProblem_getDisplacement(swigCPtr, this), false);
  }

  public void setDisplacement(DataVector displacement) {
    jsgppJNI.OptConstrainedTestProblem_setDisplacement(swigCPtr, this, DataVector.getCPtr(displacement), displacement);
  }

  public final static double DEFAULT_STANDARD_DEVIATION = jsgppJNI.OptConstrainedTestProblem_DEFAULT_STANDARD_DEVIATION_get();
}
