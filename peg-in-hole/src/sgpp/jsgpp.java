/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package sgpp;

public class jsgpp implements jsgppConstants {
  public static OperationMatrix createOperationDiagonal(Grid grid, double multiplicationFactor) {
    long cPtr = jsgppJNI.createOperationDiagonal__SWIG_0(Grid.getCPtr(grid), grid, multiplicationFactor);
    return (cPtr == 0) ? null : new OperationMatrix(cPtr, false);
  }

  public static OperationMatrix createOperationDiagonal(Grid grid) {
    long cPtr = jsgppJNI.createOperationDiagonal__SWIG_1(Grid.getCPtr(grid), grid);
    return (cPtr == 0) ? null : new OperationMatrix(cPtr, false);
  }

  public static OperationHierarchisation createOperationHierarchisation(Grid grid) {
    long cPtr = jsgppJNI.createOperationHierarchisation(Grid.getCPtr(grid), grid);
    return (cPtr == 0) ? null : new OperationHierarchisation(cPtr, false);
  }

  public static OperationQuadrature createOperationQuadrature(Grid grid) {
    long cPtr = jsgppJNI.createOperationQuadrature(Grid.getCPtr(grid), grid);
    return (cPtr == 0) ? null : new OperationQuadrature(cPtr, false);
  }

  public static OperationFirstMoment createOperationFirstMoment(Grid grid) {
    long cPtr = jsgppJNI.createOperationFirstMoment(Grid.getCPtr(grid), grid);
    return (cPtr == 0) ? null : new OperationFirstMoment(cPtr, false);
  }

  public static OperationSecondMoment createOperationSecondMoment(Grid grid) {
    long cPtr = jsgppJNI.createOperationSecondMoment(Grid.getCPtr(grid), grid);
    return (cPtr == 0) ? null : new OperationSecondMoment(cPtr, false);
  }

  public static OperationConvert createOperationConvert(Grid grid) {
    long cPtr = jsgppJNI.createOperationConvert(Grid.getCPtr(grid), grid);
    return (cPtr == 0) ? null : new OperationConvert(cPtr, false);
  }

  public static OperationMatrix createOperationIdentity(Grid grid) {
    long cPtr = jsgppJNI.createOperationIdentity(Grid.getCPtr(grid), grid);
    return (cPtr == 0) ? null : new OperationMatrix(cPtr, false);
  }

  public static OperationEval createOperationEval(Grid grid) {
    long cPtr = jsgppJNI.createOperationEval(Grid.getCPtr(grid), grid);
    return (cPtr == 0) ? null : new OperationEval(cPtr, false);
  }

  public static OperationMultipleEval createOperationMultipleEval(Grid grid, DataMatrix dataset) {
    long cPtr = jsgppJNI.createOperationMultipleEval__SWIG_0(Grid.getCPtr(grid), grid, DataMatrix.getCPtr(dataset), dataset);
    return (cPtr == 0) ? null : new OperationMultipleEval(cPtr, false);
  }

  public static OperationMultipleEval createOperationMultipleEvalInter(Grid grid, DataMatrix dataset, SWIGTYPE_p_std__vectorT_std__vectorT_size_t_t_t interactions) {
    long cPtr = jsgppJNI.createOperationMultipleEvalInter(Grid.getCPtr(grid), grid, DataMatrix.getCPtr(dataset), dataset, SWIGTYPE_p_std__vectorT_std__vectorT_size_t_t_t.getCPtr(interactions));
    return (cPtr == 0) ? null : new OperationMultipleEval(cPtr, false);
  }

  public static OperationEval createOperationEvalNaive(Grid grid) {
    long cPtr = jsgppJNI.createOperationEvalNaive(Grid.getCPtr(grid), grid);
    return (cPtr == 0) ? null : new OperationEval(cPtr, false);
  }

  public static OperationEvalGradient createOperationEvalGradientNaive(Grid grid) {
    long cPtr = jsgppJNI.createOperationEvalGradientNaive(Grid.getCPtr(grid), grid);
    return (cPtr == 0) ? null : new OperationEvalGradient(cPtr, false);
  }

  public static OperationEvalHessian createOperationEvalHessianNaive(Grid grid) {
    long cPtr = jsgppJNI.createOperationEvalHessianNaive(Grid.getCPtr(grid), grid);
    return (cPtr == 0) ? null : new OperationEvalHessian(cPtr, false);
  }

  public static OperationEvalPartialDerivative createOperationEvalPartialDerivativeNaive(Grid grid) {
    long cPtr = jsgppJNI.createOperationEvalPartialDerivativeNaive(Grid.getCPtr(grid), grid);
    return (cPtr == 0) ? null : new OperationEvalPartialDerivative(cPtr, false);
  }

  public static OperationMatrix createOperationLaplace(Grid grid) {
    long cPtr = jsgppJNI.createOperationLaplace__SWIG_0(Grid.getCPtr(grid), grid);
    return (cPtr == 0) ? null : new OperationMatrix(cPtr, false);
  }

  public static OperationMatrix createOperationLaplace(Grid grid, DataVector coef) {
    long cPtr = jsgppJNI.createOperationLaplace__SWIG_1(Grid.getCPtr(grid), grid, DataVector.getCPtr(coef), coef);
    return (cPtr == 0) ? null : new OperationMatrix(cPtr, false);
  }

  public static OperationMatrix createOperationLTwoDotProduct(Grid grid) {
    long cPtr = jsgppJNI.createOperationLTwoDotProduct(Grid.getCPtr(grid), grid);
    return (cPtr == 0) ? null : new OperationMatrix(cPtr, false);
  }

  public static OperationMatrix createOperationLTwoDotExplicit(Grid grid) {
    long cPtr = jsgppJNI.createOperationLTwoDotExplicit__SWIG_0(Grid.getCPtr(grid), grid);
    return (cPtr == 0) ? null : new OperationMatrix(cPtr, false);
  }

  public static OperationMatrix createOperationLTwoDotExplicit(DataMatrix m, Grid grid) {
    long cPtr = jsgppJNI.createOperationLTwoDotExplicit__SWIG_1(DataMatrix.getCPtr(m), m, Grid.getCPtr(grid), grid);
    return (cPtr == 0) ? null : new OperationMatrix(cPtr, false);
  }

  public static OperationMatrix createOperationLaplaceEnhanced(Grid grid) {
    long cPtr = jsgppJNI.createOperationLaplaceEnhanced__SWIG_0(Grid.getCPtr(grid), grid);
    return (cPtr == 0) ? null : new OperationMatrix(cPtr, false);
  }

  public static OperationMatrix createOperationLaplaceEnhanced(Grid grid, DataVector coef) {
    long cPtr = jsgppJNI.createOperationLaplaceEnhanced__SWIG_1(Grid.getCPtr(grid), grid, DataVector.getCPtr(coef), coef);
    return (cPtr == 0) ? null : new OperationMatrix(cPtr, false);
  }

  public static DBMatOnlineDE buildDBMatOnlineDE(DBMatOffline offline, double beta) {
    long cPtr = jsgppJNI.buildDBMatOnlineDE__SWIG_0(DBMatOffline.getCPtr(offline), offline, beta);
    return (cPtr == 0) ? null : new DBMatOnlineDE(cPtr, false);
  }

  public static DBMatOnlineDE buildDBMatOnlineDE(DBMatOffline offline) {
    long cPtr = jsgppJNI.buildDBMatOnlineDE__SWIG_1(DBMatOffline.getCPtr(offline), offline);
    return (cPtr == 0) ? null : new DBMatOnlineDE(cPtr, false);
  }

  public static DBMatOffline buildOfflineObject(RegularGridConfiguration gridConfig, AdpativityConfiguration adaptivityConfig, RegularizationConfiguration regularizationConfig, DensityEstimationConfiguration densityEstimationConfig) {
    long cPtr = jsgppJNI.buildOfflineObject(RegularGridConfiguration.getCPtr(gridConfig), gridConfig, AdpativityConfiguration.getCPtr(adaptivityConfig), adaptivityConfig, RegularizationConfiguration.getCPtr(regularizationConfig), regularizationConfig, DensityEstimationConfiguration.getCPtr(densityEstimationConfig), densityEstimationConfig);
    return (cPtr == 0) ? null : new DBMatOffline(cPtr, false);
  }

  public static DBMatOffline buildFromFile(String fname) {
    long cPtr = jsgppJNI.buildFromFile(fname);
    return (cPtr == 0) ? null : new DBMatOffline(cPtr, false);
  }

  public static OperationTest createOperationTest(Grid grid) {
    long cPtr = jsgppJNI.createOperationTest(Grid.getCPtr(grid), grid);
    return (cPtr == 0) ? null : new OperationTest(cPtr, false);
  }

  public static OperationMatrix createOperationRegularizationDiagonal(Grid grid, int mode, double k) {
    long cPtr = jsgppJNI.createOperationRegularizationDiagonal(Grid.getCPtr(grid), grid, mode, k);
    return (cPtr == 0) ? null : new OperationMatrix(cPtr, false);
  }

  public static SWIGTYPE_p_sgpp__datadriven__OperationDensityMarginalize createOperationDensityMarginalize(Grid grid) {
    long cPtr = jsgppJNI.createOperationDensityMarginalize(Grid.getCPtr(grid), grid);
    return (cPtr == 0) ? null : new SWIGTYPE_p_sgpp__datadriven__OperationDensityMarginalize(cPtr, false);
  }

  public static SWIGTYPE_p_sgpp__datadriven__OperationDensityMargTo1D createOperationDensityMargTo1D(Grid grid) {
    long cPtr = jsgppJNI.createOperationDensityMargTo1D(Grid.getCPtr(grid), grid);
    return (cPtr == 0) ? null : new SWIGTYPE_p_sgpp__datadriven__OperationDensityMargTo1D(cPtr, false);
  }

  public static SWIGTYPE_p_sgpp__datadriven__OperationDensitySampling1D createOperationDensitySampling1D(Grid grid) {
    long cPtr = jsgppJNI.createOperationDensitySampling1D(Grid.getCPtr(grid), grid);
    return (cPtr == 0) ? null : new SWIGTYPE_p_sgpp__datadriven__OperationDensitySampling1D(cPtr, false);
  }

  public static SWIGTYPE_p_sgpp__datadriven__OperationDensitySampling createOperationDensitySampling(Grid grid) {
    long cPtr = jsgppJNI.createOperationDensitySampling(Grid.getCPtr(grid), grid);
    return (cPtr == 0) ? null : new SWIGTYPE_p_sgpp__datadriven__OperationDensitySampling(cPtr, false);
  }

  public static SWIGTYPE_p_sgpp__datadriven__OperationDensityRejectionSampling createOperationDensityRejectionSampling(Grid grid) {
    long cPtr = jsgppJNI.createOperationDensityRejectionSampling(Grid.getCPtr(grid), grid);
    return (cPtr == 0) ? null : new SWIGTYPE_p_sgpp__datadriven__OperationDensityRejectionSampling(cPtr, false);
  }

  public static SWIGTYPE_p_sgpp__datadriven__OperationDensityConditional createOperationDensityConditional(Grid grid) {
    long cPtr = jsgppJNI.createOperationDensityConditional(Grid.getCPtr(grid), grid);
    return (cPtr == 0) ? null : new SWIGTYPE_p_sgpp__datadriven__OperationDensityConditional(cPtr, false);
  }

  public static OperationRosenblattTransformation createOperationRosenblattTransformation(Grid grid) {
    long cPtr = jsgppJNI.createOperationRosenblattTransformation(Grid.getCPtr(grid), grid);
    return (cPtr == 0) ? null : new OperationRosenblattTransformation(cPtr, false);
  }

  public static SWIGTYPE_p_sgpp__datadriven__OperationTransformation1D createOperationRosenblattTransformation1D(Grid grid) {
    long cPtr = jsgppJNI.createOperationRosenblattTransformation1D(Grid.getCPtr(grid), grid);
    return (cPtr == 0) ? null : new SWIGTYPE_p_sgpp__datadriven__OperationTransformation1D(cPtr, false);
  }

  public static OperationInverseRosenblattTransformation createOperationInverseRosenblattTransformation(Grid grid) {
    long cPtr = jsgppJNI.createOperationInverseRosenblattTransformation(Grid.getCPtr(grid), grid);
    return (cPtr == 0) ? null : new OperationInverseRosenblattTransformation(cPtr, false);
  }

  public static SWIGTYPE_p_sgpp__datadriven__OperationTransformation1D createOperationInverseRosenblattTransformation1D(Grid grid) {
    long cPtr = jsgppJNI.createOperationInverseRosenblattTransformation1D(Grid.getCPtr(grid), grid);
    return (cPtr == 0) ? null : new SWIGTYPE_p_sgpp__datadriven__OperationTransformation1D(cPtr, false);
  }

  public static OperationRosenblattTransformationKDE createOperationRosenblattTransformationKDE(GaussianKDE kde) {
    long cPtr = jsgppJNI.createOperationRosenblattTransformationKDE(GaussianKDE.getCPtr(kde), kde);
    return (cPtr == 0) ? null : new OperationRosenblattTransformationKDE(cPtr, false);
  }

  public static OperationInverseRosenblattTransformationKDE createOperationInverseRosenblattTransformationKDE(GaussianKDE kde) {
    long cPtr = jsgppJNI.createOperationInverseRosenblattTransformationKDE(GaussianKDE.getCPtr(kde), kde);
    return (cPtr == 0) ? null : new OperationInverseRosenblattTransformationKDE(cPtr, false);
  }

  public static OperationDensityMarginalizeKDE createOperationDensityMarginalizeKDE(GaussianKDE kde) {
    long cPtr = jsgppJNI.createOperationDensityMarginalizeKDE(GaussianKDE.getCPtr(kde), kde);
    return (cPtr == 0) ? null : new OperationDensityMarginalizeKDE(cPtr, false);
  }

  public static OperationDensityConditionalKDE createOperationDensityConditionalKDE(GaussianKDE kde) {
    long cPtr = jsgppJNI.createOperationDensityConditionalKDE(GaussianKDE.getCPtr(kde), kde);
    return (cPtr == 0) ? null : new OperationDensityConditionalKDE(cPtr, false);
  }

  public static OperationMultipleEval createOperationMultipleEval(Grid grid, DataMatrix dataset, SWIGTYPE_p_sgpp__datadriven__OperationMultipleEvalConfiguration configuration) {
    long cPtr = jsgppJNI.createOperationMultipleEval__SWIG_1(Grid.getCPtr(grid), grid, DataMatrix.getCPtr(dataset), dataset, SWIGTYPE_p_sgpp__datadriven__OperationMultipleEvalConfiguration.getCPtr(configuration));
    return (cPtr == 0) ? null : new OperationMultipleEval(cPtr, false);
  }

  public static SWIGTYPE_p_sgpp__quadrature__OperationQuadratureMCAdvanced createOperationQuadratureMCAdvanced(Grid grid, long numberOfSamples, java.math.BigInteger seed) {
    long cPtr = jsgppJNI.createOperationQuadratureMCAdvanced__SWIG_0(Grid.getCPtr(grid), grid, numberOfSamples, seed);
    return (cPtr == 0) ? null : new SWIGTYPE_p_sgpp__quadrature__OperationQuadratureMCAdvanced(cPtr, false);
  }

  public static SWIGTYPE_p_sgpp__quadrature__OperationQuadratureMCAdvanced createOperationQuadratureMCAdvanced(Grid grid, long numberOfSamples) {
    long cPtr = jsgppJNI.createOperationQuadratureMCAdvanced__SWIG_1(Grid.getCPtr(grid), grid, numberOfSamples);
    return (cPtr == 0) ? null : new SWIGTYPE_p_sgpp__quadrature__OperationQuadratureMCAdvanced(cPtr, false);
  }

  public static void omp_set_num_threads(int num_threads) {
    jsgppJNI.omp_set_num_threads(num_threads);
  }

  public static boolean getARMADILLO_ENABLED() {
    return jsgppJNI.ARMADILLO_ENABLED_get();
  }

  public static boolean getEIGEN_ENABLED() {
    return jsgppJNI.EIGEN_ENABLED_get();
  }

  public static boolean getGMMPP_ENABLED() {
    return jsgppJNI.GMMPP_ENABLED_get();
  }

  public static boolean getUMFPACK_ENABLED() {
    return jsgppJNI.UMFPACK_ENABLED_get();
  }

  public static void OptFileIOWriteGrid(String filename, GridStorage gridStorage) {
    jsgppJNI.OptFileIOWriteGrid__SWIG_0(filename, GridStorage.getCPtr(gridStorage), gridStorage);
  }

  public static void OptFileIOWriteGrid(String filename, GridStorage gridStorage, DataVector functionValues) {
    jsgppJNI.OptFileIOWriteGrid__SWIG_1(filename, GridStorage.getCPtr(gridStorage), gridStorage, DataVector.getCPtr(functionValues), functionValues);
  }

  public static void OptFileIOReadGrid(String filename, GridStorage gridStorage) {
    jsgppJNI.OptFileIOReadGrid__SWIG_0(filename, GridStorage.getCPtr(gridStorage), gridStorage);
  }

  public static void OptFileIOReadGrid(String filename, GridStorage gridStorage, DataVector functionValues) {
    jsgppJNI.OptFileIOReadGrid__SWIG_1(filename, GridStorage.getCPtr(gridStorage), gridStorage, DataVector.getCPtr(functionValues), functionValues);
  }

  public static void OptFileIOWriteMatrix(String filename, DataMatrix A) {
    jsgppJNI.OptFileIOWriteMatrix__SWIG_0(filename, DataMatrix.getCPtr(A), A);
  }

  public static void OptFileIOReadMatrix(String filename, DataMatrix A) {
    jsgppJNI.OptFileIOReadMatrix__SWIG_0(filename, DataMatrix.getCPtr(A), A);
  }

  public static void OptFileIOWriteVector(String filename, DataVector x) {
    jsgppJNI.OptFileIOWriteVector__SWIG_0(filename, DataVector.getCPtr(x), x);
  }

  public static void OptFileIOReadVector(String filename, DataVector x) {
    jsgppJNI.OptFileIOReadVector__SWIG_0(filename, DataVector.getCPtr(x), x);
  }

  public static void OptMathSchurDecomposition(DataMatrix A, DataMatrix V) {
    jsgppJNI.OptMathSchurDecomposition(DataMatrix.getCPtr(A), A, DataMatrix.getCPtr(V), V);
  }

  public static void OptMathQRDecomposition(DataMatrix A, DataMatrix Q) {
    jsgppJNI.OptMathQRDecomposition(DataMatrix.getCPtr(A), A, DataMatrix.getCPtr(Q), Q);
  }

  public static void OptMathHessenbergForm(DataMatrix A, DataMatrix V) {
    jsgppJNI.OptMathHessenbergForm(DataMatrix.getCPtr(A), A, DataMatrix.getCPtr(V), V);
  }

  public static void OptMathHouseholderTransformation(DataMatrix A, long i, long j, DataMatrix Q) {
    jsgppJNI.OptMathHouseholderTransformation(DataMatrix.getCPtr(A), A, i, j, DataMatrix.getCPtr(Q), Q);
  }

  public static SWIGTYPE_p_std__ostream optOperatorInsertion(SWIGTYPE_p_std__ostream stream, DataVector x) {
    return new SWIGTYPE_p_std__ostream(jsgppJNI.optOperatorInsertion__SWIG_1(SWIGTYPE_p_std__ostream.getCPtr(stream), DataVector.getCPtr(x), x), false);
  }

  public static SWIGTYPE_p_std__ostream optOperatorInsertion(SWIGTYPE_p_std__ostream stream, GridPoint x) {
    return new SWIGTYPE_p_std__ostream(jsgppJNI.optOperatorInsertion__SWIG_2(SWIGTYPE_p_std__ostream.getCPtr(stream), GridPoint.getCPtr(x), x), false);
  }

  public static OperationMultipleHierarchisation createOperationMultipleHierarchisation(Grid grid) {
    long cPtr = jsgppJNI.createOperationMultipleHierarchisation(Grid.getCPtr(grid), grid);
    return (cPtr == 0) ? null : new OperationMultipleHierarchisation(cPtr, false);
  }

  public static void OptFileIOWriteMatrix(String filename, DoubleVector A, long m, long n) {
    jsgppJNI.OptFileIOWriteMatrix__SWIG_2(filename, DoubleVector.getCPtr(A), A, m, n);
  }

  public static void OptFileIOReadMatrix(String filename, DoubleVector A, SWIGTYPE_p_size_t m, SWIGTYPE_p_size_t n) {
    jsgppJNI.OptFileIOReadMatrix__SWIG_2(filename, DoubleVector.getCPtr(A), A, SWIGTYPE_p_size_t.getCPtr(m), SWIGTYPE_p_size_t.getCPtr(n));
  }

  public static void OptFileIOWriteVector(String filename, DoubleVector x) {
    jsgppJNI.OptFileIOWriteVector__SWIG_2(filename, DoubleVector.getCPtr(x), x);
  }

  public static void OptFileIOReadVector(String filename, DoubleVector x) {
    jsgppJNI.OptFileIOReadVector__SWIG_2(filename, DoubleVector.getCPtr(x), x);
  }

}
