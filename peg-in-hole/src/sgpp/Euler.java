/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package sgpp;

public class Euler extends ODESolver {
  private transient long swigCPtr;

  protected Euler(long cPtr, boolean cMemoryOwn) {
    super(jsgppJNI.Euler_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Euler obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        jsgppJNI.delete_Euler(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public Euler(String Mode, long imax, double timestepSize, boolean generateAnimation, ScreenOutput screen) {
    this(jsgppJNI.new_Euler__SWIG_0(Mode, imax, timestepSize, generateAnimation, ScreenOutput.getCPtr(screen), screen), true);
  }

  public Euler(String Mode, long imax, double timestepSize, boolean generateAnimation) {
    this(jsgppJNI.new_Euler__SWIG_1(Mode, imax, timestepSize, generateAnimation), true);
  }

  public Euler(String Mode, long imax, double timestepSize) {
    this(jsgppJNI.new_Euler__SWIG_2(Mode, imax, timestepSize), true);
  }

  public void solve(SLESolver LinearSystemSolver, OperationParabolicPDESolverSystem System, boolean bIdentifyLastStep, boolean verbose) {
    jsgppJNI.Euler_solve__SWIG_0(swigCPtr, this, SLESolver.getCPtr(LinearSystemSolver), LinearSystemSolver, OperationParabolicPDESolverSystem.getCPtr(System), System, bIdentifyLastStep, verbose);
  }

  public void solve(SLESolver LinearSystemSolver, OperationParabolicPDESolverSystem System, boolean bIdentifyLastStep) {
    jsgppJNI.Euler_solve__SWIG_1(swigCPtr, this, SLESolver.getCPtr(LinearSystemSolver), LinearSystemSolver, OperationParabolicPDESolverSystem.getCPtr(System), System, bIdentifyLastStep);
  }

  public void solve(SLESolver LinearSystemSolver, OperationParabolicPDESolverSystem System) {
    jsgppJNI.Euler_solve__SWIG_2(swigCPtr, this, SLESolver.getCPtr(LinearSystemSolver), LinearSystemSolver, OperationParabolicPDESolverSystem.getCPtr(System), System);
  }

}
