/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package sgpp;

public class OperationTest {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected OperationTest(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(OperationTest obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        jsgppJNI.delete_OperationTest(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public double test(DataVector alpha, DataMatrix data, DataVector classes) {
    return jsgppJNI.OperationTest_test(swigCPtr, this, DataVector.getCPtr(alpha), alpha, DataMatrix.getCPtr(data), data, DataVector.getCPtr(classes), classes);
  }

  public double testMSE(DataVector alpha, DataMatrix data, DataVector refValues) {
    return jsgppJNI.OperationTest_testMSE(swigCPtr, this, DataVector.getCPtr(alpha), alpha, DataMatrix.getCPtr(data), data, DataVector.getCPtr(refValues), refValues);
  }

  public double testWithCharacteristicNumber(DataVector alpha, DataMatrix data, DataVector classes, DataVector charaNumbers) {
    return jsgppJNI.OperationTest_testWithCharacteristicNumber(swigCPtr, this, DataVector.getCPtr(alpha), alpha, DataMatrix.getCPtr(data), data, DataVector.getCPtr(classes), classes, DataVector.getCPtr(charaNumbers), charaNumbers);
  }

  public void calculateROCcurve(DataVector alpha, DataMatrix data, DataVector classes, DataVector thresholds, DataMatrix ROC_curve) {
    jsgppJNI.OperationTest_calculateROCcurve(swigCPtr, this, DataVector.getCPtr(alpha), alpha, DataMatrix.getCPtr(data), data, DataVector.getCPtr(classes), classes, DataVector.getCPtr(thresholds), thresholds, DataMatrix.getCPtr(ROC_curve), ROC_curve);
  }

}
