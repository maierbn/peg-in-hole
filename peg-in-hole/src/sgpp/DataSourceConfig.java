/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package sgpp;

public class DataSourceConfig {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected DataSourceConfig(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(DataSourceConfig obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        jsgppJNI.delete_DataSourceConfig(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setFilePath(String value) {
    jsgppJNI.DataSourceConfig_filePath_set(swigCPtr, this, value);
  }

  public String getFilePath() {
    return jsgppJNI.DataSourceConfig_filePath_get(swigCPtr, this);
  }

  public void setFileType(DataSourceFileType value) {
    jsgppJNI.DataSourceConfig_fileType_set(swigCPtr, this, value.swigValue());
  }

  public DataSourceFileType getFileType() {
    return DataSourceFileType.swigToEnum(jsgppJNI.DataSourceConfig_fileType_get(swigCPtr, this));
  }

  public void setIsCompressed(boolean value) {
    jsgppJNI.DataSourceConfig_isCompressed_set(swigCPtr, this, value);
  }

  public boolean getIsCompressed() {
    return jsgppJNI.DataSourceConfig_isCompressed_get(swigCPtr, this);
  }

  public void setNumBatches(long value) {
    jsgppJNI.DataSourceConfig_numBatches_set(swigCPtr, this, value);
  }

  public long getNumBatches() {
    return jsgppJNI.DataSourceConfig_numBatches_get(swigCPtr, this);
  }

  public void setBatchSize(long value) {
    jsgppJNI.DataSourceConfig_batchSize_set(swigCPtr, this, value);
  }

  public long getBatchSize() {
    return jsgppJNI.DataSourceConfig_batchSize_get(swigCPtr, this);
  }

  public DataSourceConfig() {
    this(jsgppJNI.new_DataSourceConfig(), true);
  }

}
