/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package sgpp;

public class GridPoint {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected GridPoint(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(GridPoint obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        jsgppJNI.delete_GridPoint(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public GridPoint(long dimension) {
    this(jsgppJNI.new_GridPoint__SWIG_0(dimension), true);
  }

  public GridPoint() {
    this(jsgppJNI.new_GridPoint__SWIG_1(), true);
  }

  public GridPoint(GridPoint o) {
    this(jsgppJNI.new_GridPoint__SWIG_2(GridPoint.getCPtr(o), o), true);
  }

  public GridPoint(SWIGTYPE_p_std__istream istream, int version) {
    this(jsgppJNI.new_GridPoint__SWIG_3(SWIGTYPE_p_std__istream.getCPtr(istream), version), true);
  }

  public void serialize(SWIGTYPE_p_std__ostream ostream, int version) {
    jsgppJNI.GridPoint_serialize(swigCPtr, this, SWIGTYPE_p_std__ostream.getCPtr(ostream), version);
  }

  public long getDimension() {
    return jsgppJNI.GridPoint_getDimension(swigCPtr, this);
  }

  public void set(long d, long l, long i) {
    jsgppJNI.GridPoint_set__SWIG_0(swigCPtr, this, d, l, i);
  }

  public void set(long d, long l, long i, boolean isLeaf) {
    jsgppJNI.GridPoint_set__SWIG_1(swigCPtr, this, d, l, i, isLeaf);
  }

  public void push(long d, long l, long i) {
    jsgppJNI.GridPoint_push__SWIG_0(swigCPtr, this, d, l, i);
  }

  public void push(long d, long l, long i, boolean isLeaf) {
    jsgppJNI.GridPoint_push__SWIG_1(swigCPtr, this, d, l, i, isLeaf);
  }

  public void get(long d, SWIGTYPE_p_unsigned_int l, SWIGTYPE_p_unsigned_int i) {
    jsgppJNI.GridPoint_get(swigCPtr, this, d, SWIGTYPE_p_unsigned_int.getCPtr(l), SWIGTYPE_p_unsigned_int.getCPtr(i));
  }

  public long getLevel(long d) {
    return jsgppJNI.GridPoint_getLevel(swigCPtr, this, d);
  }

  public long getIndex(long d) {
    return jsgppJNI.GridPoint_getIndex(swigCPtr, this, d);
  }

  public void setLeaf(boolean isLeaf) {
    jsgppJNI.GridPoint_setLeaf(swigCPtr, this, isLeaf);
  }

  public boolean isLeaf() {
    return jsgppJNI.GridPoint_isLeaf(swigCPtr, this);
  }

  public double getStandardCoordinate(long d) {
    return jsgppJNI.GridPoint_getStandardCoordinate(swigCPtr, this, d);
  }

  public void getStandardCoordinates(DataVector coordinates) {
    jsgppJNI.GridPoint_getStandardCoordinates(swigCPtr, this, DataVector.getCPtr(coordinates), coordinates);
  }

  public boolean isInnerPoint() {
    return jsgppJNI.GridPoint_isInnerPoint(swigCPtr, this);
  }

  public void rehash() {
    jsgppJNI.GridPoint_rehash(swigCPtr, this);
  }

  public long getHash() {
    return jsgppJNI.GridPoint_getHash(swigCPtr, this);
  }

  public boolean equals(GridPoint rhs) {
    return jsgppJNI.GridPoint_equals(swigCPtr, this, GridPoint.getCPtr(rhs), rhs);
  }

  public GridPoint assign(GridPoint rhs) {
    return new GridPoint(jsgppJNI.GridPoint_assign(swigCPtr, this, GridPoint.getCPtr(rhs), rhs), false);
  }

  public GridPoint operatorAssignment(GridPoint rhs) {
    return new GridPoint(jsgppJNI.GridPoint_operatorAssignment(swigCPtr, this, GridPoint.getCPtr(rhs), rhs), false);
  }

  public String toString() {
    return jsgppJNI.GridPoint_toString__SWIG_0(swigCPtr, this);
  }

  public void toString(SWIGTYPE_p_std__ostream stream) {
    jsgppJNI.GridPoint_toString__SWIG_1(swigCPtr, this, SWIGTYPE_p_std__ostream.getCPtr(stream));
  }

  public long getLevelSum() {
    return jsgppJNI.GridPoint_getLevelSum(swigCPtr, this);
  }

  public long getLevelMax() {
    return jsgppJNI.GridPoint_getLevelMax(swigCPtr, this);
  }

  public long getLevelMin() {
    return jsgppJNI.GridPoint_getLevelMin(swigCPtr, this);
  }

  public void getLeftLevelZero(long dim) {
    jsgppJNI.GridPoint_getLeftLevelZero(swigCPtr, this, dim);
  }

  public void getRightLevelZero(long dim) {
    jsgppJNI.GridPoint_getRightLevelZero(swigCPtr, this, dim);
  }

  public void getLeftChild(long dim) {
    jsgppJNI.GridPoint_getLeftChild(swigCPtr, this, dim);
  }

  public void getRightChild(long dim) {
    jsgppJNI.GridPoint_getRightChild(swigCPtr, this, dim);
  }

  public void getRoot(long d) {
    jsgppJNI.GridPoint_getRoot(swigCPtr, this, d);
  }

}
