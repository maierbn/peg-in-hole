/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package sgpp;

public class DBMatOfflineChol extends DBMatOfflineGE {
  private transient long swigCPtr;

  protected DBMatOfflineChol(long cPtr, boolean cMemoryOwn) {
    super(jsgppJNI.DBMatOfflineChol_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(DBMatOfflineChol obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        jsgppJNI.delete_DBMatOfflineChol(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public DBMatOfflineChol(RegularGridConfiguration gridConfig, AdpativityConfiguration adaptivityConfig, RegularizationConfiguration regularizationConfig, DensityEstimationConfiguration densityEstimationConfig) {
    this(jsgppJNI.new_DBMatOfflineChol__SWIG_0(RegularGridConfiguration.getCPtr(gridConfig), gridConfig, AdpativityConfiguration.getCPtr(adaptivityConfig), adaptivityConfig, RegularizationConfiguration.getCPtr(regularizationConfig), regularizationConfig, DensityEstimationConfiguration.getCPtr(densityEstimationConfig), densityEstimationConfig), true);
  }

  public DBMatOfflineChol(String fileName) {
    this(jsgppJNI.new_DBMatOfflineChol__SWIG_1(fileName), true);
  }

  public DBMatOffline clone() {
    long cPtr = jsgppJNI.DBMatOfflineChol_clone(swigCPtr, this);
    return (cPtr == 0) ? null : new DBMatOffline(cPtr, false);
  }

  public boolean isRefineable() {
    return jsgppJNI.DBMatOfflineChol_isRefineable(swigCPtr, this);
  }

  public void decomposeMatrix() {
    jsgppJNI.DBMatOfflineChol_decomposeMatrix(swigCPtr, this);
  }

  public void choleskyModification(long newPoints, SWIGTYPE_p_std__listT_size_t_t deletedPoints, double lambda) {
    jsgppJNI.DBMatOfflineChol_choleskyModification(swigCPtr, this, newPoints, SWIGTYPE_p_std__listT_size_t_t.getCPtr(deletedPoints), lambda);
  }

}
