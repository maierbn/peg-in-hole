/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package sgpp;

public class Metric {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected Metric(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Metric obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        jsgppJNI.delete_Metric(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public Metric __assign__(Metric rhs) {
    return new Metric(jsgppJNI.Metric___assign__(swigCPtr, this, Metric.getCPtr(rhs), rhs), false);
  }

  public Metric clone() {
    long cPtr = jsgppJNI.Metric_clone(swigCPtr, this);
    return (cPtr == 0) ? null : new Metric(cPtr, false);
  }

  public double measure(DataVector predictedValues, DataVector trueValues) {
    return jsgppJNI.Metric_measure(swigCPtr, this, DataVector.getCPtr(predictedValues), predictedValues, DataVector.getCPtr(trueValues), trueValues);
  }

}
