/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package sgpp;

public class OptFullSLE extends CloneableSLE {
  private transient long swigCPtr;

  protected OptFullSLE(long cPtr, boolean cMemoryOwn) {
    super(jsgppJNI.OptFullSLE_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(OptFullSLE obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        jsgppJNI.delete_OptFullSLE(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public OptFullSLE(DataMatrix A) {
    this(jsgppJNI.new_OptFullSLE(DataMatrix.getCPtr(A), A), true);
  }

  public boolean isMatrixEntryNonZero(long i, long j) {
    return jsgppJNI.OptFullSLE_isMatrixEntryNonZero(swigCPtr, this, i, j);
  }

  public double getMatrixEntry(long i, long j) {
    return jsgppJNI.OptFullSLE_getMatrixEntry(swigCPtr, this, i, j);
  }

  public DataMatrix getA() {
    return new DataMatrix(jsgppJNI.OptFullSLE_getA(swigCPtr, this), false);
  }

  public long getDimension() {
    return jsgppJNI.OptFullSLE_getDimension(swigCPtr, this);
  }

  public void clone(SWIGTYPE_p_std__unique_ptrT_sgpp__optimization__CloneableSLE_t clone) {
    jsgppJNI.OptFullSLE_clone(swigCPtr, this, SWIGTYPE_p_std__unique_ptrT_sgpp__optimization__CloneableSLE_t.getCPtr(clone));
  }

}
