/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package sgpp;

public class OperationRosenblattTransformationKDE {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected OperationRosenblattTransformationKDE(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(OperationRosenblattTransformationKDE obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        jsgppJNI.delete_OperationRosenblattTransformationKDE(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public OperationRosenblattTransformationKDE(GaussianKDE kde) {
    this(jsgppJNI.new_OperationRosenblattTransformationKDE(GaussianKDE.getCPtr(kde), kde), true);
  }

  public void doTransformation(DataMatrix pointsCdf, DataMatrix pointsUniform) {
    jsgppJNI.OperationRosenblattTransformationKDE_doTransformation(swigCPtr, this, DataMatrix.getCPtr(pointsCdf), pointsCdf, DataMatrix.getCPtr(pointsUniform), pointsUniform);
  }

  public void doShuffledTransformation(DataMatrix pointsCdf, DataMatrix pointsUniform) {
    jsgppJNI.OperationRosenblattTransformationKDE_doShuffledTransformation(swigCPtr, this, DataMatrix.getCPtr(pointsCdf), pointsCdf, DataMatrix.getCPtr(pointsUniform), pointsUniform);
  }

  public double doTransformation1D(double x, DataVector samples1d, double sigma, DataVector kern) {
    return jsgppJNI.OperationRosenblattTransformationKDE_doTransformation1D(swigCPtr, this, x, DataVector.getCPtr(samples1d), samples1d, sigma, DataVector.getCPtr(kern), kern);
  }

}
