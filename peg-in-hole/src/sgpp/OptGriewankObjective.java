/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package sgpp;

public class OptGriewankObjective extends OptTestScalarFunction {
  private transient long swigCPtr;

  protected OptGriewankObjective(long cPtr, boolean cMemoryOwn) {
    super(jsgppJNI.OptGriewankObjective_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(OptGriewankObjective obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        jsgppJNI.delete_OptGriewankObjective(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public OptGriewankObjective(long d) {
    this(jsgppJNI.new_OptGriewankObjective(d), true);
  }

  public double evalUndisplaced(DataVector x) {
    return jsgppJNI.OptGriewankObjective_evalUndisplaced(swigCPtr, this, DataVector.getCPtr(x), x);
  }

  public void clone(SWIGTYPE_p_std__unique_ptrT_sgpp__optimization__ScalarFunction_t clone) {
    jsgppJNI.OptGriewankObjective_clone(swigCPtr, this, SWIGTYPE_p_std__unique_ptrT_sgpp__optimization__ScalarFunction_t.getCPtr(clone));
  }

}
