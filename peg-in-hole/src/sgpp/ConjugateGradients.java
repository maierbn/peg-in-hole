/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package sgpp;

public class ConjugateGradients extends SLESolver {
  private transient long swigCPtr;

  protected ConjugateGradients(long cPtr, boolean cMemoryOwn) {
    super(jsgppJNI.ConjugateGradients_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(ConjugateGradients obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        jsgppJNI.delete_ConjugateGradients(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  protected void swigDirectorDisconnect() {
    swigCMemOwn = false;
    delete();
  }

  public void swigReleaseOwnership() {
    swigCMemOwn = false;
    jsgppJNI.ConjugateGradients_change_ownership(this, swigCPtr, false);
  }

  public void swigTakeOwnership() {
    swigCMemOwn = true;
    jsgppJNI.ConjugateGradients_change_ownership(this, swigCPtr, true);
  }

  public ConjugateGradients(long imax, double epsilon) {
    this(jsgppJNI.new_ConjugateGradients(imax, epsilon), true);
    jsgppJNI.ConjugateGradients_director_connect(this, swigCPtr, swigCMemOwn, true);
  }

  public void solve(OperationMatrix SystemMatrix, DataVector alpha, DataVector b, boolean reuse, boolean verbose, double max_threshold) {
    if (getClass() == ConjugateGradients.class) jsgppJNI.ConjugateGradients_solve__SWIG_0(swigCPtr, this, OperationMatrix.getCPtr(SystemMatrix), SystemMatrix, DataVector.getCPtr(alpha), alpha, DataVector.getCPtr(b), b, reuse, verbose, max_threshold); else jsgppJNI.ConjugateGradients_solveSwigExplicitConjugateGradients__SWIG_0(swigCPtr, this, OperationMatrix.getCPtr(SystemMatrix), SystemMatrix, DataVector.getCPtr(alpha), alpha, DataVector.getCPtr(b), b, reuse, verbose, max_threshold);
  }

  public void solve(OperationMatrix SystemMatrix, DataVector alpha, DataVector b, boolean reuse, boolean verbose) {
    if (getClass() == ConjugateGradients.class) jsgppJNI.ConjugateGradients_solve__SWIG_1(swigCPtr, this, OperationMatrix.getCPtr(SystemMatrix), SystemMatrix, DataVector.getCPtr(alpha), alpha, DataVector.getCPtr(b), b, reuse, verbose); else jsgppJNI.ConjugateGradients_solveSwigExplicitConjugateGradients__SWIG_1(swigCPtr, this, OperationMatrix.getCPtr(SystemMatrix), SystemMatrix, DataVector.getCPtr(alpha), alpha, DataVector.getCPtr(b), b, reuse, verbose);
  }

  public void solve(OperationMatrix SystemMatrix, DataVector alpha, DataVector b, boolean reuse) {
    if (getClass() == ConjugateGradients.class) jsgppJNI.ConjugateGradients_solve__SWIG_2(swigCPtr, this, OperationMatrix.getCPtr(SystemMatrix), SystemMatrix, DataVector.getCPtr(alpha), alpha, DataVector.getCPtr(b), b, reuse); else jsgppJNI.ConjugateGradients_solveSwigExplicitConjugateGradients__SWIG_2(swigCPtr, this, OperationMatrix.getCPtr(SystemMatrix), SystemMatrix, DataVector.getCPtr(alpha), alpha, DataVector.getCPtr(b), b, reuse);
  }

  public void solve(OperationMatrix SystemMatrix, DataVector alpha, DataVector b) {
    if (getClass() == ConjugateGradients.class) jsgppJNI.ConjugateGradients_solve__SWIG_3(swigCPtr, this, OperationMatrix.getCPtr(SystemMatrix), SystemMatrix, DataVector.getCPtr(alpha), alpha, DataVector.getCPtr(b), b); else jsgppJNI.ConjugateGradients_solveSwigExplicitConjugateGradients__SWIG_3(swigCPtr, this, OperationMatrix.getCPtr(SystemMatrix), SystemMatrix, DataVector.getCPtr(alpha), alpha, DataVector.getCPtr(b), b);
  }

  public void starting() {
    if (getClass() == ConjugateGradients.class) jsgppJNI.ConjugateGradients_starting(swigCPtr, this); else jsgppJNI.ConjugateGradients_startingSwigExplicitConjugateGradients(swigCPtr, this);
  }

  public void calcStarting() {
    if (getClass() == ConjugateGradients.class) jsgppJNI.ConjugateGradients_calcStarting(swigCPtr, this); else jsgppJNI.ConjugateGradients_calcStartingSwigExplicitConjugateGradients(swigCPtr, this);
  }

  public void iterationComplete() {
    if (getClass() == ConjugateGradients.class) jsgppJNI.ConjugateGradients_iterationComplete(swigCPtr, this); else jsgppJNI.ConjugateGradients_iterationCompleteSwigExplicitConjugateGradients(swigCPtr, this);
  }

  public void complete() {
    if (getClass() == ConjugateGradients.class) jsgppJNI.ConjugateGradients_complete(swigCPtr, this); else jsgppJNI.ConjugateGradients_completeSwigExplicitConjugateGradients(swigCPtr, this);
  }

}
