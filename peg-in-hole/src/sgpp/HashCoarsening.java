/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package sgpp;

public class HashCoarsening {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected HashCoarsening(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(HashCoarsening obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        jsgppJNI.delete_HashCoarsening(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void free_coarsen_NFirstOnly(GridStorage storage, CoarseningFunctor functor, DataVector alpha, long numFirstPoints, long minIndexConsidered) {
    jsgppJNI.HashCoarsening_free_coarsen_NFirstOnly__SWIG_0(swigCPtr, this, GridStorage.getCPtr(storage), storage, CoarseningFunctor.getCPtr(functor), functor, DataVector.getCPtr(alpha), alpha, numFirstPoints, minIndexConsidered);
  }

  public void free_coarsen_NFirstOnly(GridStorage storage, CoarseningFunctor functor, DataVector alpha, long numFirstPoints) {
    jsgppJNI.HashCoarsening_free_coarsen_NFirstOnly__SWIG_1(swigCPtr, this, GridStorage.getCPtr(storage), storage, CoarseningFunctor.getCPtr(functor), functor, DataVector.getCPtr(alpha), alpha, numFirstPoints);
  }

  public void free_coarsen(GridStorage storage, CoarseningFunctor functor, DataVector alpha) {
    jsgppJNI.HashCoarsening_free_coarsen(swigCPtr, this, GridStorage.getCPtr(storage), storage, CoarseningFunctor.getCPtr(functor), functor, DataVector.getCPtr(alpha), alpha);
  }

  public long getNumberOfRemovablePoints(GridStorage storage) {
    return jsgppJNI.HashCoarsening_getNumberOfRemovablePoints(swigCPtr, this, GridStorage.getCPtr(storage), storage);
  }

  public SWIGTYPE_p_std__listT_size_t_t getDeletedPoints() {
    return new SWIGTYPE_p_std__listT_size_t_t(jsgppJNI.HashCoarsening_getDeletedPoints(swigCPtr, this), true);
  }

  public HashCoarsening() {
    this(jsgppJNI.new_HashCoarsening(), true);
  }

}
