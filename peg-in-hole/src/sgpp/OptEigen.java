/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package sgpp;

public class OptEigen extends OptSLESolver {
  private transient long swigCPtr;

  protected OptEigen(long cPtr, boolean cMemoryOwn) {
    super(jsgppJNI.OptEigen_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(OptEigen obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        jsgppJNI.delete_OptEigen(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public boolean solve(OptSLE system, DataVector b, DataVector x) {
    return jsgppJNI.OptEigen_solve__SWIG_0(swigCPtr, this, OptSLE.getCPtr(system), system, DataVector.getCPtr(b), b, DataVector.getCPtr(x), x);
  }

  public boolean solve(OptSLE system, DataMatrix B, DataMatrix X) {
    return jsgppJNI.OptEigen_solve__SWIG_1(swigCPtr, this, OptSLE.getCPtr(system), system, DataMatrix.getCPtr(B), B, DataMatrix.getCPtr(X), X);
  }

  public OptEigen() {
    this(jsgppJNI.new_OptEigen(), true);
  }

}
