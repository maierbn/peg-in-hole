/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package sgpp;

public class LearnerSGDEOnOff {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected LearnerSGDEOnOff(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(LearnerSGDEOnOff obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        jsgppJNI.delete_LearnerSGDEOnOff(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public LearnerSGDEOnOff(RegularGridConfiguration gridConfig, AdpativityConfiguration adaptivityConfig, RegularizationConfiguration regularizationConfig, DensityEstimationConfiguration densityEstimationConfig, Dataset trainData, Dataset testData, Dataset validationData, DataVector classLabels, long classNumber, boolean usePrior, double beta, String matrixfile) {
    this(jsgppJNI.new_LearnerSGDEOnOff__SWIG_0(RegularGridConfiguration.getCPtr(gridConfig), gridConfig, AdpativityConfiguration.getCPtr(adaptivityConfig), adaptivityConfig, RegularizationConfiguration.getCPtr(regularizationConfig), regularizationConfig, DensityEstimationConfiguration.getCPtr(densityEstimationConfig), densityEstimationConfig, Dataset.getCPtr(trainData), trainData, Dataset.getCPtr(testData), testData, Dataset.getCPtr(validationData), validationData, DataVector.getCPtr(classLabels), classLabels, classNumber, usePrior, beta, matrixfile), true);
  }

  public LearnerSGDEOnOff(RegularGridConfiguration gridConfig, AdpativityConfiguration adaptivityConfig, RegularizationConfiguration regularizationConfig, DensityEstimationConfiguration densityEstimationConfig, Dataset trainData, Dataset testData, Dataset validationData, DataVector classLabels, long classNumber, boolean usePrior, double beta) {
    this(jsgppJNI.new_LearnerSGDEOnOff__SWIG_1(RegularGridConfiguration.getCPtr(gridConfig), gridConfig, AdpativityConfiguration.getCPtr(adaptivityConfig), adaptivityConfig, RegularizationConfiguration.getCPtr(regularizationConfig), regularizationConfig, DensityEstimationConfiguration.getCPtr(densityEstimationConfig), densityEstimationConfig, Dataset.getCPtr(trainData), trainData, Dataset.getCPtr(testData), testData, Dataset.getCPtr(validationData), validationData, DataVector.getCPtr(classLabels), classLabels, classNumber, usePrior, beta), true);
  }

  public void train(long batchSize, long maxDataPasses, String refType, String refMonitor, long refPeriod, double accDeclineThreshold, long accDeclineBufferSize, long minRefInterval, boolean enableCv, long nextCvStep) {
    jsgppJNI.LearnerSGDEOnOff_train__SWIG_0(swigCPtr, this, batchSize, maxDataPasses, refType, refMonitor, refPeriod, accDeclineThreshold, accDeclineBufferSize, minRefInterval, enableCv, nextCvStep);
  }

  public void train(Dataset dataset, boolean doCv, SWIGTYPE_p_std__vectorT_std__pairT_std__listT_size_t_t_size_t_t_t refineCoarse) {
    jsgppJNI.LearnerSGDEOnOff_train__SWIG_1(swigCPtr, this, Dataset.getCPtr(dataset), dataset, doCv, SWIGTYPE_p_std__vectorT_std__pairT_std__listT_size_t_t_size_t_t_t.getCPtr(refineCoarse));
  }

  public void train(Dataset dataset, boolean doCv) {
    jsgppJNI.LearnerSGDEOnOff_train__SWIG_2(swigCPtr, this, Dataset.getCPtr(dataset), dataset, doCv);
  }

  public void train(Dataset dataset) {
    jsgppJNI.LearnerSGDEOnOff_train__SWIG_3(swigCPtr, this, Dataset.getCPtr(dataset), dataset);
  }

  public void train(SWIGTYPE_p_std__vectorT_std__pairT_sgpp__base__DataMatrix_p_double_t_t trainDataClasses, boolean doCv, SWIGTYPE_p_std__vectorT_std__pairT_std__listT_size_t_t_size_t_t_t refineCoarse) {
    jsgppJNI.LearnerSGDEOnOff_train__SWIG_4(swigCPtr, this, SWIGTYPE_p_std__vectorT_std__pairT_sgpp__base__DataMatrix_p_double_t_t.getCPtr(trainDataClasses), doCv, SWIGTYPE_p_std__vectorT_std__pairT_std__listT_size_t_t_size_t_t_t.getCPtr(refineCoarse));
  }

  public void train(SWIGTYPE_p_std__vectorT_std__pairT_sgpp__base__DataMatrix_p_double_t_t trainDataClasses, boolean doCv) {
    jsgppJNI.LearnerSGDEOnOff_train__SWIG_5(swigCPtr, this, SWIGTYPE_p_std__vectorT_std__pairT_sgpp__base__DataMatrix_p_double_t_t.getCPtr(trainDataClasses), doCv);
  }

  public void train(SWIGTYPE_p_std__vectorT_std__pairT_sgpp__base__DataMatrix_p_double_t_t trainDataClasses) {
    jsgppJNI.LearnerSGDEOnOff_train__SWIG_6(swigCPtr, this, SWIGTYPE_p_std__vectorT_std__pairT_sgpp__base__DataMatrix_p_double_t_t.getCPtr(trainDataClasses));
  }

  public double getAccuracy() {
    return jsgppJNI.LearnerSGDEOnOff_getAccuracy(swigCPtr, this);
  }

  public void predict(DataMatrix test, DataVector classLabels) {
    jsgppJNI.LearnerSGDEOnOff_predict__SWIG_0(swigCPtr, this, DataMatrix.getCPtr(test), test, DataVector.getCPtr(classLabels), classLabels);
  }

  public int predict(DataVector p) {
    return jsgppJNI.LearnerSGDEOnOff_predict__SWIG_1(swigCPtr, this, DataVector.getCPtr(p), p);
  }

  public double getError(Dataset dataset) {
    return jsgppJNI.LearnerSGDEOnOff_getError(swigCPtr, this, Dataset.getCPtr(dataset), dataset);
  }

  public void getAvgErrors(DataVector result) {
    jsgppJNI.LearnerSGDEOnOff_getAvgErrors(swigCPtr, this, DataVector.getCPtr(result), result);
  }

  public void storeResults() {
    jsgppJNI.LearnerSGDEOnOff_storeResults(swigCPtr, this);
  }

  public void getDensities(DataVector point, DataVector density) {
    jsgppJNI.LearnerSGDEOnOff_getDensities(swigCPtr, this, DataVector.getCPtr(point), point, DataVector.getCPtr(density), density);
  }

  public void setCrossValidationParameters(int lambdaStep, double lambdaStart, double lambdaEnd, DataMatrix test, DataMatrix testRes, boolean logscale) {
    jsgppJNI.LearnerSGDEOnOff_setCrossValidationParameters(swigCPtr, this, lambdaStep, lambdaStart, lambdaEnd, DataMatrix.getCPtr(test), test, DataMatrix.getCPtr(testRes), testRes, logscale);
  }

  public long getNumClasses() {
    return jsgppJNI.LearnerSGDEOnOff_getNumClasses(swigCPtr, this);
  }

  public SWIGTYPE_p_std__vectorT_std__pairT_std__unique_ptrT_sgpp__datadriven__DBMatOnlineDE_t_double_t_t getDensityFunctions() {
    return new SWIGTYPE_p_std__vectorT_std__pairT_std__unique_ptrT_sgpp__datadriven__DBMatOnlineDE_t_double_t_t(jsgppJNI.LearnerSGDEOnOff_getDensityFunctions(swigCPtr, this), false);
  }

}
