/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package sgpp;

public class BoundingBox {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected BoundingBox(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(BoundingBox obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        jsgppJNI.delete_BoundingBox(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public BoundingBox(long dimension) {
    this(jsgppJNI.new_BoundingBox__SWIG_0(dimension), true);
  }

  public BoundingBox(BoundingBox1DVector boundingBox1Ds) {
    this(jsgppJNI.new_BoundingBox__SWIG_1(BoundingBox1DVector.getCPtr(boundingBox1Ds), boundingBox1Ds), true);
  }

  public void setBoundary(long d, BoundingBox1D boundingBox1D) {
    jsgppJNI.BoundingBox_setBoundary(swigCPtr, this, d, BoundingBox1D.getCPtr(boundingBox1D), boundingBox1D);
  }

  public BoundingBox1D getBoundary(long d) {
    return new BoundingBox1D(jsgppJNI.BoundingBox_getBoundary(swigCPtr, this, d), false);
  }

  public long getDimension() {
    return jsgppJNI.BoundingBox_getDimension(swigCPtr, this);
  }

  public double getIntervalWidth(long d) {
    return jsgppJNI.BoundingBox_getIntervalWidth(swigCPtr, this, d);
  }

  public double getIntervalOffset(long d) {
    return jsgppJNI.BoundingBox_getIntervalOffset(swigCPtr, this, d);
  }

  public boolean isUnitCube() {
    return jsgppJNI.BoundingBox_isUnitCube(swigCPtr, this);
  }

  public void transformPointToBoundingBox(DataVector point) {
    jsgppJNI.BoundingBox_transformPointToBoundingBox__SWIG_0(swigCPtr, this, DataVector.getCPtr(point), point);
  }

  public double transformPointToBoundingBox(long d, double point) {
    return jsgppJNI.BoundingBox_transformPointToBoundingBox__SWIG_1(swigCPtr, this, d, point);
  }

  public void transformPointToUnitCube(DataVector point) {
    jsgppJNI.BoundingBox_transformPointToUnitCube__SWIG_0(swigCPtr, this, DataVector.getCPtr(point), point);
  }

  public double transformPointToUnitCube(long d, double point) {
    return jsgppJNI.BoundingBox_transformPointToUnitCube__SWIG_1(swigCPtr, this, d, point);
  }

  public boolean isContainingPoint(DataVector point) {
    return jsgppJNI.BoundingBox_isContainingPoint__SWIG_0(swigCPtr, this, DataVector.getCPtr(point), point);
  }

  public boolean isContainingPoint(long d, double point) {
    return jsgppJNI.BoundingBox_isContainingPoint__SWIG_1(swigCPtr, this, d, point);
  }

  public boolean hasDirichletBoundaryLeft(long d) {
    return jsgppJNI.BoundingBox_hasDirichletBoundaryLeft(swigCPtr, this, d);
  }

  public boolean hasDirichletBoundaryRight(long d) {
    return jsgppJNI.BoundingBox_hasDirichletBoundaryRight(swigCPtr, this, d);
  }

  public String serialize(int version) {
    return jsgppJNI.BoundingBox_serialize__SWIG_0(swigCPtr, this, version);
  }

  public String serialize() {
    return jsgppJNI.BoundingBox_serialize__SWIG_1(swigCPtr, this);
  }

  public void serialize(SWIGTYPE_p_std__ostream ostream, int version) {
    jsgppJNI.BoundingBox_serialize__SWIG_2(swigCPtr, this, SWIGTYPE_p_std__ostream.getCPtr(ostream), version);
  }

  public void serialize(SWIGTYPE_p_std__ostream ostream) {
    jsgppJNI.BoundingBox_serialize__SWIG_3(swigCPtr, this, SWIGTYPE_p_std__ostream.getCPtr(ostream));
  }

  public void unserialize(String istr, int version) {
    jsgppJNI.BoundingBox_unserialize__SWIG_0(swigCPtr, this, istr, version);
  }

  public void unserialize(SWIGTYPE_p_std__istream istr, int version) {
    jsgppJNI.BoundingBox_unserialize__SWIG_1(swigCPtr, this, SWIGTYPE_p_std__istream.getCPtr(istr), version);
  }

  public void toString(SWIGTYPE_p_std__string text) {
    jsgppJNI.BoundingBox_toString__SWIG_0(swigCPtr, this, SWIGTYPE_p_std__string.getCPtr(text));
  }

  public String toString() {
    return jsgppJNI.BoundingBox_toString__SWIG_1(swigCPtr, this);
  }

}
