/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package sgpp;

public class ShufflingFunctor {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected ShufflingFunctor(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(ShufflingFunctor obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        jsgppJNI.delete_ShufflingFunctor(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public ShufflingFunctor __assign__(ShufflingFunctor rhs) {
    return new ShufflingFunctor(jsgppJNI.ShufflingFunctor___assign__(swigCPtr, this, ShufflingFunctor.getCPtr(rhs), rhs), false);
  }

  public ShufflingFunctor clone() {
    long cPtr = jsgppJNI.ShufflingFunctor_clone(swigCPtr, this);
    return (cPtr == 0) ? null : new ShufflingFunctor(cPtr, false);
  }

  public void shuffle(Dataset data, SizeTVector indices) {
    jsgppJNI.ShufflingFunctor_shuffle(swigCPtr, this, Dataset.getCPtr(data), data, SizeTVector.getCPtr(indices), indices);
  }

  public long getSeed() {
    return jsgppJNI.ShufflingFunctor_getSeed(swigCPtr, this);
  }

  public void setSeed(long seed) {
    jsgppJNI.ShufflingFunctor_setSeed(swigCPtr, this, seed);
  }

}
