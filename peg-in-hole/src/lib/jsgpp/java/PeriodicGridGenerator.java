/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package sgpp;

public class PeriodicGridGenerator extends GridGenerator {
  private transient long swigCPtr;

  protected PeriodicGridGenerator(long cPtr, boolean cMemoryOwn) {
    super(jsgppJNI.PeriodicGridGenerator_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(PeriodicGridGenerator obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        jsgppJNI.delete_PeriodicGridGenerator(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public PeriodicGridGenerator(GridStorage storage) {
    this(jsgppJNI.new_PeriodicGridGenerator(GridStorage.getCPtr(storage), storage), true);
  }

  public void regular(long level) {
    jsgppJNI.PeriodicGridGenerator_regular__SWIG_0(swigCPtr, this, level);
  }

  public void regular(long level, double T) {
    jsgppJNI.PeriodicGridGenerator_regular__SWIG_1(swigCPtr, this, level, T);
  }

  public void full(long level) {
    jsgppJNI.PeriodicGridGenerator_full(swigCPtr, this, level);
  }

  public void refine(RefinementFunctor func) {
    jsgppJNI.PeriodicGridGenerator_refine(swigCPtr, this, RefinementFunctor.getCPtr(func), func);
  }

  public void cliques(long level, long clique_size) {
    jsgppJNI.PeriodicGridGenerator_cliques__SWIG_0(swigCPtr, this, level, clique_size);
  }

  public void cliques(long level, long clique_size, double T) {
    jsgppJNI.PeriodicGridGenerator_cliques__SWIG_1(swigCPtr, this, level, clique_size, T);
  }

  public long getNumberOfRefinablePoints() {
    return jsgppJNI.PeriodicGridGenerator_getNumberOfRefinablePoints(swigCPtr, this);
  }

  public void coarsen(CoarseningFunctor func, DataVector alpha) {
    jsgppJNI.PeriodicGridGenerator_coarsen(swigCPtr, this, CoarseningFunctor.getCPtr(func), func, DataVector.getCPtr(alpha), alpha);
  }

  public void coarsenNFirstOnly(CoarseningFunctor func, DataVector alpha, long numFirstOnly) {
    jsgppJNI.PeriodicGridGenerator_coarsenNFirstOnly(swigCPtr, this, CoarseningFunctor.getCPtr(func), func, DataVector.getCPtr(alpha), alpha, numFirstOnly);
  }

  public long getNumberOfRemovablePoints() {
    return jsgppJNI.PeriodicGridGenerator_getNumberOfRemovablePoints(swigCPtr, this);
  }

  public void refineMaxLevel(RefinementFunctor func, long maxLevel) {
    jsgppJNI.PeriodicGridGenerator_refineMaxLevel(swigCPtr, this, RefinementFunctor.getCPtr(func), func, maxLevel);
  }

  public long getNumberOfRefinablePointsToMaxLevel(long maxLevel) {
    return jsgppJNI.PeriodicGridGenerator_getNumberOfRefinablePointsToMaxLevel(swigCPtr, this, maxLevel);
  }

}
