/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package sgpp;

public class SWIGTYPE_p_std__unordered_mapT_sgpp__base__HashGridPoint_p_size_t_sgpp__base__HashGridPointPointerHashFunctor_sgpp__base__HashGridPointPointerEqualityFunctor_t__iterator {
  private transient long swigCPtr;

  protected SWIGTYPE_p_std__unordered_mapT_sgpp__base__HashGridPoint_p_size_t_sgpp__base__HashGridPointPointerHashFunctor_sgpp__base__HashGridPointPointerEqualityFunctor_t__iterator(long cPtr, @SuppressWarnings("unused") boolean futureUse) {
    swigCPtr = cPtr;
  }

  protected SWIGTYPE_p_std__unordered_mapT_sgpp__base__HashGridPoint_p_size_t_sgpp__base__HashGridPointPointerHashFunctor_sgpp__base__HashGridPointPointerEqualityFunctor_t__iterator() {
    swigCPtr = 0;
  }

  protected static long getCPtr(SWIGTYPE_p_std__unordered_mapT_sgpp__base__HashGridPoint_p_size_t_sgpp__base__HashGridPointPointerHashFunctor_sgpp__base__HashGridPointPointerEqualityFunctor_t__iterator obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }
}

