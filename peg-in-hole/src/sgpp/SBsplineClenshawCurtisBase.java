/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package sgpp;

public class SBsplineClenshawCurtisBase extends SBasis {
  private transient long swigCPtr;

  protected SBsplineClenshawCurtisBase(long cPtr, boolean cMemoryOwn) {
    super(jsgppJNI.SBsplineClenshawCurtisBase_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(SBsplineClenshawCurtisBase obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        jsgppJNI.delete_SBsplineClenshawCurtisBase(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public SBsplineClenshawCurtisBase() {
    this(jsgppJNI.new_SBsplineClenshawCurtisBase__SWIG_0(), true);
  }

  public SBsplineClenshawCurtisBase(long degree) {
    this(jsgppJNI.new_SBsplineClenshawCurtisBase__SWIG_1(degree), true);
  }

  public double nonUniformBSpline(double x, long p, long k) {
    return jsgppJNI.SBsplineClenshawCurtisBase_nonUniformBSpline(swigCPtr, this, x, p, k);
  }

  public double nonUniformBSplineDx(double x, long p, long k) {
    return jsgppJNI.SBsplineClenshawCurtisBase_nonUniformBSplineDx(swigCPtr, this, x, p, k);
  }

  public double nonUniformBSplineDxDx(double x, long p, long k) {
    return jsgppJNI.SBsplineClenshawCurtisBase_nonUniformBSplineDxDx(swigCPtr, this, x, p, k);
  }

  public double clenshawCurtisPoint(long l, long i) {
    return jsgppJNI.SBsplineClenshawCurtisBase_clenshawCurtisPoint(swigCPtr, this, l, i);
  }

  public void constructKnots(long l, long i) {
    jsgppJNI.SBsplineClenshawCurtisBase_constructKnots(swigCPtr, this, l, i);
  }

  public double eval(long l, long i, double x) {
    return jsgppJNI.SBsplineClenshawCurtisBase_eval(swigCPtr, this, l, i, x);
  }

  public double evalDx(long l, long i, double x) {
    return jsgppJNI.SBsplineClenshawCurtisBase_evalDx(swigCPtr, this, l, i, x);
  }

  public double evalDxDx(long l, long i, double x) {
    return jsgppJNI.SBsplineClenshawCurtisBase_evalDxDx(swigCPtr, this, l, i, x);
  }

  public long getDegree() {
    return jsgppJNI.SBsplineClenshawCurtisBase_getDegree(swigCPtr, this);
  }

}
