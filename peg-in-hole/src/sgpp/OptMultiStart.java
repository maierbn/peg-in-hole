/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package sgpp;

public class OptMultiStart extends OptUnconstrainedOptimizer {
  private transient long swigCPtr;

  protected OptMultiStart(long cPtr, boolean cMemoryOwn) {
    super(jsgppJNI.OptMultiStart_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(OptMultiStart obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        jsgppJNI.delete_OptMultiStart(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public OptMultiStart(OptScalarFunction f, long maxFcnEvalCount, long populationSize) {
    this(jsgppJNI.new_OptMultiStart__SWIG_0(OptScalarFunction.getCPtr(f), f, maxFcnEvalCount, populationSize), true);
  }

  public OptMultiStart(OptScalarFunction f, long maxFcnEvalCount) {
    this(jsgppJNI.new_OptMultiStart__SWIG_1(OptScalarFunction.getCPtr(f), f, maxFcnEvalCount), true);
  }

  public OptMultiStart(OptScalarFunction f) {
    this(jsgppJNI.new_OptMultiStart__SWIG_2(OptScalarFunction.getCPtr(f), f), true);
  }

  public OptMultiStart(OptUnconstrainedOptimizer optimizer, long maxFcnEvalCount, long populationSize) {
    this(jsgppJNI.new_OptMultiStart__SWIG_3(OptUnconstrainedOptimizer.getCPtr(optimizer), optimizer, maxFcnEvalCount, populationSize), true);
  }

  public OptMultiStart(OptUnconstrainedOptimizer optimizer, long maxFcnEvalCount) {
    this(jsgppJNI.new_OptMultiStart__SWIG_4(OptUnconstrainedOptimizer.getCPtr(optimizer), optimizer, maxFcnEvalCount), true);
  }

  public OptMultiStart(OptUnconstrainedOptimizer optimizer) {
    this(jsgppJNI.new_OptMultiStart__SWIG_5(OptUnconstrainedOptimizer.getCPtr(optimizer), optimizer), true);
  }

  public OptMultiStart(OptMultiStart other) {
    this(jsgppJNI.new_OptMultiStart__SWIG_6(OptMultiStart.getCPtr(other), other), true);
  }

  public void optimize() {
    jsgppJNI.OptMultiStart_optimize(swigCPtr, this);
  }

  public long getPopulationSize() {
    return jsgppJNI.OptMultiStart_getPopulationSize(swigCPtr, this);
  }

  public void setPopulationSize(long populationSize) {
    jsgppJNI.OptMultiStart_setPopulationSize(swigCPtr, this, populationSize);
  }

  public SizeTVector getHistoryOfInnerIterations() {
    return new SizeTVector(jsgppJNI.OptMultiStart_getHistoryOfInnerIterations(swigCPtr, this), false);
  }

  public void clone(SWIGTYPE_p_std__unique_ptrT_sgpp__optimization__optimizer__UnconstrainedOptimizer_t clone) {
    jsgppJNI.OptMultiStart_clone(swigCPtr, this, SWIGTYPE_p_std__unique_ptrT_sgpp__optimization__optimizer__UnconstrainedOptimizer_t.getCPtr(clone));
  }

  public final static long DEFAULT_MAX_FCN_EVAL_COUNT = jsgppJNI.OptMultiStart_DEFAULT_MAX_FCN_EVAL_COUNT_get();
}
