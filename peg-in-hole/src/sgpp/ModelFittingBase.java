/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package sgpp;

public class ModelFittingBase {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected ModelFittingBase(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(ModelFittingBase obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        jsgppJNI.delete_ModelFittingBase(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void fit(Dataset dataset) {
    jsgppJNI.ModelFittingBase_fit(swigCPtr, this, Dataset.getCPtr(dataset), dataset);
  }

  public boolean refine() {
    return jsgppJNI.ModelFittingBase_refine(swigCPtr, this);
  }

  public void update(Dataset dataset) {
    jsgppJNI.ModelFittingBase_update(swigCPtr, this, Dataset.getCPtr(dataset), dataset);
  }

  public double evaluate(DataVector sample) {
    return jsgppJNI.ModelFittingBase_evaluate__SWIG_0(swigCPtr, this, DataVector.getCPtr(sample), sample);
  }

  public void evaluate(DataMatrix samples, DataVector results) {
    jsgppJNI.ModelFittingBase_evaluate__SWIG_1(swigCPtr, this, DataMatrix.getCPtr(samples), samples, DataVector.getCPtr(results), results);
  }

  public Grid getGrid() {
    return new Grid(jsgppJNI.ModelFittingBase_getGrid(swigCPtr, this), false);
  }

  public DataVector getSurpluses() {
    return new DataVector(jsgppJNI.ModelFittingBase_getSurpluses(swigCPtr, this), false);
  }

  public FitterConfiguration getFitterConfiguration() {
    return new FitterConfiguration(jsgppJNI.ModelFittingBase_getFitterConfiguration(swigCPtr, this), false);
  }

}
