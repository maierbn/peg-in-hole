/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package sgpp;

public class BatchConfiguration {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected BatchConfiguration(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(BatchConfiguration obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        jsgppJNI.delete_BatchConfiguration(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setFilename_(String value) {
    jsgppJNI.BatchConfiguration_filename__set(swigCPtr, this, value);
  }

  public String getFilename_() {
    return jsgppJNI.BatchConfiguration_filename__get(swigCPtr, this);
  }

  public void setBatchsize_(long value) {
    jsgppJNI.BatchConfiguration_batchsize__set(swigCPtr, this, value);
  }

  public long getBatchsize_() {
    return jsgppJNI.BatchConfiguration_batchsize__get(swigCPtr, this);
  }

  public void setSamples_(long value) {
    jsgppJNI.BatchConfiguration_samples__set(swigCPtr, this, value);
  }

  public long getSamples_() {
    return jsgppJNI.BatchConfiguration_samples__get(swigCPtr, this);
  }

  public void setSeed_(int value) {
    jsgppJNI.BatchConfiguration_seed__set(swigCPtr, this, value);
  }

  public int getSeed_() {
    return jsgppJNI.BatchConfiguration_seed__get(swigCPtr, this);
  }

  public void setWMode_(int value) {
    jsgppJNI.BatchConfiguration_wMode__set(swigCPtr, this, value);
  }

  public int getWMode_() {
    return jsgppJNI.BatchConfiguration_wMode__get(swigCPtr, this);
  }

  public void setWArgument_(double value) {
    jsgppJNI.BatchConfiguration_wArgument__set(swigCPtr, this, value);
  }

  public double getWArgument_() {
    return jsgppJNI.BatchConfiguration_wArgument__get(swigCPtr, this);
  }

  public void setRefineEvery_(long value) {
    jsgppJNI.BatchConfiguration_refineEvery__set(swigCPtr, this, value);
  }

  public long getRefineEvery_() {
    return jsgppJNI.BatchConfiguration_refineEvery__get(swigCPtr, this);
  }

  public void setVerbose_(boolean value) {
    jsgppJNI.BatchConfiguration_verbose__set(swigCPtr, this, value);
  }

  public boolean getVerbose_() {
    return jsgppJNI.BatchConfiguration_verbose__get(swigCPtr, this);
  }

  public void setStack_(long value) {
    jsgppJNI.BatchConfiguration_stack__set(swigCPtr, this, value);
  }

  public long getStack_() {
    return jsgppJNI.BatchConfiguration_stack__get(swigCPtr, this);
  }

  public void setTestsize_(long value) {
    jsgppJNI.BatchConfiguration_testsize__set(swigCPtr, this, value);
  }

  public long getTestsize_() {
    return jsgppJNI.BatchConfiguration_testsize__get(swigCPtr, this);
  }

  public void setLambda_(double value) {
    jsgppJNI.BatchConfiguration_lambda__set(swigCPtr, this, value);
  }

  public double getLambda_() {
    return jsgppJNI.BatchConfiguration_lambda__get(swigCPtr, this);
  }

  public BatchConfiguration() {
    this(jsgppJNI.new_BatchConfiguration(), true);
  }

}
